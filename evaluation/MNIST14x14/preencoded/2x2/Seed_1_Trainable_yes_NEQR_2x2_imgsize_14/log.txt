Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_NEQR_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_NEQR_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1058, -0.9152, -0.3012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1523, -0.9052, -0.3477, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1969, -0.9038, -0.3915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2393, -0.8841, -0.4344, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2762, -0.8801, -0.4726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3105, -0.8666, -0.5027, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3489, -0.8746, -0.5398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3818, -0.9018, -0.5724, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4088, -0.9202, -0.5982, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4332, -0.9339, -0.6208, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4717, -0.9518, -0.6531, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5135, -0.9600, -0.6914, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5538, -0.9666, -0.7281, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5917, -0.9755, -0.7627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6226, -0.9855, -0.7902, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6558, -0.9843, -0.8134, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6933, -0.9833, -0.8403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7379, -1.0022, -0.8780, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7630, -1.0207, -0.9118, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.325000. Loss: 6.094172. Time: 33.627782
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.480000, Val Loss: 3.829055 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8429, -1.0647, -0.9698, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8882, -1.0809, -0.9976, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9289, -1.0811, -1.0373, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9600, -1.0879, -1.0744, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9844, -1.0965, -1.1027, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0095, -1.1154, -1.1331, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0300, -1.1334, -1.1545, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0612, -1.1556, -1.1808, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0879, -1.1757, -1.2087, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1074, -1.1766, -1.2211, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1339, -1.1710, -1.2364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1534, -1.1656, -1.2509, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1585, -1.1642, -1.2736, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1526, -1.1594, -1.2911, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1656, -1.1581, -1.2950, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1814, -1.1592, -1.3010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1941, -1.1604, -1.2999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1970, -1.1663, -1.2984, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2119, -1.1637, -1.3043, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.555000. Loss: 3.024500. Time: 33.801728
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.560000, Val Loss: 3.005414 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2731, -1.1730, -1.3523, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3073, -1.1647, -1.3897, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3401, -1.1604, -1.4139, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3638, -1.1696, -1.4306, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3674, -1.1643, -1.4361, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3744, -1.1632, -1.4340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3757, -1.1598, -1.4264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3873, -1.1788, -1.4321, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4038, -1.1822, -1.4318, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3946, -1.1893, -1.4216, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3871, -1.1904, -1.4142, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3854, -1.1829, -1.4154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3829, -1.1923, -1.4179, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3872, -1.2013, -1.4220, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3877, -1.2003, -1.4266, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3706, -1.1950, -1.4195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3545, -1.1920, -1.4162, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3458, -1.1788, -1.4061, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3394, -1.1644, -1.4002, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.565000. Loss: 2.480747. Time: 34.104647
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.640000, Val Loss: 2.989802 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3226, -1.1436, -1.3987, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3228, -1.1305, -1.4019, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3258, -1.1020, -1.4046, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3313, -1.0740, -1.4048, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3335, -1.0588, -1.4038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3350, -1.0428, -1.4085, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3323, -1.0236, -1.4079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3234, -1.0075, -1.4097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3105, -0.9961, -1.4263, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2998, -0.9895, -1.4450, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3007, -0.9886, -1.4582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3093, -0.9985, -1.4696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3231, -1.0070, -1.4821, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3397, -1.0204, -1.4861, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3412, -1.0316, -1.4844, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3315, -1.0289, -1.4795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3263, -1.0127, -1.4769, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3266, -0.9942, -1.4770, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3437, -0.9774, -1.4656, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.645000. Loss: 2.142126. Time: 33.828668
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.720000, Val Loss: 1.750057 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3443, -0.9666, -1.4486, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3482, -0.9700, -1.4506, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3505, -0.9785, -1.4496, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3493, -0.9839, -1.4353, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3540, -0.9876, -1.4189, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3838, -0.9830, -1.4175, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4214, -0.9705, -1.4248, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4443, -0.9477, -1.4323, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4513, -0.9336, -1.4423, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4528, -0.9402, -1.4525, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4587, -0.9612, -1.4576, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4584, -0.9839, -1.4509, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4682, -1.0030, -1.4434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4657, -1.0243, -1.4352, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4555, -1.0380, -1.4221, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4488, -1.0434, -1.4141, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4543, -1.0515, -1.4110, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4646, -1.0758, -1.4210, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4617, -1.1008, -1.4372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.570000. Loss: 3.090249. Time: 33.967459
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.640000, Val Loss: 2.247545 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4538, -1.1082, -1.4620, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4602, -1.0882, -1.4694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4514, -1.0717, -1.4638, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4447, -1.0597, -1.4597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4367, -1.0514, -1.4542, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4317, -1.0452, -1.4394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4391, -1.0106, -1.4337, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4531, -0.9842, -1.4389, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4576, -0.9674, -1.4472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4551, -0.9508, -1.4594, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4699, -0.9362, -1.4874, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4707, -0.9394, -1.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4670, -0.9661, -1.5460, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4604, -0.9999, -1.5539, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4622, -1.0262, -1.5477, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4649, -1.0431, -1.5371, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4660, -1.0471, -1.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4753, -1.0477, -1.5223, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4800, -1.0604, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.645000. Loss: 2.652585. Time: 33.899252
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.740000, Val Loss: 1.278446 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4888, -1.0810, -1.5456, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4913, -1.0911, -1.5443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4847, -1.0885, -1.5317, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4732, -1.0844, -1.5122, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4710, -1.0966, -1.5017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4665, -1.1014, -1.4975, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4567, -1.0990, -1.4989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4506, -1.1037, -1.5058, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4445, -1.1112, -1.5221, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4360, -1.1179, -1.5296, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4347, -1.1097, -1.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4351, -1.1082, -1.5262, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4373, -1.1007, -1.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4426, -1.0946, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4546, -1.0754, -1.5243, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4633, -1.0749, -1.5090, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4811, -1.0898, -1.4995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4794, -1.1064, -1.4892, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4782, -1.1253, -1.4803, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.680000. Loss: 2.190345. Time: 33.898996
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.630000, Val Loss: 2.602422 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4941, -1.1263, -1.4827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4973, -1.1105, -1.5010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5061, -1.0861, -1.5192, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5186, -1.0536, -1.5226, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5155, -1.0340, -1.5242, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5096, -1.0342, -1.5324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5081, -1.0302, -1.5515, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5042, -1.0148, -1.5586, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4931, -0.9966, -1.5594, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4825, -0.9670, -1.5572, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4721, -0.9512, -1.5570, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4574, -0.9581, -1.5541, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4598, -0.9519, -1.5531, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4620, -0.9377, -1.5494, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4652, -0.9267, -1.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4686, -0.9181, -1.5251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4513, -0.9220, -1.5252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4454, -0.9223, -1.5179, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4658, -0.9136, -1.5110, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.605000. Loss: 4.363080. Time: 33.924888
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.470000, Val Loss: 5.334739 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4836, -0.8967, -1.5080, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4829, -0.8808, -1.5154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4811, -0.8696, -1.5145, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4758, -0.8627, -1.5020, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4714, -0.8576, -1.4992, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4641, -0.8690, -1.5004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4595, -0.8815, -1.5017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4817, -0.9052, -1.5321, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5015, -0.9193, -1.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -0.9268, -1.5908, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5070, -0.9539, -1.6152, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5048, -0.9710, -1.6197, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -0.9765, -1.6154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4990, -0.9829, -1.6043, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4950, -0.9797, -1.5910, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4956, -0.9667, -1.5670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4939, -0.9541, -1.5472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4887, -0.9496, -1.5373, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4843, -0.9606, -1.5348, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.655000. Loss: 3.358336. Time: 33.877811
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.730000, Val Loss: 2.412733 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4936, -1.0102, -1.5186, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5003, -1.0312, -1.5200, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4969, -1.0651, -1.5229, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4921, -1.0837, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4954, -1.1039, -1.5370, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5102, -1.1400, -1.5513, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5180, -1.1580, -1.5719, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5158, -1.1598, -1.5766, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5048, -1.1704, -1.5792, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4990, -1.1758, -1.5886, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5010, -1.1763, -1.5968, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5113, -1.1559, -1.5866, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5199, -1.1515, -1.5878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5262, -1.1573, -1.5709, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5239, -1.1737, -1.5475, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5189, -1.1847, -1.5256, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5140, -1.2004, -1.5096, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5149, -1.2030, -1.4995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -1.1998, -1.4980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.675000. Loss: 2.919446. Time: 33.688073
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.650000, Val Loss: 2.909712 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5149, -1.1766, -1.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5177, -1.1424, -1.5163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5253, -1.1186, -1.5304, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5180, -1.0985, -1.5434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5076, -1.0783, -1.5644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4957, -1.0571, -1.5719, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4708, -1.0427, -1.5650, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4695, -1.0195, -1.5701, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4862, -0.9962, -1.5740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5005, -0.9982, -1.5713, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5115, -1.0114, -1.5526, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5266, -1.0182, -1.5395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -1.0063, -1.5408, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5645, -1.0045, -1.5346, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5679, -0.9985, -1.5423, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5775, -0.9889, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5751, -0.9829, -1.5561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -0.9833, -1.5626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5369, -0.9888, -1.5577, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.600000. Loss: 3.603124. Time: 33.910228
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.640000, Val Loss: 3.799323 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4783, -0.9947, -1.5248, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4625, -0.9877, -1.5128, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4641, -0.9796, -1.5096, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4628, -0.9763, -1.4998, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4530, -0.9880, -1.4917, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4573, -0.9982, -1.4869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4599, -1.0099, -1.4758, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4623, -1.0199, -1.4671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4786, -1.0203, -1.4869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4966, -1.0168, -1.5007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5130, -1.0209, -1.5212, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5445, -1.0156, -1.5431, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.0030, -1.5552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5885, -0.9965, -1.5842, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6092, -0.9904, -1.6079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6259, -0.9819, -1.6244, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6146, -0.9707, -1.6161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5805, -0.9652, -1.5912, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -0.9525, -1.5855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.695000. Loss: 3.445138. Time: 33.640643
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.640000, Val Loss: 4.447080 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4795, -0.9609, -1.5465, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4628, -0.9771, -1.5262, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4645, -1.0133, -1.5214, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4740, -1.0380, -1.5232, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4869, -1.0479, -1.5314, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4982, -1.0599, -1.5252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5118, -1.0769, -1.5088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -1.0817, -1.4959, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5344, -1.0977, -1.4933, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5593, -1.1089, -1.4963, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5698, -1.1136, -1.4972, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5753, -1.1198, -1.4966, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5781, -1.1367, -1.4918, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5723, -1.1417, -1.4881, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5717, -1.1562, -1.4928, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5463, -1.1805, -1.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5208, -1.1825, -1.5179, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5025, -1.1727, -1.5360, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4953, -1.1603, -1.5526, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.685000. Loss: 2.975342. Time: 33.719453
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.740000, Val Loss: 2.083469 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4780, -1.1388, -1.5487, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4690, -1.1277, -1.5450, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4610, -1.1200, -1.5508, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4499, -1.1192, -1.5512, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4539, -1.1326, -1.5587, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4563, -1.1349, -1.5673, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4518, -1.1342, -1.5687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4451, -1.1056, -1.5646, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4622, -1.0800, -1.5808, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4740, -1.0802, -1.5826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4888, -1.0783, -1.5784, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5083, -1.0716, -1.5729, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5200, -1.0678, -1.5778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5249, -1.0675, -1.5809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5212, -1.0690, -1.5737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5221, -1.0725, -1.5668, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5337, -1.0683, -1.5625, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5370, -1.0660, -1.5622, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5426, -1.0661, -1.5555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.730000. Loss: 2.167107. Time: 33.915564
Validate after epoch 14 with seed 964979
Val Accuracy: 0.700000, Val Loss: 3.016988 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5508, -1.0702, -1.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5498, -1.0796, -1.5092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5495, -1.0824, -1.5046, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.0826, -1.5028, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5502, -1.0805, -1.4999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5443, -1.0612, -1.4816, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5290, -1.0547, -1.4777, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5035, -1.0328, -1.4668, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4912, -1.0188, -1.4901, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -0.9937, -1.5168, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4547, -0.9827, -1.5273, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4323, -0.9726, -1.5411, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4269, -0.9736, -1.5454, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4369, -0.9789, -1.5399, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4531, -0.9708, -1.5408, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4546, -0.9700, -1.5450, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4619, -0.9774, -1.5403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4749, -0.9854, -1.5342, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4719, -0.9925, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.740000. Loss: 2.594338. Time: 33.948094
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.650000, Val Loss: 3.415852 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4749, -1.0021, -1.4917, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4811, -1.0023, -1.4942, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4882, -1.0004, -1.5000, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5034, -0.9928, -1.5149, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5097, -0.9858, -1.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5189, -0.9777, -1.5010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5281, -0.9713, -1.4974, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -0.9646, -1.4955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5028, -0.9683, -1.5043, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4840, -0.9688, -1.5177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4762, -0.9669, -1.5389, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4760, -0.9654, -1.5568, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4821, -0.9661, -1.5655, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4865, -0.9623, -1.5706, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4869, -0.9519, -1.5738, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4821, -0.9266, -1.5763, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4792, -0.9117, -1.5778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4879, -0.9059, -1.5790, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5065, -0.9070, -1.5772, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.765000. Loss: 2.183069. Time: 33.890022
Validate after epoch 16 with seed 840036
Val Accuracy: 0.670000, Val Loss: 3.894327 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5465, -0.9497, -1.5684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5652, -0.9631, -1.5621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5909, -0.9824, -1.5542, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5980, -1.0108, -1.5494, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6133, -1.0262, -1.5492, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6113, -1.0339, -1.5562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6087, -1.0310, -1.5798, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5964, -1.0254, -1.5817, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5784, -1.0159, -1.5834, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5419, -1.0105, -1.5885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5210, -1.0034, -1.5877, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5184, -1.0061, -1.5826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5083, -1.0104, -1.5669, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5020, -1.0285, -1.5461, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4851, -1.0535, -1.5303, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4891, -1.0542, -1.5243, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4971, -1.0593, -1.5219, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.0666, -1.5103, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5338, -1.0728, -1.5003, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.690000. Loss: 3.681435. Time: 33.865919
Validate after epoch 17 with seed 180463
Val Accuracy: 0.630000, Val Loss: 3.037129 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5794, -1.0940, -1.5125, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5891, -1.1052, -1.5264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5907, -1.1118, -1.5557, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5993, -1.1140, -1.5798, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5986, -1.1201, -1.5919, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5793, -1.1380, -1.5838, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5717, -1.1540, -1.5814, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5659, -1.1501, -1.5643, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5502, -1.1331, -1.5368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5404, -1.1235, -1.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5345, -1.1160, -1.5024, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -1.1030, -1.4916, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5229, -1.0881, -1.4912, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5173, -1.0798, -1.4796, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.0771, -1.4714, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4970, -1.0789, -1.4493, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4797, -1.0950, -1.4512, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4826, -1.0922, -1.4700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4885, -1.0837, -1.4681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.745000. Loss: 2.261315. Time: 33.765911
Validate after epoch 18 with seed 575883
Val Accuracy: 0.680000, Val Loss: 3.431829 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4847, -1.0833, -1.5060, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4781, -1.0920, -1.5369, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4665, -1.0808, -1.5500, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4812, -1.0763, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4922, -1.0734, -1.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5032, -1.0741, -1.5666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5156, -1.0747, -1.5887, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5279, -1.0794, -1.6068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5446, -1.0914, -1.6056, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5609, -1.1069, -1.5970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5644, -1.1329, -1.5862, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5719, -1.1512, -1.5960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5720, -1.1712, -1.6097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5766, -1.1859, -1.6311, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5699, -1.1944, -1.6312, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -1.1981, -1.6265, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5414, -1.2008, -1.6118, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5239, -1.2099, -1.5769, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5170, -1.2342, -1.5468, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.710000. Loss: 3.176329. Time: 34.091049
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.730000, Val Loss: 3.421423 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5324, -1.2542, -1.5301, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5412, -1.2332, -1.5270, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5486, -1.2148, -1.5247, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -1.2065, -1.5446, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5867, -1.2118, -1.5858, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5901, -1.2119, -1.6023, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5580, -1.2038, -1.5843, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5436, -1.2006, -1.5756, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5301, -1.2067, -1.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5088, -1.2019, -1.5743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -1.1718, -1.5565, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5265, -1.1277, -1.5475, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5439, -1.1026, -1.5436, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5573, -1.0875, -1.5392, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5668, -1.0831, -1.5347, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5763, -1.0824, -1.5385, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5909, -1.0704, -1.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5950, -1.0626, -1.5760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5740, -1.0469, -1.5731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.650000. Loss: 3.333655. Time: 33.889166
Validate after epoch 20 with seed 822616
Val Accuracy: 0.790000, Val Loss: 2.193047 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5283, -0.9988, -1.5406, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5126, -0.9739, -1.5311, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5027, -0.9582, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4939, -0.9605, -1.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4884, -0.9668, -1.5394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4830, -0.9845, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4802, -1.0027, -1.5302, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4871, -1.0114, -1.5308, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5234, -1.0093, -1.5398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5619, -0.9894, -1.5563, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5955, -0.9684, -1.5701, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6184, -0.9547, -1.5785, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6217, -0.9456, -1.5828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6171, -0.9399, -1.5816, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5983, -0.9340, -1.5707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5799, -0.9221, -1.5408, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5696, -0.9222, -1.5214, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5553, -0.9244, -1.5132, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5387, -0.9230, -1.5069, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.740000. Loss: 3.144729. Time: 33.873935
Validate after epoch 21 with seed 519531
Val Accuracy: 0.730000, Val Loss: 2.494259 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5011, -0.9414, -1.4918, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4901, -0.9500, -1.4991, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4900, -0.9584, -1.5169, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4903, -0.9624, -1.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4904, -0.9652, -1.5451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4893, -0.9781, -1.5439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4833, -0.9899, -1.5359, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4705, -0.9910, -1.5189, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4587, -1.0020, -1.5012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4565, -1.0042, -1.4817, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4623, -0.9967, -1.4685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4706, -1.0025, -1.4777, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4858, -1.0167, -1.4848, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5108, -1.0289, -1.4989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5402, -1.0409, -1.5065, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5539, -1.0429, -1.5062, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5614, -1.0331, -1.5017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -1.0254, -1.5055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5637, -1.0201, -1.5040, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.755000. Loss: 2.256309. Time: 33.870118
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.730000, Val Loss: 3.460181 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5546, -1.0184, -1.5346, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -1.0041, -1.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5635, -0.9932, -1.5784, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -0.9769, -1.5742, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5511, -0.9559, -1.5546, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5440, -0.9330, -1.5489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -0.9150, -1.5442, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5483, -0.8964, -1.5444, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5385, -0.8891, -1.5351, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5235, -0.8940, -1.5218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5120, -0.9011, -1.5161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5002, -0.9004, -1.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4914, -0.8996, -1.5261, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4763, -0.8991, -1.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4540, -0.9013, -1.5147, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4455, -0.8938, -1.4939, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4538, -0.9063, -1.4753, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4663, -0.9133, -1.4752, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4812, -0.9160, -1.4845, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.730000. Loss: 2.850704. Time: 33.727933
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.770000, Val Loss: 2.610810 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5447, -0.9293, -1.5068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5633, -0.9310, -1.5187, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5713, -0.9390, -1.5279, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5785, -0.9444, -1.5365, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5898, -0.9624, -1.5461, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5919, -0.9747, -1.5551, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5881, -0.9798, -1.5713, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5874, -0.9810, -1.5846, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5860, -0.9863, -1.5873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5773, -0.9892, -1.5898, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5631, -0.9738, -1.5832, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5509, -0.9462, -1.5885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5481, -0.9249, -1.6157, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5451, -0.9239, -1.6303, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5336, -0.9274, -1.6106, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5332, -0.9301, -1.5943, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5330, -0.9383, -1.5852, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5169, -0.9725, -1.5636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5060, -0.9992, -1.5318, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.730000. Loss: 2.901450. Time: 33.853693
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.650000, Val Loss: 4.701563 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4982, -1.0252, -1.4666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5090, -1.0242, -1.4588, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5380, -1.0081, -1.4935, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5622, -1.0023, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5849, -1.0141, -1.5268, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5935, -1.0172, -1.5354, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5966, -1.0097, -1.5501, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5992, -0.9968, -1.5483, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5929, -0.9919, -1.5387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5754, -0.9962, -1.5734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5613, -1.0120, -1.6135, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5591, -1.0163, -1.6416, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5564, -1.0250, -1.6464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5463, -1.0219, -1.6479, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -1.0159, -1.6259, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5128, -1.0150, -1.5958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4987, -1.0148, -1.5634, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -1.0157, -1.5335, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4978, -1.0274, -1.5106, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.715000. Loss: 3.114494. Time: 34.110327
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.720000, Val Loss: 3.307671 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4984, -1.0229, -1.4909, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4935, -1.0231, -1.4746, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4919, -1.0155, -1.4635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -1.0105, -1.4621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4891, -1.0147, -1.4613, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4918, -1.0160, -1.4655, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4965, -1.0164, -1.4885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4985, -1.0076, -1.4829, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5095, -1.0157, -1.4977, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5238, -1.0198, -1.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5278, -1.0319, -1.5376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5215, -1.0368, -1.5447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5328, -1.0334, -1.5743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5385, -1.0272, -1.5805, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5145, -1.0069, -1.5888, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4920, -1.0103, -1.5828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4696, -1.0125, -1.5614, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4550, -0.9996, -1.5214, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4713, -1.0114, -1.5272, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.760000. Loss: 2.372772. Time: 33.614679
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.730000, Val Loss: 2.880062 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5167, -1.0573, -1.5562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5241, -1.0692, -1.5590, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5265, -1.0725, -1.5500, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5308, -1.0667, -1.5446, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5320, -1.0607, -1.5488, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5239, -1.0424, -1.5433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5131, -1.0336, -1.5376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -1.0213, -1.5401, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4940, -0.9998, -1.5397, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4708, -0.9832, -1.5430, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4495, -0.9800, -1.5545, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4460, -0.9634, -1.5662, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4538, -0.9566, -1.5582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4500, -0.9475, -1.5404, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4635, -0.9629, -1.5402, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4850, -0.9689, -1.5519, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5093, -0.9697, -1.5548, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5367, -0.9773, -1.5543, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -0.9758, -1.5555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.710000. Loss: 2.606177. Time: 34.001106
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.680000, Val Loss: 3.781642 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6023, -0.9743, -1.5588, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5962, -0.9738, -1.5597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5894, -0.9732, -1.5621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5765, -0.9726, -1.5570, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5569, -0.9677, -1.5471, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5374, -0.9605, -1.5420, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5190, -0.9556, -1.5436, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4821, -0.9559, -1.5448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4367, -0.9736, -1.5487, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4197, -0.9931, -1.5719, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4160, -1.0089, -1.5878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4430, -1.0120, -1.6096, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4618, -1.0165, -1.6316, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4802, -1.0257, -1.6503, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -1.0253, -1.6447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5489, -1.0162, -1.6286, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5898, -1.0005, -1.6190, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5980, -1.0057, -1.5872, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6012, -0.9962, -1.5526, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.740000. Loss: 2.592988. Time: 33.853382
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.830000, Val Loss: 1.738870 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6125, -0.9890, -1.5340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6240, -0.9925, -1.5401, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6159, -0.9938, -1.5575, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6198, -0.9963, -1.5656, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6205, -0.9990, -1.5685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6086, -1.0071, -1.5546, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5981, -1.0122, -1.5494, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5847, -1.0173, -1.5664, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5655, -1.0240, -1.5760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5450, -1.0177, -1.5813, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -1.0222, -1.5991, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5174, -1.0278, -1.6201, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5062, -1.0376, -1.6218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5087, -1.0395, -1.6135, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5236, -1.0402, -1.5915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5270, -1.0447, -1.5732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5209, -1.0533, -1.5624, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5010, -1.0615, -1.5594, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4802, -1.0719, -1.5589, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.775000. Loss: 2.197282. Time: 33.862823
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.770000, Val Loss: 3.300796 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4797, -1.0932, -1.5288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5041, -1.1055, -1.5210, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5208, -1.1097, -1.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5329, -1.1366, -1.5167, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5435, -1.1610, -1.5255, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5558, -1.1776, -1.5315, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5541, -1.1962, -1.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5490, -1.2202, -1.5510, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5412, -1.2225, -1.5581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5434, -1.2179, -1.5694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.2159, -1.5812, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5116, -1.2170, -1.5926, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5088, -1.2316, -1.5946, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5052, -1.2431, -1.5970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4962, -1.2483, -1.5959, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4993, -1.2385, -1.5882, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4999, -1.2275, -1.5816, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5183, -1.2159, -1.5607, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5423, -1.2045, -1.5410, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.750000. Loss: 3.159259. Time: 33.866513
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.730000, Val Loss: 3.528466 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5729, -1.1858, -1.5177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5645, -1.1764, -1.5134, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.1763, -1.5201, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5816, -1.1726, -1.5305, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5832, -1.1668, -1.5356, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5848, -1.1683, -1.5384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5684, -1.1673, -1.5569, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5497, -1.1664, -1.5888, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5387, -1.1570, -1.6287, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5343, -1.1470, -1.6432, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5350, -1.1330, -1.6410, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5338, -1.1228, -1.6286, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5305, -1.1203, -1.6024, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5297, -1.1136, -1.5836, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -1.1118, -1.5646, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5309, -1.1096, -1.5491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5315, -1.1049, -1.5264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5450, -1.1052, -1.5172, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5625, -1.1008, -1.5092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.785000. Loss: 2.017404. Time: 34.029879
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.740000, Val Loss: 2.533803 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5941, -1.1024, -1.5107, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6022, -1.0946, -1.5032, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6004, -1.0883, -1.5007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5974, -1.0885, -1.5053, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5896, -1.0818, -1.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5806, -1.0745, -1.5283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5705, -1.0625, -1.5640, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5483, -1.0476, -1.6134, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5403, -1.0544, -1.6407, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5498, -1.0602, -1.6457, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5610, -1.0621, -1.6387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5743, -1.0714, -1.6291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5744, -1.0679, -1.6178, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5727, -1.0607, -1.5929, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5697, -1.0419, -1.5811, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5580, -1.0430, -1.5691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5461, -1.0410, -1.5641, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5388, -1.0440, -1.5766, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5274, -1.0408, -1.5751, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.740000. Loss: 2.550811. Time: 33.917137
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.730000, Val Loss: 5.489443 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4924, -1.0205, -1.5495, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4874, -1.0134, -1.5398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4875, -1.0059, -1.5481, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4822, -0.9875, -1.5389, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4776, -0.9672, -1.5164, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4692, -0.9539, -1.4927, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4660, -0.9496, -1.4869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4823, -0.9555, -1.5060, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5178, -0.9450, -1.5339, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5545, -0.9224, -1.5595, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5863, -0.9072, -1.5605, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6087, -0.9008, -1.5559, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6245, -0.8957, -1.5678, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6306, -0.9028, -1.5815, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6325, -0.9088, -1.5880, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6346, -0.9123, -1.5915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6390, -0.9131, -1.5945, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6481, -0.9291, -1.6044, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6383, -0.9525, -1.5996, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.770000. Loss: 2.716929. Time: 33.865822
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.700000, Val Loss: 4.251044 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5784, -0.9541, -1.5915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5355, -0.9306, -1.5984, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5098, -0.9262, -1.5861, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5013, -0.9339, -1.5643, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5005, -0.9434, -1.5464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5004, -0.9431, -1.5325, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4982, -0.9283, -1.5160, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5024, -0.9219, -1.5104, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5217, -0.9209, -1.5121, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5624, -0.9239, -1.5203, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5843, -0.9281, -1.5254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5947, -0.9361, -1.5193, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6006, -0.9527, -1.5078, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5961, -0.9738, -1.5363, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5873, -0.9943, -1.5593, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5785, -1.0111, -1.5707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5755, -1.0143, -1.5777, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5634, -1.0128, -1.5834, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5489, -1.0066, -1.5897, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.770000. Loss: 2.431180. Time: 33.774226
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.810000, Val Loss: 3.086291 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5166, -1.0142, -1.6214, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -1.0063, -1.6271, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5352, -0.9970, -1.6251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5479, -0.9955, -1.6012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -0.9970, -1.5725, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5510, -1.0063, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5518, -1.0075, -1.5071, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5247, -1.0018, -1.4933, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5056, -0.9940, -1.4732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4915, -0.9909, -1.4690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4817, -0.9958, -1.4615, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4695, -1.0027, -1.4225, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4673, -1.0079, -1.4102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4870, -1.0062, -1.4406, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4979, -1.0079, -1.4714, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5026, -1.0051, -1.4944, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5048, -1.0039, -1.5090, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5075, -1.0009, -1.5131, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5273, -0.9928, -1.5079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.750000. Loss: 2.801015. Time: 33.088784
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.850000, Val Loss: 1.962215 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5373, -0.9738, -1.5033, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5176, -0.9747, -1.5048, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5124, -0.9764, -1.5308, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5091, -0.9799, -1.5574, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5103, -0.9712, -1.5491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5272, -0.9623, -1.5680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5451, -0.9587, -1.5915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5638, -0.9568, -1.6007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5653, -0.9487, -1.6109, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5557, -0.9404, -1.6141, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -0.9397, -1.6064, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5111, -0.9460, -1.5816, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5087, -0.9605, -1.5848, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5038, -0.9700, -1.5878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5104, -0.9844, -1.5960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5108, -0.9956, -1.5903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5077, -1.0023, -1.5828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5231, -0.9946, -1.5676, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5693, -0.9841, -1.5653, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.765000. Loss: 2.667926. Time: 33.333611
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.680000, Val Loss: 4.389138 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6242, -0.9775, -1.5344, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6535, -0.9662, -1.5250, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6706, -0.9615, -1.5198, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6798, -0.9573, -1.5154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6886, -0.9630, -1.5124, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6609, -0.9571, -1.5086, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6212, -0.9462, -1.5066, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5914, -0.9246, -1.5061, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -0.8937, -1.5104, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5438, -0.8759, -1.5270, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5332, -0.8642, -1.5601, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5209, -0.8562, -1.5970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4934, -0.8501, -1.6080, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4624, -0.8747, -1.6062, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4508, -0.9039, -1.6162, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4460, -0.9274, -1.6353, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4500, -0.9500, -1.6559, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4521, -0.9743, -1.6815, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4482, -0.9910, -1.7042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.745000. Loss: 2.909232. Time: 33.454416
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.690000, Val Loss: 4.465988 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5226, -0.9939, -1.6297, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5514, -0.9995, -1.5971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5669, -0.9994, -1.5716, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5836, -0.9884, -1.5234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6077, -0.9860, -1.4645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6258, -0.9864, -1.4246, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6358, -0.9821, -1.4256, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6275, -0.9744, -1.4452, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6134, -0.9708, -1.4684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5936, -0.9735, -1.4950, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5778, -0.9767, -1.5118, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5557, -0.9891, -1.5187, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5421, -1.0018, -1.5158, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5436, -1.0078, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5564, -1.0143, -1.5139, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5486, -1.0180, -1.5275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5237, -1.0268, -1.5514, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4997, -1.0344, -1.5687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4835, -1.0313, -1.5715, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.830000. Loss: 2.013925. Time: 33.525640
Validate after epoch 38 with seed 297566
Val Accuracy: 0.700000, Val Loss: 4.033710 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4475, -1.0201, -1.5782, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4490, -1.0338, -1.5798, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4556, -1.0574, -1.5991, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4805, -1.0780, -1.5980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4969, -1.0893, -1.5997, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5257, -1.0956, -1.5903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5685, -1.0893, -1.5642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6023, -1.0728, -1.5397, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6111, -1.0557, -1.5308, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6107, -1.0504, -1.5416, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6047, -1.0597, -1.5629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6009, -1.0730, -1.5698, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6068, -1.0849, -1.5720, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6130, -1.0785, -1.5664, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6118, -1.0730, -1.5734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5897, -1.0812, -1.5828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5495, -1.0972, -1.5994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5096, -1.1029, -1.6202, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4790, -1.1110, -1.6336, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.770000. Loss: 2.884117. Time: 33.235844
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.700000, Val Loss: 4.198191 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4694, -1.1368, -1.5739, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4835, -1.1420, -1.5385, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4865, -1.1192, -1.5075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4924, -1.0970, -1.4873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4928, -1.0919, -1.4919, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5115, -1.0915, -1.4914, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -1.0830, -1.4795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5489, -1.0827, -1.4642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5657, -1.0771, -1.4596, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5800, -1.0913, -1.4523, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5985, -1.0934, -1.4453, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5973, -1.0844, -1.4857, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6005, -1.0721, -1.5571, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6077, -1.0670, -1.6037, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6015, -1.0648, -1.6437, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5896, -1.0650, -1.6640, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5855, -1.0715, -1.6407, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5763, -1.0723, -1.6206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5536, -1.0750, -1.6015, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.715000. Loss: 3.339461. Time: 32.765778
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.770000, Val Loss: 5.067775 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -1.0446, -1.5282, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5450, -1.0342, -1.4820, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5518, -1.0379, -1.4455, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5424, -1.0427, -1.4220, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5346, -1.0447, -1.4215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5384, -1.0326, -1.4253, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5413, -1.0206, -1.4340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5413, -1.0081, -1.4546, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -0.9956, -1.4744, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5464, -0.9998, -1.4756, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5411, -1.0083, -1.4789, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -1.0082, -1.5058, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5458, -1.0125, -1.5536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5646, -1.0265, -1.5780, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5722, -1.0478, -1.5919, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5710, -1.0506, -1.5962, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5516, -1.0468, -1.5911, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.0463, -1.5784, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5110, -1.0476, -1.5639, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.720000. Loss: 3.738833. Time: 33.443907
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.770000, Val Loss: 4.071260 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4745, -1.0585, -1.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4584, -1.0684, -1.5268, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4459, -1.0789, -1.5148, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4450, -1.0815, -1.5031, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4763, -1.0767, -1.4724, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4998, -1.0717, -1.4682, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5210, -1.0798, -1.4880, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5507, -1.0885, -1.5186, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5657, -1.0958, -1.5393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5714, -1.1041, -1.5487, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5793, -1.1210, -1.5471, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5830, -1.1338, -1.5433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5617, -1.1468, -1.5147, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5535, -1.1432, -1.5109, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5755, -1.1552, -1.5383, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5885, -1.1707, -1.5748, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5968, -1.1792, -1.6040, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6017, -1.1868, -1.6289, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6101, -1.1869, -1.6439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.760000. Loss: 3.227298. Time: 32.943745
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.760000, Val Loss: 3.134156 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6098, -1.1995, -1.6379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6207, -1.1956, -1.6407, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6344, -1.1983, -1.6472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6395, -1.2156, -1.6504, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6178, -1.2376, -1.6454, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5793, -1.2618, -1.6223, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5465, -1.2656, -1.5958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -1.2793, -1.5638, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4876, -1.2883, -1.5307, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4574, -1.2982, -1.4931, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4507, -1.3064, -1.4794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4427, -1.3158, -1.4683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4555, -1.3195, -1.4644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4714, -1.3269, -1.4619, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -1.3289, -1.4621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -1.3372, -1.4740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5790, -1.3435, -1.4898, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5942, -1.3477, -1.5028, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5986, -1.3482, -1.5277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.750000. Loss: 3.448956. Time: 33.414792
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.700000, Val Loss: 4.348343 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6135, -1.3201, -1.5847, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6019, -1.3156, -1.5870, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5957, -1.3115, -1.5813, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5712, -1.3172, -1.5601, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5473, -1.3342, -1.5417, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5285, -1.3535, -1.5193, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -1.3603, -1.5053, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5304, -1.3428, -1.5111, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5549, -1.3288, -1.5297, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5730, -1.3194, -1.5411, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5892, -1.3022, -1.5519, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6024, -1.2822, -1.5667, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6180, -1.2643, -1.5871, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6140, -1.2643, -1.5938, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6067, -1.2561, -1.6080, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5962, -1.2434, -1.6204, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5663, -1.2208, -1.6156, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5449, -1.2040, -1.6042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5324, -1.1818, -1.5977, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.730000. Loss: 3.503612. Time: 33.256310
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.800000, Val Loss: 2.528534 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4987, -1.1999, -1.5566, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4771, -1.2094, -1.5459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4622, -1.2039, -1.5426, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4490, -1.2063, -1.5349, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4465, -1.2076, -1.5306, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4660, -1.2136, -1.5415, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4928, -1.2228, -1.5548, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5203, -1.2335, -1.5607, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5357, -1.2443, -1.5634, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5465, -1.2453, -1.5611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5676, -1.2479, -1.5549, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6138, -1.2374, -1.5549, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6514, -1.2132, -1.5449, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6653, -1.1946, -1.5405, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6336, -1.1883, -1.5393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5969, -1.1775, -1.5415, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5892, -1.1662, -1.5509, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5772, -1.1529, -1.5570, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -1.1357, -1.5662, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.715000. Loss: 3.254649. Time: 33.329640
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.750000, Val Loss: 5.350771 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5115, -1.1259, -1.5742, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4833, -1.1279, -1.5811, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4649, -1.1298, -1.5904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4501, -1.1328, -1.5836, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4469, -1.1370, -1.5767, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4468, -1.1400, -1.5732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4547, -1.1499, -1.5710, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4645, -1.1702, -1.5722, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4517, -1.1791, -1.5781, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4431, -1.1872, -1.5885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4356, -1.1988, -1.5944, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4594, -1.2189, -1.5913, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4919, -1.2377, -1.5861, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5206, -1.2418, -1.5851, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5488, -1.2362, -1.5833, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5690, -1.2423, -1.5700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5762, -1.2478, -1.5524, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5698, -1.2530, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5661, -1.2822, -1.5160, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.810000. Loss: 3.352033. Time: 33.068699
Validate after epoch 46 with seed 91566
Val Accuracy: 0.690000, Val Loss: 5.052868 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5727, -1.3251, -1.5015, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5807, -1.3405, -1.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5703, -1.3439, -1.5087, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5509, -1.3397, -1.5083, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5383, -1.3413, -1.5097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5300, -1.3435, -1.5177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5175, -1.3417, -1.5330, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5219, -1.3237, -1.5438, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5321, -1.2987, -1.5552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5287, -1.2676, -1.5814, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5259, -1.2566, -1.6000, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5204, -1.2522, -1.6031, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5174, -1.2452, -1.5978, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5147, -1.2464, -1.5983, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5131, -1.2472, -1.5986, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.2474, -1.5987, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5073, -1.2442, -1.5937, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5037, -1.2420, -1.5890, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5004, -1.2376, -1.5718, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.810000. Loss: 2.750206. Time: 32.845496
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.810000, Val Loss: 2.638235 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5032, -1.2336, -1.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5082, -1.2218, -1.5414, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5127, -1.2049, -1.5386, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5193, -1.1980, -1.5365, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5351, -1.2004, -1.5423, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -1.2044, -1.5471, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5744, -1.2105, -1.5475, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5575, -1.2009, -1.5364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5348, -1.1948, -1.5174, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5234, -1.1850, -1.5085, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5320, -1.1789, -1.5070, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5458, -1.1791, -1.5120, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5724, -1.1903, -1.5280, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5715, -1.2108, -1.5417, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.2220, -1.5537, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5492, -1.2268, -1.5661, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5349, -1.2365, -1.5782, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5299, -1.2449, -1.5822, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5270, -1.2499, -1.5846, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.815000. Loss: 2.332105. Time: 33.277553
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.770000, Val Loss: 3.773133 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5127, -1.2363, -1.5947, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5133, -1.2131, -1.5966, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5215, -1.1994, -1.5985, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5326, -1.1904, -1.6012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5436, -1.1620, -1.6177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5496, -1.1325, -1.6316, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5573, -1.1149, -1.6377, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5597, -1.1117, -1.6380, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5605, -1.1191, -1.6241, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5588, -1.1362, -1.5921, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5550, -1.1466, -1.5606, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5514, -1.1509, -1.5427, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5460, -1.1575, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5554, -1.1654, -1.5257, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5659, -1.1696, -1.5288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -1.1643, -1.5324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.1571, -1.5319, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5404, -1.1485, -1.5328, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5404, -1.1500, -1.5483, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.815000. Loss: 2.340805. Time: 33.246770
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.760000, Val Loss: 3.643177 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5490, -1.1605, -1.5871, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5862, -1.1640, -1.6095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6172, -1.1560, -1.6123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6154, -1.1464, -1.5995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6156, -1.1352, -1.5930, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6160, -1.1286, -1.5892, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5990, -1.1197, -1.5761, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5638, -1.1126, -1.5384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5291, -1.1213, -1.5077, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5113, -1.1387, -1.4878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -1.1574, -1.4915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5139, -1.1580, -1.5123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5162, -1.1582, -1.5246, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5166, -1.1531, -1.5303, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5394, -1.1386, -1.5677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5784, -1.1260, -1.6140, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6004, -1.1000, -1.6383, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6114, -1.1019, -1.6462, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6144, -1.0973, -1.6334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.745000. Loss: 4.029121. Time: 33.416649
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.770000, Val Loss: 3.592114 
Training Execution time: 49:42:00.00
Conducting Test
Test Accuracy: 0.808000, Test Loss: 2.552278 
