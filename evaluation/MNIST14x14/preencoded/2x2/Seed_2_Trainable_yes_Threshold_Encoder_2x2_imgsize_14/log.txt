Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 2, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_2_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 2, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_2_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1262, -0.9326, -0.3222, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1728, -0.9764, -0.3671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2150, -1.0162, -0.4079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2561, -1.0512, -0.4425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2944, -1.0843, -0.4727, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3267, -1.1113, -0.4988, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3636, -1.1313, -0.5305, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3955, -1.1454, -0.5592, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4207, -1.1559, -0.5847, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4494, -1.1671, -0.6097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -1.1875, -0.6440, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -1.2151, -0.6850, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5832, -1.2289, -0.7210, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6242, -1.2383, -0.7586, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6619, -1.2434, -0.7952, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6948, -1.2458, -0.8267, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7238, -1.2484, -0.8535, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7554, -1.2516, -0.8818, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7894, -1.2576, -0.9096, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.440000. Loss: 3.361525. Time: 17.086499
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.660000, Val Loss: 1.193388 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8584, -1.2720, -0.9695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8783, -1.2726, -0.9875, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9021, -1.2755, -1.0051, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9247, -1.2782, -1.0234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9402, -1.2771, -1.0409, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9544, -1.2733, -1.0579, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9714, -1.2723, -1.0731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9911, -1.2627, -1.0969, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0043, -1.2520, -1.1123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0346, -1.2542, -1.1414, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0650, -1.2619, -1.1700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1014, -1.2731, -1.2018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1303, -1.2745, -1.2298, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1434, -1.2678, -1.2433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1466, -1.2571, -1.2491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1515, -1.2491, -1.2558, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1556, -1.2448, -1.2598, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1534, -1.2396, -1.2600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1561, -1.2381, -1.2647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.650000. Loss: 1.266734. Time: 17.000854
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.660000, Val Loss: 1.171681 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1685, -1.2300, -1.2882, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1809, -1.2276, -1.2959, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1904, -1.2247, -1.3018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1966, -1.2221, -1.3059, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1886, -1.2178, -1.2990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1786, -1.2141, -1.2894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1769, -1.2105, -1.2853, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1917, -1.2104, -1.3001, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2104, -1.2051, -1.3215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2345, -1.2025, -1.3468, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2475, -1.1927, -1.3588, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2484, -1.1848, -1.3547, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2423, -1.1800, -1.3449, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2433, -1.1741, -1.3463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2440, -1.1668, -1.3462, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2419, -1.1593, -1.3455, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2443, -1.1528, -1.3502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2441, -1.1477, -1.3522, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2358, -1.1446, -1.3464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.715000. Loss: 1.038040. Time: 17.066657
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.670000, Val Loss: 1.133337 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2317, -1.1455, -1.3412, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2333, -1.1437, -1.3393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2356, -1.1402, -1.3381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2451, -1.1384, -1.3463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2687, -1.1404, -1.3685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2760, -1.1389, -1.3764, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2737, -1.1360, -1.3749, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2803, -1.1367, -1.3763, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2842, -1.1352, -1.3685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2847, -1.1314, -1.3588, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2824, -1.1275, -1.3516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2858, -1.1268, -1.3536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3001, -1.1283, -1.3676, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3148, -1.1283, -1.3833, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3218, -1.1260, -1.3923, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3261, -1.1232, -1.3994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3258, -1.1194, -1.4022, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3196, -1.1153, -1.3980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3144, -1.1090, -1.4006, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.760000. Loss: 0.922370. Time: 17.124238
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.680000, Val Loss: 0.991841 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3168, -1.1057, -1.4028, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3160, -1.1025, -1.4059, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3093, -1.0976, -1.4069, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3173, -1.0979, -1.4174, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3391, -1.0995, -1.4360, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3679, -1.1026, -1.4601, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3940, -1.1080, -1.4796, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4202, -1.1140, -1.4984, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4311, -1.1154, -1.5078, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4453, -1.1157, -1.5173, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4583, -1.1152, -1.5232, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4556, -1.1119, -1.5205, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4540, -1.1091, -1.5206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4473, -1.1049, -1.5151, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4136, -1.0978, -1.4859, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3812, -1.0926, -1.4516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3789, -1.0951, -1.4386, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3924, -1.1002, -1.4419, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4108, -1.1050, -1.4541, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.665000. Loss: 1.200351. Time: 17.031442
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.640000, Val Loss: 1.175058 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4251, -1.1032, -1.4708, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4177, -1.0967, -1.4724, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3963, -1.0889, -1.4575, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3721, -1.0829, -1.4320, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3471, -1.0766, -1.4095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3248, -1.0692, -1.3947, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3146, -1.0630, -1.3883, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3148, -1.0608, -1.3904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3285, -1.0627, -1.4014, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3628, -1.0704, -1.4277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4179, -1.0828, -1.4723, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4512, -1.0862, -1.5018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4697, -1.0856, -1.5249, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4692, -1.0828, -1.5339, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4724, -1.0807, -1.5406, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4682, -1.0790, -1.5368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4573, -1.0737, -1.5298, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4507, -1.0701, -1.5237, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4516, -1.0701, -1.5196, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.680000. Loss: 1.169393. Time: 17.160046
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.770000, Val Loss: 0.792939 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4484, -1.0650, -1.5305, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4394, -1.0603, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4371, -1.0550, -1.5293, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4277, -1.0479, -1.5206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4191, -1.0441, -1.5091, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4154, -1.0420, -1.4944, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4017, -1.0367, -1.4761, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3828, -1.0333, -1.4450, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3852, -1.0362, -1.4330, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3980, -1.0392, -1.4403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4009, -1.0395, -1.4389, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4006, -1.0360, -1.4393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3851, -1.0289, -1.4273, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3780, -1.0246, -1.4243, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3692, -1.0199, -1.4207, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3585, -1.0129, -1.4146, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3730, -1.0132, -1.4252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3752, -1.0100, -1.4280, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3656, -1.0034, -1.4213, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.675000. Loss: 0.925663. Time: 16.929415
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.790000, Val Loss: 0.761329 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3507, -0.9860, -1.4124, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3458, -0.9808, -1.4115, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3376, -0.9757, -1.4046, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3586, -0.9738, -1.4278, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3730, -0.9718, -1.4479, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3783, -0.9668, -1.4635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3771, -0.9601, -1.4707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3711, -0.9542, -1.4690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3575, -0.9461, -1.4609, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3361, -0.9339, -1.4465, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3297, -0.9312, -1.4355, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3276, -0.9282, -1.4282, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3222, -0.9226, -1.4194, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3202, -0.9208, -1.4122, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3232, -0.9165, -1.4099, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3325, -0.9183, -1.4144, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3525, -0.9252, -1.4232, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3734, -0.9308, -1.4289, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3945, -0.9358, -1.4371, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.740000. Loss: 0.942552. Time: 17.101865
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.700000, Val Loss: 1.124442 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4354, -0.9388, -1.4771, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4386, -0.9378, -1.4855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4325, -0.9339, -1.4876, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4268, -0.9300, -1.4908, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4269, -0.9284, -1.4961, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4233, -0.9257, -1.4993, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4162, -0.9189, -1.5070, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4305, -0.9214, -1.5201, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4310, -0.9187, -1.5195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4303, -0.9170, -1.5105, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4417, -0.9203, -1.5067, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4494, -0.9194, -1.5114, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4442, -0.9142, -1.5126, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4314, -0.9061, -1.5110, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4167, -0.8972, -1.5048, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4045, -0.8845, -1.5013, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3834, -0.8696, -1.4928, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3634, -0.8576, -1.4837, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3661, -0.8508, -1.4910, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.710000. Loss: 0.926638. Time: 17.013682
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.780000, Val Loss: 0.897541 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4026, -0.8495, -1.5245, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4185, -0.8520, -1.5366, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4311, -0.8546, -1.5398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4595, -0.8594, -1.5451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5035, -0.8699, -1.5490, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5334, -0.8767, -1.5478, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5393, -0.8793, -1.5472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -0.8791, -1.5328, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5103, -0.8785, -1.5311, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5020, -0.8774, -1.5295, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5002, -0.8768, -1.5294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5130, -0.8765, -1.5434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5077, -0.8738, -1.5486, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4919, -0.8685, -1.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4806, -0.8640, -1.5594, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4505, -0.8575, -1.5530, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4362, -0.8558, -1.5510, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4364, -0.8554, -1.5472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4571, -0.8595, -1.5536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.760000. Loss: 1.038743. Time: 16.850575
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.710000, Val Loss: 1.072411 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4728, -0.8610, -1.5501, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4706, -0.8573, -1.5447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -0.8531, -1.5529, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5003, -0.8519, -1.5681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5053, -0.8486, -1.5632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4985, -0.8441, -1.5498, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4887, -0.8405, -1.5378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4888, -0.8408, -1.5282, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4840, -0.8409, -1.5157, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4726, -0.8384, -1.5025, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4682, -0.8372, -1.4995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4593, -0.8352, -1.4889, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4654, -0.8332, -1.5010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4689, -0.8301, -1.5128, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4879, -0.8331, -1.5326, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4954, -0.8344, -1.5434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4921, -0.8335, -1.5466, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4862, -0.8312, -1.5544, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4865, -0.8274, -1.5635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.725000. Loss: 0.955417. Time: 16.847086
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.790000, Val Loss: 0.642656 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4853, -0.8217, -1.5626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4804, -0.8187, -1.5581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4702, -0.8159, -1.5477, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4451, -0.8096, -1.5259, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4321, -0.8088, -1.5112, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4362, -0.8103, -1.5092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4437, -0.8094, -1.5057, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4478, -0.8078, -1.4980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4832, -0.8145, -1.5236, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5162, -0.8215, -1.5473, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5252, -0.8232, -1.5515, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5140, -0.8222, -1.5294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -0.8229, -1.5249, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5085, -0.8217, -1.5045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4871, -0.8182, -1.4814, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4693, -0.8110, -1.4764, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4508, -0.8042, -1.4702, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4416, -0.8036, -1.4575, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4260, -0.7996, -1.4422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.700000. Loss: 1.122064. Time: 16.851273
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.760000, Val Loss: 0.719461 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3872, -0.7726, -1.4481, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3822, -0.7676, -1.4547, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3894, -0.7648, -1.4760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4008, -0.7646, -1.4960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3980, -0.7567, -1.5236, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3855, -0.7393, -1.5570, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4302, -0.7508, -1.5723, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4666, -0.7606, -1.5849, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4882, -0.7654, -1.5880, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4955, -0.7662, -1.5831, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5103, -0.7660, -1.5636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5289, -0.7661, -1.5348, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5416, -0.7665, -1.5193, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5303, -0.7653, -1.5088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4905, -0.7599, -1.5004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4831, -0.7622, -1.5017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4760, -0.7643, -1.4934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4719, -0.7649, -1.4933, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4679, -0.7645, -1.4909, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.695000. Loss: 1.217542. Time: 16.918743
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.790000, Val Loss: 0.840967 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4167, -0.7375, -1.4988, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4038, -0.7299, -1.4981, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4174, -0.7355, -1.4954, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4281, -0.7369, -1.5030, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4649, -0.7459, -1.5288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4956, -0.7551, -1.5474, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5205, -0.7651, -1.5485, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5313, -0.7699, -1.5645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -0.7712, -1.5738, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5203, -0.7708, -1.5826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5171, -0.7705, -1.5850, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5131, -0.7700, -1.5826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4961, -0.7658, -1.5683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4752, -0.7579, -1.5516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4607, -0.7518, -1.5359, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4457, -0.7424, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4439, -0.7399, -1.5264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4470, -0.7410, -1.5217, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4456, -0.7392, -1.5162, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.765000. Loss: 1.004286. Time: 16.976219
Validate after epoch 14 with seed 964979
Val Accuracy: 0.790000, Val Loss: 0.921252 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4309, -0.7300, -1.5016, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4285, -0.7285, -1.4918, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4208, -0.7238, -1.4842, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4167, -0.7206, -1.4819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4165, -0.7196, -1.4809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4285, -0.7226, -1.4813, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4409, -0.7262, -1.4838, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4420, -0.7229, -1.4942, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4617, -0.7257, -1.5277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4855, -0.7297, -1.5649, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4948, -0.7303, -1.5845, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5025, -0.7331, -1.5858, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5036, -0.7345, -1.5802, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5012, -0.7318, -1.5809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5049, -0.7318, -1.5821, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5098, -0.7319, -1.5839, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5242, -0.7342, -1.5645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5315, -0.7350, -1.5369, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5272, -0.7339, -1.5169, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.805000. Loss: 0.834489. Time: 16.994421
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.750000, Val Loss: 1.157866 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5093, -0.7305, -1.4751, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4959, -0.7259, -1.4647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4900, -0.7226, -1.4630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4848, -0.7193, -1.4656, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -0.7147, -1.4755, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -0.7095, -1.4955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4791, -0.7083, -1.5074, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4780, -0.7089, -1.5248, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4759, -0.7071, -1.5413, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4860, -0.7079, -1.5595, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4962, -0.7083, -1.5778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4928, -0.7030, -1.5670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4967, -0.6996, -1.5789, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4972, -0.6960, -1.5897, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5008, -0.6944, -1.5915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5060, -0.6934, -1.5913, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5073, -0.6924, -1.5921, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5115, -0.6937, -1.5902, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5182, -0.6957, -1.5893, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.770000. Loss: 0.911342. Time: 16.923998
Validate after epoch 16 with seed 840036
Val Accuracy: 0.690000, Val Loss: 1.190501 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5076, -0.6938, -1.5612, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5012, -0.6932, -1.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5226, -0.6972, -1.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5554, -0.7038, -1.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5801, -0.7073, -1.5699, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6204, -0.7094, -1.5731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6360, -0.7148, -1.5680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6183, -0.7250, -1.5368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5843, -0.7355, -1.5188, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5454, -0.7429, -1.5158, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5202, -0.7472, -1.5245, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5194, -0.7514, -1.5253, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5009, -0.7500, -1.5233, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4569, -0.7381, -1.5285, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4375, -0.7328, -1.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4432, -0.7384, -1.5565, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4524, -0.7453, -1.5647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4573, -0.7465, -1.5602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4528, -0.7410, -1.5533, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.750000. Loss: 1.162481. Time: 16.733323
Validate after epoch 17 with seed 180463
Val Accuracy: 0.710000, Val Loss: 1.075085 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4482, -0.7270, -1.5546, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4481, -0.7220, -1.5639, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4625, -0.7252, -1.5590, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4720, -0.7241, -1.5421, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4734, -0.7194, -1.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4746, -0.7155, -1.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4850, -0.7186, -1.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4862, -0.7173, -1.5436, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4908, -0.7193, -1.5321, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4856, -0.7178, -1.5119, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4664, -0.7101, -1.4932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4519, -0.7027, -1.4869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4456, -0.6986, -1.4860, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4450, -0.6916, -1.4916, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4629, -0.6973, -1.5071, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4672, -0.6970, -1.5173, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4670, -0.6943, -1.5281, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4617, -0.6876, -1.5340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4776, -0.6891, -1.5411, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.735000. Loss: 0.915084. Time: 17.074502
Validate after epoch 18 with seed 575883
Val Accuracy: 0.600000, Val Loss: 1.941846 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4787, -0.6748, -1.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4765, -0.6695, -1.5388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4820, -0.6716, -1.5392, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5016, -0.6803, -1.5457, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5154, -0.6867, -1.5512, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5206, -0.6882, -1.5564, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5214, -0.6881, -1.5587, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5095, -0.6849, -1.5491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -0.6785, -1.5320, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4783, -0.6715, -1.5169, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4712, -0.6693, -1.5067, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4727, -0.6664, -1.5141, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4851, -0.6714, -1.5203, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4985, -0.6747, -1.5294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5037, -0.6757, -1.5330, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5045, -0.6763, -1.5423, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5155, -0.6796, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5181, -0.6810, -1.5463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5123, -0.6789, -1.5450, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.800000. Loss: 0.790988. Time: 17.092044
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.730000, Val Loss: 0.964134 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5226, -0.6766, -1.5599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5281, -0.6757, -1.5627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5340, -0.6756, -1.5651, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5382, -0.6755, -1.5695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -0.6730, -1.5778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5355, -0.6722, -1.5856, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5261, -0.6696, -1.5910, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5337, -0.6703, -1.6014, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5341, -0.6705, -1.6026, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5327, -0.6707, -1.6038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5217, -0.6691, -1.5860, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4936, -0.6620, -1.5539, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4848, -0.6599, -1.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4814, -0.6572, -1.5206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4818, -0.6534, -1.5143, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4866, -0.6545, -1.5127, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4870, -0.6543, -1.5141, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4829, -0.6527, -1.5153, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4818, -0.6502, -1.5088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.765000. Loss: 0.962338. Time: 16.980909
Validate after epoch 20 with seed 822616
Val Accuracy: 0.810000, Val Loss: 0.942731 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5049, -0.6568, -1.5322, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5060, -0.6583, -1.5290, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5035, -0.6597, -1.5190, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5008, -0.6613, -1.5080, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4951, -0.6599, -1.5042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4885, -0.6554, -1.5046, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4751, -0.6478, -1.5069, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4618, -0.6386, -1.5102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4824, -0.6493, -1.5270, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5030, -0.6561, -1.5403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5171, -0.6588, -1.5627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5251, -0.6596, -1.5775, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5314, -0.6596, -1.5866, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -0.6584, -1.5928, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5163, -0.6546, -1.5802, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4994, -0.6487, -1.5740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4804, -0.6406, -1.5665, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4700, -0.6355, -1.5552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4586, -0.6275, -1.5463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.780000. Loss: 0.799031. Time: 17.032975
Validate after epoch 21 with seed 519531
Val Accuracy: 0.800000, Val Loss: 0.704895 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4179, -0.5997, -1.5123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4096, -0.5915, -1.5094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4137, -0.5928, -1.5125, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4341, -0.6032, -1.5146, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4438, -0.6063, -1.5143, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4597, -0.6132, -1.5209, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4781, -0.6209, -1.5394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -0.6180, -1.5418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4764, -0.6129, -1.5440, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4734, -0.6055, -1.5463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4801, -0.6032, -1.5535, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4900, -0.6034, -1.5686, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4901, -0.6003, -1.5750, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4927, -0.5980, -1.5804, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4872, -0.5905, -1.5829, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4868, -0.5860, -1.5904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4874, -0.5841, -1.5908, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4874, -0.5796, -1.6042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4866, -0.5747, -1.6098, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.790000. Loss: 0.942934. Time: 16.851467
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.640000, Val Loss: 1.377739 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4956, -0.5630, -1.5873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5076, -0.5631, -1.5709, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5161, -0.5632, -1.5480, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5279, -0.5642, -1.5323, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -0.5649, -1.4973, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5652, -0.5684, -1.4724, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5843, -0.5707, -1.4698, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5809, -0.5734, -1.4879, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5781, -0.5753, -1.5136, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -0.5766, -1.5431, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -0.5773, -1.5582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5471, -0.5778, -1.5608, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5217, -0.5757, -1.5664, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4942, -0.5721, -1.5737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4842, -0.5715, -1.5784, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4526, -0.5586, -1.5799, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4375, -0.5536, -1.5632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4208, -0.5428, -1.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4124, -0.5325, -1.5660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.815000. Loss: 0.920186. Time: 17.032245
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.740000, Val Loss: 1.212791 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4415, -0.5386, -1.5823, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4739, -0.5546, -1.5896, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5014, -0.5669, -1.6004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5244, -0.5773, -1.5987, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5484, -0.5846, -1.5901, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5661, -0.5891, -1.5801, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5716, -0.5920, -1.5677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5568, -0.5937, -1.5400, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5386, -0.5944, -1.5181, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5114, -0.5912, -1.5001, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4900, -0.5872, -1.4784, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4797, -0.5842, -1.4538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4772, -0.5835, -1.4195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4722, -0.5821, -1.4177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4691, -0.5775, -1.4611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4982, -0.5928, -1.4838, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5311, -0.6083, -1.4791, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5538, -0.6185, -1.5121, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5844, -0.6251, -1.5534, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.765000. Loss: 0.942836. Time: 16.859994
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.680000, Val Loss: 1.219250 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6108, -0.6353, -1.6338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6090, -0.6408, -1.6785, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6064, -0.6452, -1.6895, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5993, -0.6493, -1.6731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5602, -0.6578, -1.6251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5417, -0.6627, -1.5939, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5162, -0.6638, -1.5575, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5009, -0.6621, -1.5264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4834, -0.6539, -1.5113, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5066, -0.6681, -1.4894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5253, -0.6789, -1.4775, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5319, -0.6820, -1.4890, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5323, -0.6819, -1.5023, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5483, -0.6865, -1.5210, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5385, -0.6860, -1.5185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5267, -0.6823, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -0.6801, -1.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5214, -0.6817, -1.5410, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5378, -0.6879, -1.5497, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.750000. Loss: 1.068808. Time: 16.830972
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.720000, Val Loss: 1.196942 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5519, -0.6926, -1.5676, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5465, -0.6926, -1.5847, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5242, -0.6867, -1.5953, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4987, -0.6797, -1.5973, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4772, -0.6743, -1.5963, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4694, -0.6743, -1.5925, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4716, -0.6814, -1.5707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4655, -0.6792, -1.5555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4763, -0.6917, -1.5577, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4871, -0.7020, -1.5566, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4942, -0.7089, -1.5541, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4980, -0.7096, -1.5521, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4938, -0.7030, -1.5480, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4907, -0.6983, -1.5462, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4771, -0.6814, -1.5489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4681, -0.6683, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4651, -0.6578, -1.5571, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -0.6553, -1.5830, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -0.6494, -1.6021, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.815000. Loss: 0.864206. Time: 16.808462
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.780000, Val Loss: 0.885593 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5140, -0.6472, -1.6265, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5230, -0.6503, -1.6252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -0.6471, -1.6227, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -0.6391, -1.6203, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4953, -0.6318, -1.6070, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4863, -0.6226, -1.5729, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4894, -0.6169, -1.5551, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4857, -0.6097, -1.5370, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4837, -0.6034, -1.5116, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4839, -0.5996, -1.4907, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4826, -0.5930, -1.4762, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4823, -0.5883, -1.4612, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -0.5936, -1.4482, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5000, -0.5956, -1.4485, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5039, -0.5933, -1.4786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -0.5888, -1.5122, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5298, -0.5957, -1.5529, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5376, -0.5942, -1.6086, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5267, -0.5895, -1.6363, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.715000. Loss: 1.048554. Time: 16.828974
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.690000, Val Loss: 1.519166 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4998, -0.5798, -1.5882, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4791, -0.5692, -1.5563, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4766, -0.5688, -1.5531, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4747, -0.5669, -1.5653, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4738, -0.5628, -1.5696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4742, -0.5577, -1.5726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4760, -0.5562, -1.5760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4729, -0.5518, -1.5812, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4722, -0.5451, -1.6057, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -0.5432, -1.6103, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4859, -0.5423, -1.6100, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4892, -0.5417, -1.6076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4938, -0.5422, -1.6089, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4989, -0.5420, -1.6094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5090, -0.5448, -1.6052, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5250, -0.5493, -1.6231, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5294, -0.5486, -1.6438, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5187, -0.5418, -1.6414, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5043, -0.5359, -1.6291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.845000. Loss: 0.678035. Time: 17.034610
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.810000, Val Loss: 0.862284 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4889, -0.5292, -1.5791, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4864, -0.5296, -1.5629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4871, -0.5328, -1.5451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4919, -0.5329, -1.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4990, -0.5339, -1.5229, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5076, -0.5352, -1.5067, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5267, -0.5370, -1.4697, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -0.5350, -1.4454, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5301, -0.5315, -1.4390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5220, -0.5283, -1.4458, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5133, -0.5263, -1.4777, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5068, -0.5236, -1.5111, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4985, -0.5176, -1.5445, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4993, -0.5137, -1.5747, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5011, -0.5118, -1.5996, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4977, -0.5075, -1.6229, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -0.4986, -1.6306, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4872, -0.4961, -1.6332, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -0.4896, -1.6331, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.790000. Loss: 0.698894. Time: 17.048168
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.780000, Val Loss: 0.958215 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5016, -0.4973, -1.5805, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5071, -0.4947, -1.5404, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5101, -0.4889, -1.5252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5045, -0.4781, -1.5241, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5082, -0.4723, -1.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -0.4659, -1.5480, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5086, -0.4622, -1.5507, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5280, -0.4700, -1.5551, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5369, -0.4735, -1.5678, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5405, -0.4744, -1.5755, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5455, -0.4757, -1.5856, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5469, -0.4766, -1.6076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -0.4765, -1.6417, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5544, -0.4757, -1.6691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5549, -0.4750, -1.6762, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5541, -0.4744, -1.6645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5558, -0.4750, -1.6320, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5600, -0.4760, -1.5958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5552, -0.4761, -1.5602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.775000. Loss: 1.120306. Time: 16.935144
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.700000, Val Loss: 1.355816 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5283, -0.4723, -1.5324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5164, -0.4697, -1.5210, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5112, -0.4697, -1.5188, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5021, -0.4687, -1.5201, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4937, -0.4666, -1.5202, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4952, -0.4677, -1.5208, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5031, -0.4706, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -0.4631, -1.5172, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4844, -0.4503, -1.5299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4765, -0.4401, -1.5366, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4622, -0.4253, -1.5459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4604, -0.4171, -1.5581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4727, -0.4172, -1.5675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4921, -0.4257, -1.5746, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5063, -0.4327, -1.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5212, -0.4388, -1.5808, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5482, -0.4472, -1.5923, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5835, -0.4536, -1.6101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6150, -0.4575, -1.6206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.815000. Loss: 0.933053. Time: 16.704737
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.760000, Val Loss: 0.797977 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6189, -0.4701, -1.6234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5872, -0.4844, -1.6017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5640, -0.4948, -1.5873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -0.5009, -1.5786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5345, -0.5026, -1.5646, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5169, -0.5013, -1.5483, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4974, -0.4967, -1.5314, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4886, -0.4946, -1.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4914, -0.5013, -1.5149, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4960, -0.5073, -1.5095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4999, -0.5114, -1.5076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4998, -0.5125, -1.5071, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5094, -0.5138, -1.5261, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5142, -0.5112, -1.5499, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -0.5189, -1.5701, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5277, -0.5161, -1.5808, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5292, -0.5156, -1.5900, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5470, -0.5190, -1.6209, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5533, -0.5183, -1.6363, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.785000. Loss: 0.873282. Time: 16.927678
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.730000, Val Loss: 1.446804 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5420, -0.5138, -1.6389, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5371, -0.5142, -1.6205, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5454, -0.5177, -1.6084, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5457, -0.5175, -1.5921, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5471, -0.5173, -1.5855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5364, -0.5153, -1.5732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -0.5143, -1.5636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5187, -0.5102, -1.5388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5213, -0.5105, -1.5309, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5268, -0.5121, -1.5317, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5226, -0.5112, -1.5195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -0.5131, -1.5179, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5175, -0.5084, -1.5355, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5266, -0.5095, -1.5548, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5288, -0.5077, -1.5700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5221, -0.5026, -1.5823, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5059, -0.4923, -1.5964, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4938, -0.4828, -1.6123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4635, -0.4560, -1.6086, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.795000. Loss: 0.866828. Time: 17.082967
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.770000, Val Loss: 1.271457 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3998, -0.3897, -1.5974, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3786, -0.3667, -1.5809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3753, -0.3637, -1.5696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3752, -0.3634, -1.5611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3895, -0.3764, -1.5486, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4393, -0.4191, -1.5380, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4832, -0.4524, -1.5269, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5149, -0.4765, -1.5141, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -0.5013, -1.5062, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5796, -0.5158, -1.5084, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5926, -0.5244, -1.5079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5850, -0.5324, -1.5026, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5711, -0.5385, -1.4999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5493, -0.5426, -1.5285, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5351, -0.5443, -1.5444, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5252, -0.5416, -1.5553, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5053, -0.5331, -1.5578, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4963, -0.5294, -1.5474, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -0.5381, -1.5267, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.810000. Loss: 0.781169. Time: 16.720903
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.830000, Val Loss: 0.579111 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5247, -0.5505, -1.4878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5359, -0.5519, -1.4980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5550, -0.5527, -1.5113, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5733, -0.5545, -1.5248, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5739, -0.5560, -1.5561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5690, -0.5569, -1.5740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5578, -0.5572, -1.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5230, -0.5537, -1.5623, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4910, -0.5489, -1.5432, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4602, -0.5333, -1.5292, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4590, -0.5332, -1.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4775, -0.5451, -1.5435, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4888, -0.5502, -1.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -0.5628, -1.5429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5325, -0.5730, -1.5466, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5496, -0.5810, -1.5543, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5582, -0.5838, -1.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5531, -0.5847, -1.5629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5343, -0.5813, -1.5589, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.810000. Loss: 0.805927. Time: 14.265753
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.820000, Val Loss: 0.918550 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5114, -0.5771, -1.5581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5136, -0.5792, -1.5646, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5154, -0.5826, -1.5672, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5137, -0.5819, -1.5599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -0.5777, -1.5403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5261, -0.5812, -1.5339, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5383, -0.5808, -1.5248, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5420, -0.5786, -1.5222, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5495, -0.5752, -1.5272, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -0.5718, -1.5259, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5538, -0.5694, -1.5301, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5526, -0.5670, -1.5357, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5493, -0.5643, -1.5458, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5426, -0.5605, -1.5596, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5293, -0.5539, -1.5696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5215, -0.5487, -1.5732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5078, -0.5420, -1.5756, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -0.5463, -1.5863, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5216, -0.5626, -1.6076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.825000. Loss: 0.781988. Time: 13.348566
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.870000, Val Loss: 0.626382 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5656, -0.5924, -1.6459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5814, -0.5988, -1.6586, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6013, -0.6013, -1.6637, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6193, -0.6035, -1.6510, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6097, -0.6132, -1.6370, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5961, -0.6229, -1.6234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5813, -0.6311, -1.6076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -0.6375, -1.5854, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -0.6420, -1.5653, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -0.6472, -1.5593, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5676, -0.6511, -1.5591, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5654, -0.6533, -1.5532, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5623, -0.6540, -1.5565, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5523, -0.6536, -1.5617, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5528, -0.6559, -1.5609, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5544, -0.6565, -1.5529, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5542, -0.6552, -1.5357, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5506, -0.6531, -1.5236, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5336, -0.6470, -1.5204, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.850000. Loss: 0.631601. Time: 13.736272
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.760000, Val Loss: 1.098061 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4976, -0.6378, -1.5083, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4977, -0.6337, -1.5154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4955, -0.6255, -1.5306, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5167, -0.6323, -1.5592, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5431, -0.6428, -1.5810, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5655, -0.6489, -1.5950, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5903, -0.6540, -1.6171, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6048, -0.6575, -1.6353, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6103, -0.6607, -1.6445, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5920, -0.6736, -1.6488, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5594, -0.6922, -1.6435, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5093, -0.6910, -1.6102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4530, -0.6753, -1.5609, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4163, -0.6475, -1.5457, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4148, -0.6564, -1.5420, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4163, -0.6651, -1.5419, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4244, -0.6697, -1.5609, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4259, -0.6493, -1.5734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4191, -0.5857, -1.5668, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.790000. Loss: 0.939161. Time: 12.447760
Validate after epoch 38 with seed 297566
Val Accuracy: 0.740000, Val Loss: 1.203217 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4642, -0.5947, -1.6049, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5146, -0.6447, -1.5849, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5374, -0.6660, -1.5741, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5652, -0.6806, -1.5809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5810, -0.6894, -1.5827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5956, -0.6937, -1.5855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5955, -0.6996, -1.5840, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5994, -0.7035, -1.5965, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5948, -0.7105, -1.5879, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5890, -0.7180, -1.5711, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5751, -0.7256, -1.5505, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -0.7327, -1.5271, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4858, -0.7296, -1.5138, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4632, -0.7269, -1.5235, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4475, -0.7206, -1.5340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4386, -0.6948, -1.5516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4430, -0.6741, -1.5676, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4601, -0.6737, -1.5827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4578, -0.6493, -1.6072, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.755000. Loss: 1.013005. Time: 11.758892
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.740000, Val Loss: 1.258681 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4633, -0.6120, -1.6257, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4931, -0.5996, -1.6074, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5078, -0.5853, -1.5869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -0.5826, -1.5743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5307, -0.5812, -1.5619, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5310, -0.5756, -1.5630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5462, -0.5782, -1.5603, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -0.5798, -1.5590, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5688, -0.5818, -1.5561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5855, -0.5830, -1.5397, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5933, -0.5851, -1.5172, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5798, -0.5911, -1.5077, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5501, -0.5973, -1.5107, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -0.6001, -1.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4934, -0.5905, -1.5310, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4639, -0.5759, -1.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4544, -0.5771, -1.5489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4798, -0.5892, -1.5513, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4932, -0.5898, -1.5693, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.800000. Loss: 0.825831. Time: 11.705924
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.770000, Val Loss: 1.176506 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5071, -0.5872, -1.5847, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5244, -0.5984, -1.5697, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5436, -0.6089, -1.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5590, -0.6154, -1.5443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5725, -0.6195, -1.5329, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5768, -0.6221, -1.5285, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5697, -0.6243, -1.5286, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5628, -0.6257, -1.5274, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5521, -0.6253, -1.5254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5477, -0.6261, -1.5363, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5600, -0.6294, -1.5550, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5643, -0.6318, -1.5838, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5478, -0.6316, -1.6047, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5423, -0.6332, -1.6144, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -0.6343, -1.5971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5473, -0.6347, -1.5818, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5506, -0.6338, -1.5677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -0.6278, -1.5596, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5220, -0.6197, -1.5522, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.880000. Loss: 0.701944. Time: 11.442062
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.820000, Val Loss: 0.887299 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -0.5906, -1.5529, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4941, -0.5872, -1.5616, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5005, -0.5850, -1.5660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4957, -0.5745, -1.5886, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4793, -0.5498, -1.6191, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4695, -0.5354, -1.6340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4656, -0.5257, -1.6428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4709, -0.5276, -1.6373, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4917, -0.5485, -1.6240, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -0.5765, -1.6041, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5392, -0.5943, -1.5939, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5614, -0.6090, -1.5867, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5707, -0.6178, -1.5803, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5625, -0.6226, -1.5760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5475, -0.6247, -1.5711, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5443, -0.6255, -1.5579, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5478, -0.6250, -1.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5517, -0.6244, -1.5296, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5561, -0.6259, -1.5251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.790000. Loss: 1.021541. Time: 9.943902
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.750000, Val Loss: 1.042607 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -0.6255, -1.5264, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5445, -0.6211, -1.5342, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -0.6155, -1.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5280, -0.6080, -1.5746, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5190, -0.6039, -1.5923, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5130, -0.6012, -1.6050, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5133, -0.6014, -1.6149, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5324, -0.6166, -1.6187, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5432, -0.6255, -1.6207, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -0.6279, -1.6203, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -0.6287, -1.6151, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5397, -0.6263, -1.6051, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5359, -0.6232, -1.5954, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5429, -0.6235, -1.5877, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5532, -0.6254, -1.5748, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5501, -0.6249, -1.5581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5419, -0.6226, -1.5426, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -0.6178, -1.5463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5064, -0.6051, -1.5472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.830000. Loss: 0.799414. Time: 10.183155
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.760000, Val Loss: 1.047272 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4913, -0.5945, -1.5579, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5042, -0.6086, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5102, -0.6094, -1.5670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5258, -0.6156, -1.5844, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -0.6264, -1.5927, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5754, -0.6344, -1.6101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5912, -0.6404, -1.6201, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5937, -0.6460, -1.6185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5883, -0.6512, -1.5995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5729, -0.6573, -1.5776, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5591, -0.6617, -1.5594, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -0.6635, -1.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5459, -0.6649, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5475, -0.6675, -1.5088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5460, -0.6686, -1.4954, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5425, -0.6684, -1.4818, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5264, -0.6599, -1.4580, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5157, -0.6537, -1.4603, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5214, -0.6586, -1.4851, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.775000. Loss: 1.131425. Time: 10.102470
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.800000, Val Loss: 0.769704 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5143, -0.6381, -1.4904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5155, -0.6328, -1.4736, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5316, -0.6440, -1.4837, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5575, -0.6579, -1.5268, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5688, -0.6653, -1.5630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5618, -0.6692, -1.5841, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5441, -0.6700, -1.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5272, -0.6689, -1.5527, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5242, -0.6719, -1.5525, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5249, -0.6749, -1.5596, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5389, -0.6878, -1.5665, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5507, -0.6984, -1.5732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5620, -0.7069, -1.5883, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5612, -0.7099, -1.5855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5728, -0.7134, -1.5669, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5789, -0.7160, -1.5567, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5898, -0.7164, -1.5615, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6007, -0.7174, -1.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6036, -0.7204, -1.5691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.820000. Loss: 0.924301. Time: 10.038227
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.770000, Val Loss: 0.987475 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6206, -0.7214, -1.5610, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6250, -0.7304, -1.5659, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6160, -0.7438, -1.5705, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6034, -0.7606, -1.5802, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5743, -0.7900, -1.5797, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5544, -0.8078, -1.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5357, -0.8169, -1.5765, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5217, -0.8233, -1.5788, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4905, -0.8118, -1.5669, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4700, -0.8063, -1.5592, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4607, -0.8091, -1.5550, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4581, -0.8165, -1.5511, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4704, -0.8425, -1.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4770, -0.8543, -1.5274, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4754, -0.8446, -1.5250, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4711, -0.8174, -1.5226, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4739, -0.8035, -1.5237, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4720, -0.7895, -1.5195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4850, -0.8065, -1.5196, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.790000. Loss: 0.846989. Time: 10.369381
Validate after epoch 46 with seed 91566
Val Accuracy: 0.830000, Val Loss: 0.687845 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -0.8175, -1.5165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4869, -0.7961, -1.5100, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5096, -0.7928, -1.5233, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5446, -0.8127, -1.5516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5880, -0.8293, -1.5849, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6187, -0.8474, -1.6056, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6167, -0.8934, -1.6019, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6072, -0.9317, -1.5965, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5906, -0.9673, -1.5931, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5698, -0.9937, -1.5959, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5603, -1.0110, -1.6008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5477, -1.0201, -1.5995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5293, -1.0223, -1.5807, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5149, -1.0240, -1.5661, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5019, -1.0185, -1.5547, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4899, -1.0092, -1.5443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4817, -1.0009, -1.5376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4755, -0.9922, -1.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4769, -0.9839, -1.5326, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.835000. Loss: 0.817866. Time: 9.965070
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.860000, Val Loss: 0.617726 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5002, -1.0048, -1.5507, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4939, -0.9972, -1.5621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4927, -0.9956, -1.5704, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5014, -0.9887, -1.5723, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5044, -0.9733, -1.5635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4988, -0.9451, -1.5483, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4954, -0.9289, -1.5390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4880, -0.9119, -1.5293, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4782, -0.8884, -1.5269, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4819, -0.8816, -1.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4992, -0.8807, -1.5399, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5142, -0.8845, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5171, -0.8776, -1.5595, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5206, -0.8628, -1.5670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5243, -0.8473, -1.5678, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5267, -0.8355, -1.5652, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5459, -0.8340, -1.5629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5610, -0.8335, -1.5621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5761, -0.8344, -1.5602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.800000. Loss: 0.799547. Time: 8.874909
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.690000, Val Loss: 1.219750 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5927, -0.8351, -1.5490, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5973, -0.8347, -1.5399, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6041, -0.8328, -1.5312, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5940, -0.8398, -1.5220, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5753, -0.8512, -1.5185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5579, -0.8586, -1.5238, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5428, -0.8624, -1.5415, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5288, -0.8621, -1.5568, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5150, -0.8587, -1.5647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5112, -0.8496, -1.5635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5044, -0.8319, -1.5712, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4909, -0.8085, -1.5903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4846, -0.7968, -1.6116, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -0.8050, -1.6123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5113, -0.8225, -1.6114, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5438, -0.8412, -1.6262, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5616, -0.8501, -1.6489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5716, -0.8535, -1.6644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5740, -0.8559, -1.6545, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.825000. Loss: 0.818335. Time: 8.068322
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.720000, Val Loss: 1.362341 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5422, -0.8580, -1.6030, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5345, -0.8575, -1.5552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5295, -0.8559, -1.5111, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5168, -0.8457, -1.4826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4995, -0.8191, -1.4734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -0.7946, -1.4744, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4862, -0.7720, -1.4888, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4823, -0.7475, -1.5229, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4830, -0.7289, -1.5484, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4821, -0.7149, -1.5615, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4636, -0.6682, -1.5502, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4650, -0.6628, -1.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4640, -0.6466, -1.5485, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4692, -0.6431, -1.5635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4782, -0.6446, -1.5813, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4896, -0.6502, -1.5960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5051, -0.6532, -1.6009, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5143, -0.6532, -1.6007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5219, -0.6535, -1.6006, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.810000. Loss: 0.984218. Time: 7.167975
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.800000, Val Loss: 0.993901 
Training Execution time: 22:13:35.00
Conducting Test
Test Accuracy: 0.821000, Test Loss: 0.877350 
