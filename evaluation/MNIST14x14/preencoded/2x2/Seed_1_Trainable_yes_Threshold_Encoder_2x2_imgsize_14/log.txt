Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1258, -0.9116, -0.2684, -0.7104]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1723, -0.9572, -0.2684, -0.7553]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2143, -0.9976, -0.2684, -0.7962]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2566, -1.0324, -0.2684, -0.8328]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2967, -1.0650, -0.2684, -0.8679]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3304, -1.0923, -0.2684, -0.8966]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3713, -1.1200, -0.2684, -0.9225]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4061, -1.1425, -0.2684, -0.9454]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4329, -1.1574, -0.2684, -0.9665]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4628, -1.1718, -0.2684, -0.9881]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5073, -1.1958, -0.2684, -1.0200]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5581, -1.2290, -0.2684, -1.0611]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5995, -1.2530, -0.2684, -1.0933]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6430, -1.2757, -0.2684, -1.1189]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6839, -1.2953, -0.2684, -1.1404]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7189, -1.3107, -0.2684, -1.1602]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7496, -1.3239, -0.2684, -1.1771]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7840, -1.3390, -0.2684, -1.1933]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8185, -1.3523, -0.2684, -1.2084]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.425000. Loss: 3.332717. Time: 17.863626
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.610000, Val Loss: 1.257848 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8883, -1.3824, -0.2684, -1.2474]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9070, -1.3894, -0.2684, -1.2590]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9275, -1.3958, -0.2684, -1.2690]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9423, -1.4000, -0.2684, -1.2763]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9494, -1.4022, -0.2684, -1.2825]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9580, -1.4050, -0.2684, -1.2865]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9717, -1.4094, -0.2684, -1.2917]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9887, -1.4130, -0.2684, -1.2987]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0009, -1.4138, -0.2684, -1.2980]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0245, -1.4198, -0.2684, -1.3079]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0477, -1.4270, -0.2684, -1.3206]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0793, -1.4408, -0.2684, -1.3392]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1070, -1.4517, -0.2684, -1.3515]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1257, -1.4533, -0.2684, -1.3565]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1344, -1.4477, -0.2684, -1.3539]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1425, -1.4433, -0.2684, -1.3509]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1483, -1.4402, -0.2684, -1.3528]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1480, -1.4365, -0.2684, -1.3517]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1515, -1.4354, -0.2684, -1.3516]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.650000. Loss: 1.133408. Time: 17.870365
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.610000, Val Loss: 1.238279 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1742, -1.4445, -0.2684, -1.3587]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1908, -1.4481, -0.2684, -1.3620]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2061, -1.4516, -0.2684, -1.3666]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2165, -1.4521, -0.2684, -1.3714]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2102, -1.4460, -0.2684, -1.3672]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2001, -1.4407, -0.2684, -1.3592]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2001, -1.4442, -0.2684, -1.3576]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2167, -1.4574, -0.2684, -1.3723]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2399, -1.4713, -0.2684, -1.3850]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2636, -1.4821, -0.2684, -1.4037]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2801, -1.4846, -0.2684, -1.4170]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2850, -1.4790, -0.2684, -1.4204]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2770, -1.4681, -0.2684, -1.4173]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2802, -1.4656, -0.2684, -1.4232]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2850, -1.4635, -0.2684, -1.4265]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2876, -1.4625, -0.2684, -1.4259]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2942, -1.4663, -0.2684, -1.4279]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2967, -1.4674, -0.2684, -1.4276]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2869, -1.4628, -0.2684, -1.4216]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.675000. Loss: 1.072427. Time: 17.715855
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.670000, Val Loss: 1.113155 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2810, -1.4589, -0.2684, -1.4207]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2813, -1.4600, -0.2684, -1.4217]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2817, -1.4621, -0.2684, -1.4219]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2891, -1.4657, -0.2684, -1.4260]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3127, -1.4838, -0.2684, -1.4424]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3229, -1.4929, -0.2684, -1.4481]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3233, -1.4939, -0.2684, -1.4453]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3278, -1.4960, -0.2684, -1.4433]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3300, -1.4870, -0.2684, -1.4353]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3297, -1.4782, -0.2684, -1.4265]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3250, -1.4703, -0.2684, -1.4176]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3203, -1.4650, -0.2684, -1.4139]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3285, -1.4728, -0.2684, -1.4237]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3423, -1.4836, -0.2684, -1.4370]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3512, -1.4902, -0.2684, -1.4448]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3575, -1.4947, -0.2684, -1.4494]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3592, -1.4953, -0.2684, -1.4494]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3558, -1.4917, -0.2684, -1.4447]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3573, -1.4931, -0.2684, -1.4455]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.755000. Loss: 0.935853. Time: 17.682849
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.690000, Val Loss: 1.036118 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3606, -1.4958, -0.2684, -1.4513]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3619, -1.4965, -0.2684, -1.4538]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3592, -1.4938, -0.2684, -1.4512]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3647, -1.5010, -0.2684, -1.4568]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3830, -1.5163, -0.2684, -1.4696]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4082, -1.5353, -0.2684, -1.4873]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4261, -1.5497, -0.2684, -1.5035]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4406, -1.5584, -0.2684, -1.5170]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4446, -1.5609, -0.2684, -1.5213]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4563, -1.5655, -0.2684, -1.5300]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4699, -1.5657, -0.2684, -1.5357]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4731, -1.5599, -0.2684, -1.5334]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4775, -1.5536, -0.2684, -1.5335]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4780, -1.5399, -0.2684, -1.5291]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4491, -1.5050, -0.2684, -1.4992]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4161, -1.4687, -0.2684, -1.4653]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4078, -1.4551, -0.2684, -1.4560]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4147, -1.4454, -0.2684, -1.4571]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4323, -1.4497, -0.2684, -1.4685]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.660000. Loss: 1.211675. Time: 17.798428
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.630000, Val Loss: 1.205111 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4542, -1.4911, -0.2684, -1.4896]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4528, -1.5178, -0.2684, -1.4928]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4361, -1.5195, -0.2684, -1.4829]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4065, -1.5062, -0.2684, -1.4616]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3780, -1.4922, -0.2684, -1.4397]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3569, -1.4829, -0.2684, -1.4235]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3507, -1.4827, -0.2684, -1.4202]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3524, -1.4923, -0.2684, -1.4291]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3655, -1.5076, -0.2684, -1.4491]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3947, -1.5289, -0.2684, -1.4799]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4419, -1.5593, -0.2684, -1.5201]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -1.5749, -0.2684, -1.5479]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5056, -1.5858, -0.2684, -1.5707]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5122, -1.5842, -0.2684, -1.5758]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5165, -1.5818, -0.2684, -1.5788]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5106, -1.5687, -0.2684, -1.5702]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5082, -1.5480, -0.2684, -1.5545]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5075, -1.5337, -0.2684, -1.5392]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5083, -1.5300, -0.2684, -1.5331]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.690000. Loss: 1.141271. Time: 17.799684
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.780000, Val Loss: 0.773691 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5137, -1.5227, -0.2684, -1.5291]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5097, -1.5210, -0.2684, -1.5266]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5110, -1.5301, -0.2684, -1.5287]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5043, -1.5357, -0.2684, -1.5211]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -1.5391, -0.2684, -1.5109]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4811, -1.5332, -0.2684, -1.5007]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4619, -1.5205, -0.2684, -1.4850]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4278, -1.4944, -0.2684, -1.4577]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4074, -1.4858, -0.2684, -1.4501]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4118, -1.4972, -0.2684, -1.4654]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4101, -1.5018, -0.2684, -1.4721]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4112, -1.5123, -0.2684, -1.4821]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3999, -1.5140, -0.2684, -1.4818]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3965, -1.5183, -0.2684, -1.4861]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3926, -1.5216, -0.2684, -1.4894]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3866, -1.5193, -0.2684, -1.4898]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3980, -1.5261, -0.2684, -1.5029]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3984, -1.5220, -0.2684, -1.5037]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3863, -1.5060, -0.2684, -1.4926]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.680000. Loss: 0.911646. Time: 17.624589
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.790000, Val Loss: 0.771965 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3806, -1.4938, -0.2684, -1.4787]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3803, -1.4818, -0.2684, -1.4666]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3755, -1.4683, -0.2684, -1.4524]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3991, -1.4950, -0.2684, -1.4745]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4191, -1.5194, -0.2684, -1.4903]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4320, -1.5331, -0.2684, -1.4961]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4369, -1.5410, -0.2684, -1.4990]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4330, -1.5413, -0.2684, -1.4956]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4233, -1.5378, -0.2684, -1.4863]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4064, -1.5290, -0.2684, -1.4694]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3961, -1.5216, -0.2684, -1.4579]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3905, -1.5148, -0.2684, -1.4496]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3831, -1.5057, -0.2684, -1.4437]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3782, -1.5040, -0.2684, -1.4415]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3795, -1.5054, -0.2684, -1.4466]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3847, -1.5089, -0.2684, -1.4509]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3958, -1.5172, -0.2684, -1.4642]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4040, -1.5197, -0.2684, -1.4751]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4101, -1.5221, -0.2684, -1.4841]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.745000. Loss: 0.936532. Time: 17.728210
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.690000, Val Loss: 1.055725 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4513, -1.5560, -0.2684, -1.5290]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4541, -1.5539, -0.2684, -1.5317]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4522, -1.5403, -0.2684, -1.5244]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4527, -1.5339, -0.2684, -1.5225]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4565, -1.5301, -0.2684, -1.5209]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4597, -1.5267, -0.2684, -1.5187]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4648, -1.5309, -0.2684, -1.5205]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -1.5490, -0.2684, -1.5326]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4801, -1.5510, -0.2684, -1.5314]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4784, -1.5467, -0.2684, -1.5229]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4819, -1.5530, -0.2684, -1.5293]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4916, -1.5592, -0.2684, -1.5378]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4916, -1.5583, -0.2684, -1.5348]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4871, -1.5606, -0.2684, -1.5316]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4816, -1.5564, -0.2684, -1.5277]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4842, -1.5395, -0.2684, -1.5232]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4794, -1.5139, -0.2684, -1.5094]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4726, -1.4954, -0.2684, -1.4980]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4822, -1.4941, -0.2684, -1.5054]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.735000. Loss: 0.913669. Time: 17.685656
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.770000, Val Loss: 0.856034 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5175, -1.5267, -0.2684, -1.5415]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5313, -1.5424, -0.2684, -1.5500]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5313, -1.5551, -0.2684, -1.5519]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -1.5743, -0.2684, -1.5602]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5447, -1.6010, -0.2684, -1.5715]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5419, -1.6149, -0.2684, -1.5714]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5378, -1.6127, -0.2684, -1.5694]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5252, -1.5914, -0.2684, -1.5556]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5250, -1.5855, -0.2684, -1.5535]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5244, -1.5844, -0.2684, -1.5519]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5271, -1.5853, -0.2684, -1.5516]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5446, -1.5963, -0.2684, -1.5675]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5498, -1.5955, -0.2684, -1.5740]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -1.5939, -0.2684, -1.5808]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -1.5932, -0.2684, -1.5858]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5369, -1.5683, -0.2684, -1.5700]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5265, -1.5552, -0.2684, -1.5610]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5147, -1.5430, -0.2684, -1.5454]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5165, -1.5347, -0.2684, -1.5376]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.765000. Loss: 1.020141. Time: 17.752852
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.710000, Val Loss: 1.091538 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5006, -1.5142, -0.2684, -1.5119]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4948, -1.5125, -0.2684, -1.5012]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5137, -1.5269, -0.2684, -1.5107]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5435, -1.5450, -0.2684, -1.5304]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5538, -1.5590, -0.2684, -1.5392]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -1.5782, -0.2684, -1.5485]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5538, -1.5916, -0.2684, -1.5525]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5532, -1.6148, -0.2684, -1.5649]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5486, -1.6365, -0.2684, -1.5747]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5357, -1.6359, -0.2684, -1.5702]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5209, -1.6100, -0.2684, -1.5573]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -1.5729, -0.2684, -1.5366]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4974, -1.5451, -0.2684, -1.5271]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4944, -1.5250, -0.2684, -1.5231]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5078, -1.5277, -0.2684, -1.5305]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5159, -1.5355, -0.2684, -1.5366]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5173, -1.5389, -0.2684, -1.5391]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5226, -1.5470, -0.2684, -1.5486]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5321, -1.5528, -0.2684, -1.5587]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.730000. Loss: 0.932415. Time: 17.696924
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.780000, Val Loss: 0.628754 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.5125, -0.2684, -1.5439]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5258, -1.4934, -0.2684, -1.5370]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5154, -1.4737, -0.2684, -1.5272]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4968, -1.4710, -0.2684, -1.5161]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4884, -1.4856, -0.2684, -1.5171]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4917, -1.5020, -0.2684, -1.5253]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4929, -1.5160, -0.2684, -1.5287]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -1.5243, -0.2684, -1.5293]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5175, -1.5663, -0.2684, -1.5503]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5375, -1.6069, -0.2684, -1.5689]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5389, -1.6267, -0.2684, -1.5718]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5138, -1.6262, -0.2684, -1.5494]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5085, -1.6384, -0.2684, -1.5465]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4932, -1.6144, -0.2684, -1.5286]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4757, -1.5800, -0.2684, -1.5074]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4748, -1.5621, -0.2684, -1.5042]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4683, -1.5493, -0.2684, -1.5006]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4624, -1.5267, -0.2684, -1.4929]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4532, -1.4957, -0.2684, -1.4799]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.700000. Loss: 1.104555. Time: 17.848212
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.760000, Val Loss: 0.753383 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4525, -1.4622, -0.2684, -1.4859]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4536, -1.4823, -0.2684, -1.4964]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4667, -1.5222, -0.2684, -1.5217]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -1.5554, -0.2684, -1.5404]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4924, -1.5608, -0.2684, -1.5580]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5089, -1.5596, -0.2684, -1.5808]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -1.5353, -0.2684, -1.5797]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5384, -1.5211, -0.2684, -1.5785]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5510, -1.5053, -0.2684, -1.5746]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5577, -1.5088, -0.2684, -1.5690]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5520, -1.5166, -0.2684, -1.5438]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5388, -1.5221, -0.2684, -1.5096]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5323, -1.5335, -0.2684, -1.4911]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5289, -1.5543, -0.2684, -1.4886]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5156, -1.5707, -0.2684, -1.5002]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5144, -1.5767, -0.2684, -1.5122]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5009, -1.5465, -0.2684, -1.5045]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4891, -1.5196, -0.2684, -1.5064]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4830, -1.5100, -0.2684, -1.5149]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.680000. Loss: 1.217662. Time: 17.650006
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.800000, Val Loss: 0.816708 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4704, -1.5155, -0.2684, -1.5628]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4670, -1.5134, -0.2684, -1.5687]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4695, -1.5223, -0.2684, -1.5603]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4789, -1.5334, -0.2684, -1.5573]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5105, -1.5616, -0.2684, -1.5705]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5289, -1.5770, -0.2684, -1.5800]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -1.5782, -0.2684, -1.5706]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5358, -1.5848, -0.2684, -1.5628]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5351, -1.5861, -0.2684, -1.5573]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -1.5886, -0.2684, -1.5553]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5345, -1.5944, -0.2684, -1.5528]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5326, -1.5962, -0.2684, -1.5462]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5274, -1.5826, -0.2684, -1.5380]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5235, -1.5709, -0.2684, -1.5277]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5205, -1.5570, -0.2684, -1.5060]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5137, -1.5294, -0.2684, -1.4981]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5166, -1.5078, -0.2684, -1.5017]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5207, -1.5027, -0.2684, -1.5095]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5201, -1.5093, -0.2684, -1.5125]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.755000. Loss: 1.024517. Time: 17.731719
Validate after epoch 14 with seed 964979
Val Accuracy: 0.780000, Val Loss: 0.944333 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5068, -1.5147, -0.2684, -1.5084]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4961, -1.5179, -0.2684, -1.5031]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4827, -1.5180, -0.2684, -1.4988]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4714, -1.5211, -0.2684, -1.5015]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4650, -1.5262, -0.2684, -1.5056]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4720, -1.5406, -0.2684, -1.5265]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4816, -1.5434, -0.2684, -1.5376]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4930, -1.5450, -0.2684, -1.5455]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5278, -1.5536, -0.2684, -1.5643]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5617, -1.5785, -0.2684, -1.5847]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5789, -1.5998, -0.2684, -1.5971]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5770, -1.6043, -0.2684, -1.5895]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5682, -1.6000, -0.2684, -1.5763]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5645, -1.5971, -0.2684, -1.5668]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5638, -1.5948, -0.2684, -1.5555]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5668, -1.6048, -0.2684, -1.5556]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5579, -1.5887, -0.2684, -1.5488]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5405, -1.5605, -0.2684, -1.5331]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5250, -1.5411, -0.2684, -1.5226]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.780000. Loss: 0.825587. Time: 17.850156
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.780000, Val Loss: 1.098561 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4906, -1.5058, -0.2684, -1.5046]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4820, -1.4978, -0.2684, -1.5099]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4798, -1.4969, -0.2684, -1.5131]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4822, -1.4922, -0.2684, -1.5156]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4918, -1.4802, -0.2684, -1.5282]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5127, -1.4781, -0.2684, -1.5417]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5220, -1.4835, -0.2684, -1.5518]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5283, -1.5056, -0.2684, -1.5656]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5270, -1.5336, -0.2684, -1.5743]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5350, -1.5596, -0.2684, -1.5855]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5455, -1.5825, -0.2684, -1.5900]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5343, -1.5844, -0.2684, -1.5727]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5398, -1.5996, -0.2684, -1.5758]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5441, -1.6096, -0.2684, -1.5805]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.6154, -0.2684, -1.5742]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5584, -1.6126, -0.2684, -1.5669]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5648, -1.6144, -0.2684, -1.5618]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5735, -1.5965, -0.2684, -1.5559]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5832, -1.5825, -0.2684, -1.5475]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.760000. Loss: 0.895424. Time: 17.561269
Validate after epoch 16 with seed 840036
Val Accuracy: 0.720000, Val Loss: 1.155410 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.5577, -0.2684, -1.5155]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5508, -1.5447, -0.2684, -1.4939]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5539, -1.5417, -0.2684, -1.4950]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5761, -1.5743, -0.2684, -1.5203]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5839, -1.5974, -0.2684, -1.5384]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5962, -1.6199, -0.2684, -1.5646]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5997, -1.6290, -0.2684, -1.5830]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5695, -1.5956, -0.2684, -1.5919]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5542, -1.5663, -0.2684, -1.6055]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5457, -1.5524, -0.2684, -1.6129]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5430, -1.5565, -0.2684, -1.6112]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5419, -1.5620, -0.2684, -1.6193]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5285, -1.5599, -0.2684, -1.5944]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5059, -1.5479, -0.2684, -1.5531]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5044, -1.5428, -0.2684, -1.5346]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5174, -1.5387, -0.2684, -1.5270]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5283, -1.5373, -0.2684, -1.5230]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5301, -1.5425, -0.2684, -1.5220]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -1.5392, -0.2684, -1.5089]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.740000. Loss: 1.167129. Time: 14.770787
Validate after epoch 17 with seed 180463
Val Accuracy: 0.710000, Val Loss: 1.073548 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5276, -1.5509, -0.2684, -1.5060]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5392, -1.5707, -0.2684, -1.5072]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5440, -1.5880, -0.2684, -1.5155]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5425, -1.5859, -0.2684, -1.5297]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5434, -1.5742, -0.2684, -1.5476]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5427, -1.5649, -0.2684, -1.5629]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5521, -1.5695, -0.2684, -1.5480]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5497, -1.5703, -0.2684, -1.5413]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5378, -1.5621, -0.2684, -1.5375]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5194, -1.5383, -0.2684, -1.5285]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4988, -1.5153, -0.2684, -1.5159]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4860, -1.5012, -0.2684, -1.5121]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4795, -1.4922, -0.2684, -1.5093]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -1.4939, -0.2684, -1.5061]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4915, -1.5085, -0.2684, -1.5222]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4952, -1.5215, -0.2684, -1.5301]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5003, -1.5353, -0.2684, -1.5383]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5052, -1.5459, -0.2684, -1.5454]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5207, -1.5494, -0.2684, -1.5465]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.710000. Loss: 0.938560. Time: 14.249587
Validate after epoch 18 with seed 575883
Val Accuracy: 0.610000, Val Loss: 1.871826 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5303, -1.5773, -0.2684, -1.5880]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5298, -1.5919, -0.2684, -1.5985]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5273, -1.5938, -0.2684, -1.5895]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5379, -1.6009, -0.2684, -1.5791]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5466, -1.6116, -0.2684, -1.5802]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5560, -1.6148, -0.2684, -1.5828]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5614, -1.6140, -0.2684, -1.5876]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5514, -1.5938, -0.2684, -1.5735]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5323, -1.5514, -0.2684, -1.5266]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5169, -1.5205, -0.2684, -1.4880]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5061, -1.5009, -0.2684, -1.4637]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5177, -1.5092, -0.2684, -1.4663]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -1.5237, -0.2684, -1.4741]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5484, -1.5312, -0.2684, -1.4838]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5546, -1.5327, -0.2684, -1.4904]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5563, -1.5499, -0.2684, -1.5153]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5595, -1.5540, -0.2684, -1.5184]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5483, -1.5368, -0.2684, -1.5040]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5356, -0.2684, -1.5114]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.800000. Loss: 0.792520. Time: 14.023777
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.710000, Val Loss: 0.963743 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5614, -1.5460, -0.2684, -1.5486]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5655, -1.5467, -0.2684, -1.5574]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5687, -1.5491, -0.2684, -1.5661]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5712, -1.5541, -0.2684, -1.5734]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5778, -1.5713, -0.2684, -1.5909]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5856, -1.5878, -0.2684, -1.6004]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5845, -1.5969, -0.2684, -1.6039]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5927, -1.5964, -0.2684, -1.6046]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5889, -1.5891, -0.2684, -1.6098]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5809, -1.5893, -0.2684, -1.6224]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5603, -1.5832, -0.2684, -1.6079]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -1.5697, -0.2684, -1.5766]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5117, -1.5530, -0.2684, -1.5503]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4998, -1.5469, -0.2684, -1.5331]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4958, -1.5491, -0.2684, -1.5303]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4970, -1.5535, -0.2684, -1.5317]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5000, -1.5589, -0.2684, -1.5363]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4988, -1.5599, -0.2684, -1.5433]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4894, -1.5362, -0.2684, -1.5352]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.765000. Loss: 0.983762. Time: 12.847907
Validate after epoch 20 with seed 822616
Val Accuracy: 0.800000, Val Loss: 0.910549 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5146, -1.5331, -0.2684, -1.5625]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5190, -1.5279, -0.2684, -1.5686]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5160, -1.5210, -0.2684, -1.5592]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5118, -1.5149, -0.2684, -1.5391]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5110, -1.5104, -0.2684, -1.5283]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5113, -1.5198, -0.2684, -1.5311]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.5327, -0.2684, -1.5415]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5096, -1.5368, -0.2684, -1.5408]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5278, -1.5581, -0.2684, -1.5417]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5430, -1.5849, -0.2684, -1.5456]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5610, -1.6120, -0.2684, -1.5572]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5677, -1.6275, -0.2684, -1.5572]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -1.6281, -0.2684, -1.5484]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5614, -1.6293, -0.2684, -1.5439]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5450, -1.6189, -0.2684, -1.5327]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5342, -1.6017, -0.2684, -1.5355]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5250, -1.5721, -0.2684, -1.5366]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5191, -1.5449, -0.2684, -1.5363]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5164, -1.5345, -0.2684, -1.5378]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.770000. Loss: 0.799996. Time: 12.404833
Validate after epoch 21 with seed 519531
Val Accuracy: 0.790000, Val Loss: 0.705197 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4902, -1.5083, -0.2684, -1.5235]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4877, -1.5032, -0.2684, -1.5199]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4914, -1.5048, -0.2684, -1.5212]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4964, -1.5083, -0.2684, -1.5128]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4960, -1.5101, -0.2684, -1.5038]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5071, -1.5163, -0.2684, -1.5094]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5232, -1.5419, -0.2684, -1.5224]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5232, -1.5480, -0.2684, -1.5211]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5277, -1.5433, -0.2684, -1.5202]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5327, -1.5428, -0.2684, -1.5263]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5519, -0.2684, -1.5370]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5634, -1.5601, -0.2684, -1.5550]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5695, -1.5631, -0.2684, -1.5614]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5719, -1.5736, -0.2684, -1.5659]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5717, -1.5693, -0.2684, -1.5589]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5754, -1.5714, -0.2684, -1.5595]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5722, -1.5740, -0.2684, -1.5601]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5785, -1.5865, -0.2684, -1.5776]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5791, -1.5891, -0.2684, -1.5847]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.790000. Loss: 0.934385. Time: 12.460507
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.630000, Val Loss: 1.438332 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5812, -1.5647, -0.2684, -1.5925]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.5534, -0.2684, -1.5915]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5686, -1.5443, -0.2684, -1.5808]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5670, -1.5441, -0.2684, -1.5786]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5513, -1.5347, -0.2684, -1.5637]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5490, -1.5285, -0.2684, -1.5545]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5497, -1.5362, -0.2684, -1.5481]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5382, -1.5597, -0.2684, -1.5336]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5407, -1.5815, -0.2684, -1.5304]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5451, -1.5940, -0.2684, -1.5278]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5437, -1.6013, -0.2684, -1.5259]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5350, -1.6030, -0.2684, -1.5195]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5210, -1.5931, -0.2684, -1.5123]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5084, -1.5856, -0.2684, -1.5121]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5079, -1.5807, -0.2684, -1.5240]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4983, -1.5651, -0.2684, -1.5305]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4873, -1.5438, -0.2684, -1.5323]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4837, -1.5509, -0.2684, -1.5402]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4854, -1.5602, -0.2684, -1.5543]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.790000. Loss: 0.906230. Time: 11.631807
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.740000, Val Loss: 1.222012 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5155, -1.5812, -0.2684, -1.6042]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5354, -1.5857, -0.2684, -1.6206]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5489, -1.5945, -0.2684, -1.6278]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5585, -1.5984, -0.2684, -1.6295]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5735, -1.6012, -0.2684, -1.6346]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5877, -1.6051, -0.2684, -1.6348]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5960, -1.5978, -0.2684, -1.6106]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5882, -1.5682, -0.2684, -1.5626]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5799, -1.5427, -0.2684, -1.5190]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5617, -1.5231, -0.2684, -1.4875]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5062, -0.2684, -1.4630]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5333, -1.4925, -0.2684, -1.4501]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5135, -1.4828, -0.2684, -1.4426]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5039, -1.4897, -0.2684, -1.4559]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5137, -1.5167, -0.2684, -1.4930]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5365, -1.5371, -0.2684, -1.5235]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -1.5442, -0.2684, -1.5381]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5832, -1.5645, -0.2684, -1.5648]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6204, -1.5936, -0.2684, -1.6033]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.780000. Loss: 0.930074. Time: 10.501391
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.690000, Val Loss: 1.214588 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6567, -1.6520, -0.2684, -1.6661]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6580, -1.6793, -0.2684, -1.6866]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6477, -1.6845, -0.2684, -1.6863]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6222, -1.6679, -0.2684, -1.6576]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5722, -1.6217, -0.2684, -1.5828]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5492, -1.5915, -0.2684, -1.5363]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5280, -1.5571, -0.2684, -1.4922]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5246, -1.5341, -0.2684, -1.4740]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5134, -1.5092, -0.2684, -1.4570]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5171, -1.4897, -0.2684, -1.4749]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5250, -1.4854, -0.2684, -1.4960]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5358, -1.5024, -0.2684, -1.5300]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5415, -1.5186, -0.2684, -1.5598]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5623, -1.5477, -0.2684, -1.6006]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.5443, -0.2684, -1.5883]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5432, -1.5516, -0.2684, -1.5798]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5412, -1.5639, -0.2684, -1.5726]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5455, -1.5746, -0.2684, -1.5749]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -1.5999, -0.2684, -1.6005]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.745000. Loss: 1.057555. Time: 10.659534
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.720000, Val Loss: 1.179203 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5770, -1.6234, -0.2684, -1.6229]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5742, -1.6170, -0.2684, -1.6044]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5632, -1.5939, -0.2684, -1.5705]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5485, -1.5729, -0.2684, -1.5541]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5291, -1.5536, -0.2684, -1.5462]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5184, -1.5381, -0.2684, -1.5459]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5156, -1.5240, -0.2684, -1.5571]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5133, -1.5155, -0.2684, -1.5671]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5174, -1.5119, -0.2684, -1.5780]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5243, -1.5094, -0.2684, -1.5923]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5235, -1.5064, -0.2684, -1.5962]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5242, -1.5069, -0.2684, -1.5981]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5285, -1.5081, -0.2684, -1.5844]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5338, -1.5158, -0.2684, -1.5779]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5325, -1.5236, -0.2684, -1.5702]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.5303, -0.2684, -1.5657]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5379, -1.5436, -0.2684, -1.5760]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -1.5852, -0.2684, -1.6121]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5920, -1.6244, -0.2684, -1.6267]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.815000. Loss: 0.836271. Time: 10.692123
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.770000, Val Loss: 1.001335 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6154, -1.6495, -0.2684, -1.6232]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6188, -1.6419, -0.2684, -1.6070]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6141, -1.6315, -0.2684, -1.5884]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6023, -1.6152, -0.2684, -1.5584]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5871, -1.5943, -0.2684, -1.5155]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -1.5606, -0.2684, -1.4782]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5538, -1.5340, -0.2684, -1.4772]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5293, -1.5037, -0.2684, -1.4796]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4978, -1.4676, -0.2684, -1.4803]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4788, -1.4430, -0.2684, -1.4862]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4749, -1.4375, -0.2684, -1.4890]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4632, -1.4234, -0.2684, -1.4775]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4549, -1.4168, -0.2684, -1.4719]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4588, -1.4341, -0.2684, -1.4912]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4890, -1.4865, -0.2684, -1.5326]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5246, -1.5429, -0.2684, -1.5739]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5824, -1.6109, -0.2684, -1.6197]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6241, -1.6609, -0.2684, -1.6406]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6212, -1.6628, -0.2684, -1.6220]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.730000. Loss: 1.087791. Time: 10.643266
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.770000, Val Loss: 1.150654 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5562, -1.5734, -0.2684, -1.5553]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5193, -1.5305, -0.2684, -1.5281]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5204, -1.5432, -0.2684, -1.5373]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -1.5605, -0.2684, -1.5456]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5301, -1.5637, -0.2684, -1.5473]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5395, -1.5712, -0.2684, -1.5546]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5387, -1.5688, -0.2684, -1.5516]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -1.5619, -0.2684, -1.5441]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5360, -1.5639, -0.2684, -1.5486]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -1.5823, -0.2684, -1.5721]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5624, -1.5966, -0.2684, -1.5871]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5748, -1.6134, -0.2684, -1.6043]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5870, -1.6281, -0.2684, -1.6196]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5864, -1.6303, -0.2684, -1.6292]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5780, -1.6145, -0.2684, -1.6238]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5906, -1.6135, -0.2684, -1.6278]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6064, -1.6200, -0.2684, -1.6351]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6070, -1.6084, -0.2684, -1.6199]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5910, -1.5897, -0.2684, -1.5952]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.810000. Loss: 0.767288. Time: 10.647305
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.800000, Val Loss: 0.828000 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5446, -1.5582, -0.2684, -1.5550]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5203, -1.5451, -0.2684, -1.5284]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5041, -1.5402, -0.2684, -1.5145]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -1.5443, -0.2684, -1.5038]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4950, -1.5567, -0.2684, -1.5042]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5004, -1.5627, -0.2684, -1.5085]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5138, -1.5533, -0.2684, -1.5069]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.5473, -0.2684, -1.4959]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5485, -1.5523, -0.2684, -1.4929]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5605, -1.5501, -0.2684, -1.4910]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5676, -1.5487, -0.2684, -1.5002]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5721, -1.5465, -0.2684, -1.5118]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5801, -1.5510, -0.2684, -1.5252]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5946, -1.5537, -0.2684, -1.5456]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5958, -1.5561, -0.2684, -1.5708]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6021, -1.5602, -0.2684, -1.5893]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6069, -1.5627, -0.2684, -1.5968]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5866, -1.5646, -0.2684, -1.6044]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5713, -1.5668, -0.2684, -1.6115]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.805000. Loss: 0.681111. Time: 9.919177
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.780000, Val Loss: 0.972823 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5560, -1.5695, -0.2684, -1.6017]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -1.5624, -0.2684, -1.5771]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5417, -1.5625, -0.2684, -1.5634]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5535, -1.5573, -0.2684, -1.5526]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -1.5673, -0.2684, -1.5610]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5802, -1.5730, -0.2684, -1.5651]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5850, -1.5637, -0.2684, -1.5605]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5891, -1.5592, -0.2684, -1.5666]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5992, -1.5655, -0.2684, -1.5850]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6085, -1.5730, -0.2684, -1.5971]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6151, -1.5808, -0.2684, -1.6090]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6106, -1.5820, -0.2684, -1.6157]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6180, -1.5873, -0.2684, -1.6245]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6339, -1.5870, -0.2684, -1.6264]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6362, -1.5854, -0.2684, -1.6241]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6213, -1.5818, -0.2684, -1.6141]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6027, -1.5706, -0.2684, -1.5970]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5820, -1.5585, -0.2684, -1.5808]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -1.5580, -0.2684, -1.5692]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.755000. Loss: 1.135726. Time: 8.766943
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.730000, Val Loss: 1.373614 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5275, -1.5552, -0.2684, -1.5606]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5080, -1.5552, -0.2684, -1.5548]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5065, -1.5577, -0.2684, -1.5521]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5122, -1.5604, -0.2684, -1.5470]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5132, -1.5620, -0.2684, -1.5424]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5041, -1.5563, -0.2684, -1.5330]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4838, -1.5480, -0.2684, -1.5261]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4814, -1.5490, -0.2684, -1.5268]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5066, -1.5547, -0.2684, -1.5419]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5170, -1.5559, -0.2684, -1.5434]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5314, -1.5573, -0.2684, -1.5448]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5560, -1.5645, -0.2684, -1.5494]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5752, -1.5769, -0.2684, -1.5549]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5792, -1.5909, -0.2684, -1.5582]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5821, -1.5965, -0.2684, -1.5610]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5861, -1.5878, -0.2684, -1.5627]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6028, -1.5916, -0.2684, -1.5763]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6289, -1.5973, -0.2684, -1.5960]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6496, -1.6064, -0.2684, -1.6106]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.820000. Loss: 0.900677. Time: 7.584744
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.760000, Val Loss: 0.793919 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6623, -1.6152, -0.2684, -1.6122]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6186, -1.5915, -0.2684, -1.5828]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6003, -1.5785, -0.2684, -1.5693]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5836, -1.5681, -0.2684, -1.5549]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5651, -1.5613, -0.2684, -1.5429]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5474, -1.5529, -0.2684, -1.5367]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5304, -1.5383, -0.2684, -1.5303]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5140, -1.5233, -0.2684, -1.5220]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5034, -1.5137, -0.2684, -1.5122]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5042, -1.5139, -0.2684, -1.5099]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5072, -1.5200, -0.2684, -1.5107]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5073, -1.5215, -0.2684, -1.5130]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5266, -1.5403, -0.2684, -1.5359]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5520, -1.5680, -0.2684, -1.5703]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5758, -1.6001, -0.2684, -1.5984]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5803, -1.6257, -0.2684, -1.6100]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5807, -1.6398, -0.2684, -1.6173]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6166, -1.6555, -0.2684, -1.6339]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6318, -1.6527, -0.2684, -1.6310]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.780000. Loss: 0.869920. Time: 7.288652
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.700000, Val Loss: 1.428940 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6241, -1.6335, -0.2684, -1.6119]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5988, -1.6057, -0.2684, -1.5791]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5755, -1.5784, -0.2684, -1.5476]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5535, -1.5562, -0.2684, -1.5200]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5454, -1.5402, -0.2684, -1.5087]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5441, -1.5254, -0.2684, -1.5115]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5454, -1.5233, -0.2684, -1.5196]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5354, -1.5054, -0.2684, -1.5279]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5349, -1.5081, -0.2684, -1.5459]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5364, -1.5189, -0.2684, -1.5679]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -1.5237, -0.2684, -1.5797]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5314, -1.5301, -0.2684, -1.5901]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5521, -1.5427, -0.2684, -1.6013]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5837, -1.5687, -0.2684, -1.6245]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6069, -1.5908, -0.2684, -1.6364]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6210, -1.6033, -0.2684, -1.6347]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6223, -1.6066, -0.2684, -1.6236]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6285, -1.6089, -0.2684, -1.6181]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6035, -1.5855, -0.2684, -1.5815]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.810000. Loss: 0.839494. Time: 6.528150
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.760000, Val Loss: 1.262300 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5366, -1.5447, -0.2684, -1.5141]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5089, -1.5161, -0.2684, -1.4786]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4917, -1.5013, -0.2684, -1.4647]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4834, -1.4985, -0.2684, -1.4634]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4747, -1.4959, -0.2684, -1.4793]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4708, -1.5028, -0.2684, -1.5077]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4752, -1.5093, -0.2684, -1.5335]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4741, -1.5053, -0.2684, -1.5487]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5023, -1.5295, -0.2684, -1.5746]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5313, -1.5533, -0.2684, -1.5904]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5484, -1.5649, -0.2684, -1.5980]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -1.5644, -0.2684, -1.5989]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.5572, -0.2684, -1.5961]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5423, -1.5485, -0.2684, -1.5890]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5369, -1.5468, -0.2684, -1.5848]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5400, -1.5598, -0.2684, -1.5842]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5307, -1.5644, -0.2684, -1.5754]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5220, -1.5620, -0.2684, -1.5606]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5202, -1.5635, -0.2684, -1.5449]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.820000. Loss: 0.732282. Time: 6.490870
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.830000, Val Loss: 0.618210 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5204, -1.5528, -0.2684, -1.5325]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5532, -1.5788, -0.2684, -1.5545]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5799, -1.5950, -0.2684, -1.5678]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6011, -1.6041, -0.2684, -1.5838]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6162, -1.6161, -0.2684, -1.6030]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6192, -1.6208, -0.2684, -1.6131]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6189, -1.6276, -0.2684, -1.6192]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5687, -1.5892, -0.2684, -1.5945]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5218, -1.5532, -0.2684, -1.5684]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4870, -1.5249, -0.2684, -1.5437]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4734, -1.5127, -0.2684, -1.5299]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4732, -1.5052, -0.2684, -1.5252]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4762, -1.4976, -0.2684, -1.5195]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5021, -1.5118, -0.2684, -1.5310]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5247, -1.5275, -0.2684, -1.5406]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5364, -1.5419, -0.2684, -1.5445]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5587, -1.5625, -0.2684, -1.5578]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5669, -1.5700, -0.2684, -1.5614]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5574, -1.5638, -0.2684, -1.5513]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.795000. Loss: 0.811038. Time: 6.452799
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.810000, Val Loss: 0.833898 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5276, -1.5513, -0.2684, -1.5194]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5420, -1.5727, -0.2684, -1.5263]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5449, -1.5823, -0.2684, -1.5283]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5370, -1.5825, -0.2684, -1.5287]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5285, -1.5714, -0.2684, -1.5336]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5384, -1.5686, -0.2684, -1.5369]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5506, -1.5674, -0.2684, -1.5414]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5610, -1.5683, -0.2684, -1.5462]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5800, -1.5743, -0.2684, -1.5582]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5909, -1.5763, -0.2684, -1.5662]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6073, -1.5871, -0.2684, -1.5740]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6175, -1.5950, -0.2684, -1.5818]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6238, -1.6004, -0.2684, -1.5887]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6258, -1.6004, -0.2684, -1.5924]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6163, -1.5987, -0.2684, -1.5935]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6068, -1.5945, -0.2684, -1.5949]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5931, -1.5845, -0.2684, -1.5910]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5769, -1.5768, -0.2684, -1.5899]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5760, -1.5722, -0.2684, -1.5947]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.830000. Loss: 0.804156. Time: 6.424731
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.860000, Val Loss: 0.678797 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6176, -1.5953, -0.2684, -1.6360]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6373, -1.6143, -0.2684, -1.6482]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6447, -1.6261, -0.2684, -1.6490]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6385, -1.6245, -0.2684, -1.6341]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6185, -1.6092, -0.2684, -1.6099]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5976, -1.5957, -0.2684, -1.5839]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5830, -1.5915, -0.2684, -1.5643]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5675, -1.5872, -0.2684, -1.5391]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5477, -1.5786, -0.2684, -1.5112]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5467, -1.5786, -0.2684, -1.5002]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5406, -1.5785, -0.2684, -1.4918]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5349, -1.5720, -0.2684, -1.4949]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5417, -1.5779, -0.2684, -1.5108]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5540, -1.5911, -0.2684, -1.5329]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5637, -1.6001, -0.2684, -1.5494]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5719, -1.6028, -0.2684, -1.5740]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5713, -1.5961, -0.2684, -1.5832]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5680, -1.5905, -0.2684, -1.5830]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5628, -1.5803, -0.2684, -1.5793]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.855000. Loss: 0.648236. Time: 6.391958
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.750000, Val Loss: 1.133074 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5337, -1.5315, -0.2684, -1.5460]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5450, -1.5246, -0.2684, -1.5398]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5536, -1.5247, -0.2684, -1.5446]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5762, -1.5449, -0.2684, -1.5598]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5907, -1.5604, -0.2684, -1.5633]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6032, -1.5829, -0.2684, -1.5618]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6269, -1.6230, -0.2684, -1.5637]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6450, -1.6633, -0.2684, -1.5788]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6497, -1.6864, -0.2684, -1.5864]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6296, -1.6869, -0.2684, -1.5868]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5958, -1.6705, -0.2684, -1.5862]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5427, -1.6164, -0.2684, -1.5693]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4904, -1.5617, -0.2684, -1.5413]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4736, -1.5432, -0.2684, -1.5336]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4776, -1.5332, -0.2684, -1.5448]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4828, -1.5288, -0.2684, -1.5551]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5016, -1.5450, -0.2684, -1.5779]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5314, -1.5580, -0.2684, -1.6032]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5624, -1.5356, -0.2684, -1.6059]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.775000. Loss: 1.011589. Time: 6.479222
Validate after epoch 38 with seed 297566
Val Accuracy: 0.790000, Val Loss: 0.957013 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6125, -1.5528, -0.2684, -1.5962]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6399, -1.5574, -0.2684, -1.5943]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6372, -1.5666, -0.2684, -1.5855]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6414, -1.5713, -0.2684, -1.5724]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6385, -1.5647, -0.2684, -1.5643]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6373, -1.5599, -0.2684, -1.5647]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6339, -1.5573, -0.2684, -1.5638]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6333, -1.5465, -0.2684, -1.5730]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6207, -1.5344, -0.2684, -1.5746]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6157, -1.5167, -0.2684, -1.5654]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6126, -1.5052, -0.2684, -1.5617]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5931, -1.5173, -0.2684, -1.5620]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5655, -1.5343, -0.2684, -1.5584]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5454, -1.5567, -0.2684, -1.5595]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5171, -1.5699, -0.2684, -1.5585]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5075, -1.5985, -0.2684, -1.5726]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5023, -1.6172, -0.2684, -1.6020]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4973, -1.6195, -0.2684, -1.6187]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4971, -1.6226, -0.2684, -1.6317]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.780000. Loss: 0.903119. Time: 6.384846
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.760000, Val Loss: 1.082420 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4927, -1.6320, -0.2684, -1.6304]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5144, -1.6205, -0.2684, -1.6106]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5270, -1.6035, -0.2684, -1.5807]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5311, -1.5958, -0.2684, -1.5505]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5360, -1.5883, -0.2684, -1.5245]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5482, -1.5871, -0.2684, -1.5112]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.5652, -0.2684, -1.4884]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5942, -1.5527, -0.2684, -1.4778]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6135, -1.5450, -0.2684, -1.4760]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6322, -1.5272, -0.2684, -1.4708]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6368, -1.5086, -0.2684, -1.4755]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6224, -1.4989, -0.2684, -1.4976]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5989, -1.5035, -0.2684, -1.5246]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5773, -1.5174, -0.2684, -1.5439]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5468, -1.5327, -0.2684, -1.5584]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5279, -1.5382, -0.2684, -1.5559]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5175, -1.5594, -0.2684, -1.5644]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5582, -1.5571, -0.2684, -1.5477]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5803, -1.5726, -0.2684, -1.5519]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.800000. Loss: 0.853313. Time: 6.409807
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.790000, Val Loss: 1.091896 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5701, -1.6140, -0.2684, -1.5889]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5724, -1.6088, -0.2684, -1.5789]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5895, -1.5807, -0.2684, -1.5583]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6034, -1.5652, -0.2684, -1.5428]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6154, -1.5578, -0.2684, -1.5257]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6254, -1.5572, -0.2684, -1.5164]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6206, -1.5558, -0.2684, -1.5172]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6131, -1.5550, -0.2684, -1.5198]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6056, -1.5550, -0.2684, -1.5211]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5910, -1.5505, -0.2684, -1.5293]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5890, -1.5493, -0.2684, -1.5424]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5747, -1.5611, -0.2684, -1.5630]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5572, -1.5791, -0.2684, -1.5887]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5481, -1.5885, -0.2684, -1.6072]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -1.5880, -0.2684, -1.6075]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5624, -1.5934, -0.2684, -1.6055]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5735, -1.5930, -0.2684, -1.5960]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5706, -1.5874, -0.2684, -1.5752]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5667, -1.5819, -0.2684, -1.5602]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.835000. Loss: 0.762861. Time: 6.439698
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.790000, Val Loss: 0.910122 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -1.5702, -0.2684, -1.5454]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.5584, -0.2684, -1.5447]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5935, -1.5506, -0.2684, -1.5490]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5989, -1.5493, -0.2684, -1.5656]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5941, -1.5613, -0.2684, -1.5854]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5829, -1.5644, -0.2684, -1.5964]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5706, -1.5644, -0.2684, -1.5996]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -1.5674, -0.2684, -1.6016]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5413, -1.5756, -0.2684, -1.6031]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5324, -1.5888, -0.2684, -1.6065]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5285, -1.5975, -0.2684, -1.6050]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5223, -1.6053, -0.2684, -1.5943]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5287, -1.6082, -0.2684, -1.5784]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5325, -1.6062, -0.2684, -1.5722]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5228, -1.5953, -0.2684, -1.5708]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5262, -1.5799, -0.2684, -1.5572]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5388, -1.5535, -0.2684, -1.5437]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5391, -1.5433, -0.2684, -1.5396]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5533, -1.5418, -0.2684, -1.5383]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.795000. Loss: 1.005845. Time: 6.364110
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.760000, Val Loss: 1.025693 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5917, -1.5283, -0.2684, -1.5337]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6072, -1.5320, -0.2684, -1.5358]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6275, -1.5360, -0.2684, -1.5399]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6565, -1.5414, -0.2684, -1.5568]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6725, -1.5369, -0.2684, -1.5669]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6899, -1.5344, -0.2684, -1.5787]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6948, -1.5469, -0.2684, -1.5959]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6943, -1.5642, -0.2684, -1.6033]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6840, -1.5799, -0.2684, -1.6092]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6620, -1.5982, -0.2684, -1.6145]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6446, -1.6088, -0.2684, -1.6151]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6219, -1.6085, -0.2684, -1.6073]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5938, -1.6087, -0.2684, -1.5951]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5624, -1.6158, -0.2684, -1.5836]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5316, -1.6211, -0.2684, -1.5599]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5309, -1.5882, -0.2684, -1.5231]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5340, -1.5618, -0.2684, -1.5006]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5405, -1.5486, -0.2684, -1.5117]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5627, -1.5334, -0.2684, -1.5256]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.810000. Loss: 0.860758. Time: 6.398398
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.770000, Val Loss: 0.991199 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5722, -1.5179, -0.2684, -1.5523]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5884, -1.5005, -0.2684, -1.5602]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6067, -1.5093, -0.2684, -1.5764]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6237, -1.5186, -0.2684, -1.6018]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6191, -1.5364, -0.2684, -1.6354]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6018, -1.5686, -0.2684, -1.6527]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5862, -1.5962, -0.2684, -1.6497]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5643, -1.6057, -0.2684, -1.6327]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5367, -1.5998, -0.2684, -1.6028]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -1.5930, -0.2684, -1.5637]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -1.5753, -0.2684, -1.5260]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5045, -1.5574, -0.2684, -1.4925]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5118, -1.5432, -0.2684, -1.4762]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5220, -1.5408, -0.2684, -1.4855]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5327, -1.5381, -0.2684, -1.4941]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5377, -1.5347, -0.2684, -1.4965]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5545, -1.5260, -0.2684, -1.4838]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5803, -1.5235, -0.2684, -1.4856]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5942, -1.5327, -0.2684, -1.5021]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.755000. Loss: 1.164974. Time: 6.285035
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.810000, Val Loss: 0.795754 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6054, -1.5512, -0.2684, -1.5197]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6069, -1.5523, -0.2684, -1.5117]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6012, -1.5544, -0.2684, -1.5153]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5890, -1.5656, -0.2684, -1.5275]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5801, -1.5725, -0.2684, -1.5462]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5647, -1.5753, -0.2684, -1.5659]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5528, -1.5617, -0.2684, -1.5590]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -1.5458, -0.2684, -1.5516]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5508, -1.5306, -0.2684, -1.5479]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5569, -1.5127, -0.2684, -1.5396]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5656, -1.4991, -0.2684, -1.5339]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5711, -1.4998, -0.2684, -1.5394]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5828, -1.5276, -0.2684, -1.5867]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5867, -1.5518, -0.2684, -1.6051]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5693, -1.5763, -0.2684, -1.6015]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5492, -1.5953, -0.2684, -1.5905]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -1.6159, -0.2684, -1.5975]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5197, -1.6334, -0.2684, -1.6072]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5177, -1.6333, -0.2684, -1.6065]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.820000. Loss: 1.004227. Time: 5.885966
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.750000, Val Loss: 1.193312 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5117, -1.6288, -0.2684, -1.6029]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5037, -1.6095, -0.2684, -1.5992]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5064, -1.5936, -0.2684, -1.5871]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -1.5774, -0.2684, -1.5792]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5745, -1.5589, -0.2684, -1.5735]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5928, -1.5645, -0.2684, -1.5736]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6000, -1.5706, -0.2684, -1.5757]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6057, -1.5790, -0.2684, -1.5792]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6120, -1.5453, -0.2684, -1.5258]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6221, -1.5167, -0.2684, -1.4872]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6273, -1.4985, -0.2684, -1.4662]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6213, -1.4899, -0.2684, -1.4589]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5886, -1.4935, -0.2684, -1.4758]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5663, -1.4968, -0.2684, -1.4957]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -1.5003, -0.2684, -1.5134]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5319, -1.5052, -0.2684, -1.5230]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5177, -1.5084, -0.2684, -1.5310]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5126, -1.5097, -0.2684, -1.5332]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5047, -1.5185, -0.2684, -1.5381]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.770000. Loss: 0.975956. Time: 5.334474
Validate after epoch 46 with seed 91566
Val Accuracy: 0.840000, Val Loss: 0.865117 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5089, -1.4982, -0.2684, -1.5232]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4963, -1.5001, -0.2684, -1.5171]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4746, -1.5434, -0.2684, -1.5532]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -1.5877, -0.2684, -1.5899]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4942, -1.6326, -0.2684, -1.6238]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5044, -1.6679, -0.2684, -1.6500]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5060, -1.6803, -0.2684, -1.6423]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5249, -1.6569, -0.2684, -1.6069]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5464, -1.6377, -0.2684, -1.5804]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5687, -1.6330, -0.2684, -1.5689]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5751, -1.6460, -0.2684, -1.5795]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5853, -1.6433, -0.2684, -1.5843]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6001, -1.6047, -0.2684, -1.5688]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6117, -1.5718, -0.2684, -1.5555]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6198, -1.5523, -0.2684, -1.5471]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6245, -1.5405, -0.2684, -1.5419]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6250, -1.5328, -0.2684, -1.5375]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6265, -1.5265, -0.2684, -1.5340]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6098, -1.5380, -0.2684, -1.5466]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.815000. Loss: 0.884208. Time: 4.803789
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.860000, Val Loss: 0.669761 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5823, -1.5665, -0.2684, -1.5765]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6020, -1.5599, -0.2684, -1.5681]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6188, -1.5579, -0.2684, -1.5642]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6080, -1.5791, -0.2684, -1.5794]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5847, -1.5871, -0.2684, -1.5793]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5566, -1.5847, -0.2684, -1.5697]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5411, -1.5773, -0.2684, -1.5590]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5514, -1.5518, -0.2684, -1.5281]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5770, -1.5324, -0.2684, -1.5101]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5834, -1.5247, -0.2684, -1.5017]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5775, -1.5303, -0.2684, -1.5160]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5720, -1.5401, -0.2684, -1.5305]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5704, -1.5462, -0.2684, -1.5447]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5749, -1.5618, -0.2684, -1.5601]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5757, -1.5733, -0.2684, -1.5698]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5665, -1.5874, -0.2684, -1.5744]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5549, -1.6076, -0.2684, -1.5837]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5458, -1.6113, -0.2684, -1.5821]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5378, -1.6054, -0.2684, -1.5722]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.815000. Loss: 0.821347. Time: 4.233491
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.730000, Val Loss: 1.076954 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5059, -1.5929, -0.2684, -1.5706]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4850, -1.5905, -0.2684, -1.5701]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4647, -1.5903, -0.2684, -1.5709]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4699, -1.5843, -0.2684, -1.5655]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4845, -1.5716, -0.2684, -1.5538]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5009, -1.5662, -0.2684, -1.5507]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5256, -1.5628, -0.2684, -1.5519]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -1.5594, -0.2684, -1.5502]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5665, -1.5547, -0.2684, -1.5497]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5634, -1.5567, -0.2684, -1.5565]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5639, -1.5619, -0.2684, -1.5654]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5868, -1.5588, -0.2684, -1.5741]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6173, -1.5544, -0.2684, -1.5795]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6236, -1.5443, -0.2684, -1.5799]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6172, -1.5462, -0.2684, -1.5854]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6220, -1.5599, -0.2684, -1.6022]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6334, -1.5715, -0.2684, -1.6166]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6338, -1.5812, -0.2684, -1.6263]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6183, -1.5845, -0.2684, -1.6246]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.825000. Loss: 0.815453. Time: 4.190074
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.720000, Val Loss: 1.119473 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5755, -1.5804, -0.2684, -1.5981]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5483, -1.5768, -0.2684, -1.5828]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5334, -1.5739, -0.2684, -1.5631]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5292, -1.5699, -0.2684, -1.5447]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5447, -1.5630, -0.2684, -1.5289]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5572, -1.5566, -0.2684, -1.5209]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5649, -1.5548, -0.2684, -1.5211]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5663, -1.5589, -0.2684, -1.5317]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -1.5683, -0.2684, -1.5498]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5708, -1.5729, -0.2684, -1.5586]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5834, -1.5681, -0.2684, -1.5541]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5919, -1.5688, -0.2684, -1.5465]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5952, -1.5729, -0.2684, -1.5479]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6032, -1.5694, -0.2684, -1.5441]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6089, -1.5627, -0.2684, -1.5519]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6042, -1.5580, -0.2684, -1.5584]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5919, -1.5453, -0.2684, -1.5592]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5897, -1.5336, -0.2684, -1.5571]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5833, -1.5249, -0.2684, -1.5535]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.815000. Loss: 0.970104. Time: 4.247454
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.780000, Val Loss: 1.015025 
Training Execution time: 16:53:19.00
Conducting Test
Test Accuracy: 0.792000, Test Loss: 0.939265 
