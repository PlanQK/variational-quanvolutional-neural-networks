Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 9, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_9_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Loading MNIST dataset from the PyTorch storage
Loading MNIST dataset into memory
Saving data tensors to disk at ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 9, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_9_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8816, -0.2706, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8820, -0.2710, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8810, -0.2700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8790, -0.2680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8793, -0.2683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8806, -0.2696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8818, -0.2708, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8830, -0.2720, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8846, -0.2736, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8851, -0.2741, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8853, -0.2743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8860, -0.2750, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8881, -0.2771, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8913, -0.2803, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8929, -0.2819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8939, -0.2829, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8946, -0.2836, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8937, -0.2827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8921, -0.2811, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.495000. Loss: 1.763395. Time: 18.206973
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.710000, Val Loss: 1.317307 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8886, -0.2776, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8858, -0.2748, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8842, -0.2732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8826, -0.2716, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8821, -0.2711, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8816, -0.2706, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8810, -0.2700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8827, -0.2717, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8840, -0.2730, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8845, -0.2735, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8853, -0.2743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8850, -0.2740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8858, -0.2748, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8854, -0.2744, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8852, -0.2742, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8847, -0.2737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8848, -0.2738, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8846, -0.2736, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8846, -0.2737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.735000. Loss: 1.160210. Time: 18.268679
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.840000, Val Loss: 0.901803 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8846, -0.2736, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8847, -0.2737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8836, -0.2726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8813, -0.2703, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8785, -0.2675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8771, -0.2661, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8756, -0.2646, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8733, -0.2623, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8710, -0.2600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8709, -0.2599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8714, -0.2604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8707, -0.2597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8700, -0.2590, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8677, -0.2567, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8670, -0.2560, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8671, -0.2561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8660, -0.2550, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8637, -0.2527, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8618, -0.2508, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.780000. Loss: 0.991897. Time: 18.099711
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.730000, Val Loss: 0.973794 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8591, -0.2481, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8577, -0.2467, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8555, -0.2445, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8521, -0.2411, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8485, -0.2375, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8459, -0.2349, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8446, -0.2336, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8434, -0.2324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8412, -0.2302, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8391, -0.2281, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8383, -0.2273, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8385, -0.2275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8375, -0.2265, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8382, -0.2272, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8386, -0.2276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8380, -0.2270, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8377, -0.2267, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8379, -0.2269, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8367, -0.2257, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.805000. Loss: 0.815124. Time: 17.747363
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.750000, Val Loss: 0.921077 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8388, -0.2278, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8393, -0.2283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8398, -0.2288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8385, -0.2275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8387, -0.2277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8387, -0.2277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8393, -0.2283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8391, -0.2281, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8381, -0.2271, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8370, -0.2260, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8364, -0.2254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8376, -0.2266, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8384, -0.2274, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8403, -0.2293, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8409, -0.2299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8400, -0.2290, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8389, -0.2280, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8367, -0.2257, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8351, -0.2241, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.775000. Loss: 0.883271. Time: 17.856466
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.870000, Val Loss: 0.728405 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8332, -0.2222, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8334, -0.2224, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8335, -0.2225, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8339, -0.2229, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8336, -0.2226, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8315, -0.2205, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8312, -0.2202, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8312, -0.2202, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8305, -0.2195, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8283, -0.2174, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8273, -0.2163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8255, -0.2145, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8235, -0.2125, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8226, -0.2116, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8222, -0.2112, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8222, -0.2112, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8212, -0.2102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8202, -0.2092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8202, -0.2093, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.805000. Loss: 0.783696. Time: 17.695352
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.850000, Val Loss: 0.650790 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8185, -0.2075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8185, -0.2075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8177, -0.2067, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8174, -0.2064, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8162, -0.2052, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8149, -0.2039, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8147, -0.2037, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8145, -0.2035, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8123, -0.2013, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8103, -0.1993, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8091, -0.1981, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8093, -0.1983, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8104, -0.1994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8114, -0.2004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8113, -0.2003, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8105, -0.1995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8109, -0.1999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8110, -0.2000, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8099, -0.1989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.860000. Loss: 0.619844. Time: 17.673199
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.910000, Val Loss: 0.499937 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8080, -0.1970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8081, -0.1971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8092, -0.1982, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8095, -0.1985, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8102, -0.1992, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8118, -0.2008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8131, -0.2021, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8127, -0.2017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8114, -0.2004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8081, -0.1971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8055, -0.1945, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8038, -0.1928, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8034, -0.1924, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8042, -0.1932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8046, -0.1936, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8053, -0.1943, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8070, -0.1960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8076, -0.1966, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8078, -0.1968, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.820000. Loss: 0.733796. Time: 17.671417
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.850000, Val Loss: 0.773055 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8101, -0.1991, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8104, -0.1994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8095, -0.1985, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8065, -0.1955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8049, -0.1939, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8052, -0.1942, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8068, -0.1958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8077, -0.1967, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8083, -0.1973, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8085, -0.1976, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8090, -0.1980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8091, -0.1981, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8089, -0.1979, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8080, -0.1971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8091, -0.1981, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8111, -0.2001, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8108, -0.1998, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8104, -0.1994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8117, -0.2007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.835000. Loss: 0.679006. Time: 17.941855
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.870000, Val Loss: 0.608026 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8115, -0.2005, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8090, -0.1980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8080, -0.1970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8075, -0.1965, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8065, -0.1955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8067, -0.1957, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8070, -0.1960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8062, -0.1952, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8045, -0.1935, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8035, -0.1925, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.8014, -0.1904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7997, -0.1887, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7983, -0.1873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7987, -0.1877, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7973, -0.1863, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7951, -0.1841, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7936, -0.1826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7932, -0.1822, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7919, -0.1809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.820000. Loss: 0.597801. Time: 17.850622
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.800000, Val Loss: 0.675374 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7932, -0.1822, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7931, -0.1821, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7922, -0.1812, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7905, -0.1795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7896, -0.1786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7889, -0.1779, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7888, -0.1778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7888, -0.1778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7880, -0.1770, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7864, -0.1754, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7866, -0.1756, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7864, -0.1755, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7839, -0.1729, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7819, -0.1709, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7797, -0.1687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7798, -0.1688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7815, -0.1705, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7842, -0.1732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7877, -0.1767, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.815000. Loss: 0.693933. Time: 17.736119
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.880000, Val Loss: 0.542684 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7893, -0.1783, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7882, -0.1772, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7872, -0.1762, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7866, -0.1756, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7871, -0.1761, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7884, -0.1774, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7889, -0.1780, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7898, -0.1788, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7891, -0.1781, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7883, -0.1773, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7878, -0.1768, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7880, -0.1770, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7888, -0.1778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7885, -0.1775, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7875, -0.1765, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7847, -0.1737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7820, -0.1710, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7785, -0.1675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7765, -0.1655, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.840000. Loss: 0.603849. Time: 17.874556
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.800000, Val Loss: 0.630485 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7781, -0.1671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7780, -0.1670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7783, -0.1673, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7790, -0.1680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7780, -0.1670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7754, -0.1644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7732, -0.1622, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7707, -0.1597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7686, -0.1576, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7659, -0.1549, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7613, -0.1503, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7540, -0.1430, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7471, -0.1361, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7409, -0.1299, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7365, -0.1255, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7331, -0.1221, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7302, -0.1192, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7273, -0.1163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7242, -0.1132, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.840000. Loss: 0.643577. Time: 17.994243
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.860000, Val Loss: 0.556628 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7183, -0.1073, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7177, -0.1067, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7170, -0.1060, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7165, -0.1055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7163, -0.1053, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7159, -0.1049, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7148, -0.1038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7143, -0.1033, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7131, -0.1021, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7150, -0.1040, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7165, -0.1055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7183, -0.1073, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7185, -0.1075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7184, -0.1074, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7187, -0.1077, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7165, -0.1055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7135, -0.1025, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7109, -0.0999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7100, -0.0990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.850000. Loss: 0.602833. Time: 17.913386
Validate after epoch 14 with seed 964979
Val Accuracy: 0.810000, Val Loss: 0.635165 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7073, -0.0963, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7062, -0.0952, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7053, -0.0943, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7040, -0.0930, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7033, -0.0923, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7029, -0.0919, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7034, -0.0924, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7035, -0.0925, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7024, -0.0914, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7015, -0.0905, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7014, -0.0904, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7006, -0.0896, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7005, -0.0895, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7026, -0.0916, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7044, -0.0934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7058, -0.0948, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7035, -0.0925, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7010, -0.0900, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7002, -0.0892, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.850000. Loss: 0.530554. Time: 17.856287
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.850000, Val Loss: 0.646424 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.7001, -0.0891, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6967, -0.0857, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6942, -0.0832, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6936, -0.0826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6933, -0.0823, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6925, -0.0815, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6901, -0.0791, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6877, -0.0767, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6836, -0.0726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6794, -0.0684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6753, -0.0643, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6714, -0.0604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6675, -0.0565, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6626, -0.0516, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6588, -0.0478, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6567, -0.0457, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6552, -0.0442, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6534, -0.0424, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6523, -0.0413, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.850000. Loss: 0.541946. Time: 17.768603
Validate after epoch 16 with seed 840036
Val Accuracy: 0.830000, Val Loss: 0.658758 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6501, -0.0391, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6491, -0.0381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6482, -0.0372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6479, -0.0369, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6487, -0.0377, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6506, -0.0396, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6529, -0.0419, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6545, -0.0435, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6554, -0.0444, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6561, -0.0451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6561, -0.0451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6577, -0.0467, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6586, -0.0476, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6578, -0.0468, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6574, -0.0464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6587, -0.0477, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6598, -0.0488, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6599, -0.0489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6611, -0.0501, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.830000. Loss: 0.654520. Time: 17.792175
Validate after epoch 17 with seed 180463
Val Accuracy: 0.810000, Val Loss: 0.635872 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6619, -0.0509, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6608, -0.0498, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6591, -0.0481, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6553, -0.0443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6511, -0.0401, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6475, -0.0365, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6476, -0.0366, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6476, -0.0366, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6469, -0.0359, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6456, -0.0346, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6444, -0.0334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6451, -0.0341, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6462, -0.0352, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6478, -0.0368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6478, -0.0368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6468, -0.0358, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6474, -0.0364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6480, -0.0370, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6488, -0.0378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.835000. Loss: 0.512605. Time: 17.892605
Validate after epoch 18 with seed 575883
Val Accuracy: 0.840000, Val Loss: 0.557587 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6494, -0.0384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6500, -0.0390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6489, -0.0379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6474, -0.0364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6467, -0.0357, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6456, -0.0346, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6453, -0.0343, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6459, -0.0349, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6454, -0.0344, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6441, -0.0331, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6433, -0.0323, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6424, -0.0314, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6407, -0.0297, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6385, -0.0275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6377, -0.0267, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6370, -0.0260, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6368, -0.0258, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6353, -0.0243, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6332, -0.0222, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.870000. Loss: 0.466351. Time: 17.917975
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.860000, Val Loss: 0.609682 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6295, -0.0185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6275, -0.0165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6265, -0.0155, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6264, -0.0154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6271, -0.0161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6274, -0.0164, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6260, -0.0150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6233, -0.0123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6204, -0.0094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6192, -0.0082, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6205, -0.0095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6211, -0.0101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6215, -0.0105, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6207, -0.0097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6202, -0.0092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6187, -0.0077, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6159, -0.0049, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6124, -0.0014, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.6090,  0.0020, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.835000. Loss: 0.627478. Time: 17.812935
Validate after epoch 20 with seed 822616
Val Accuracy: 0.850000, Val Loss: 0.512081 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5984,  0.0126, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5973,  0.0137, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5967,  0.0143, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5962,  0.0148, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5956,  0.0154, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5953,  0.0157, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5959,  0.0151, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5949,  0.0161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5927,  0.0183, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5908,  0.0202, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5892,  0.0218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5872,  0.0238, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5856,  0.0254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5847,  0.0263, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5827,  0.0283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5788,  0.0322, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5763,  0.0347, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5755,  0.0355, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5738,  0.0371, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.835000. Loss: 0.578233. Time: 17.841195
Validate after epoch 21 with seed 519531
Val Accuracy: 0.900000, Val Loss: 0.440416 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5712,  0.0398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5698,  0.0412, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5691,  0.0419, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5687,  0.0423, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5690,  0.0420, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5692,  0.0418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5683,  0.0427, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5666,  0.0444, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5663,  0.0447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5663,  0.0447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5662,  0.0448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5657,  0.0453, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5662,  0.0448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5669,  0.0441, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5667,  0.0443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5679,  0.0431, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5692,  0.0418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5707,  0.0403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5715,  0.0395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.875000. Loss: 0.479700. Time: 17.795884
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.780000, Val Loss: 0.678842 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5732,  0.0378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5743,  0.0367, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5735,  0.0375, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5709,  0.0401, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5674,  0.0436, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5645,  0.0465, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5636,  0.0474, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5629,  0.0481, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5614,  0.0496, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5591,  0.0519, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5573,  0.0537, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5561,  0.0549, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5552,  0.0558, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5508,  0.0602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5485,  0.0625, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5470,  0.0640, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5462,  0.0648, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5445,  0.0665, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5440,  0.0670, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.885000. Loss: 0.484516. Time: 17.888972
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.870000, Val Loss: 0.539525 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5452,  0.0658, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5468,  0.0642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5476,  0.0634, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5480,  0.0630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5476,  0.0634, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5446,  0.0664, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5433,  0.0677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5435,  0.0675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5436,  0.0674, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5435,  0.0675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5436,  0.0674, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5427,  0.0683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5427,  0.0683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5447,  0.0663, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5442,  0.0668, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5444,  0.0666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5454,  0.0656, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5475,  0.0635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5498,  0.0612, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.865000. Loss: 0.486995. Time: 17.820290
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.850000, Val Loss: 0.534075 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5528,  0.0582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5529,  0.0581, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5509,  0.0601, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5482,  0.0628, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5484,  0.0626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5475,  0.0635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5475,  0.0635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5484,  0.0626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5490,  0.0620, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5496,  0.0614, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5495,  0.0615, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5474,  0.0636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5456,  0.0654, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5415,  0.0695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5367,  0.0743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5333,  0.0777, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5317,  0.0793, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5312,  0.0798, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5327,  0.0783, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.845000. Loss: 0.535587. Time: 17.852696
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.850000, Val Loss: 0.527128 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5369,  0.0741, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5378,  0.0732, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5381,  0.0729, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5388,  0.0722, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5394,  0.0716, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5401,  0.0709, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5392,  0.0718, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5379,  0.0731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5379,  0.0731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5383,  0.0727, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5393,  0.0717, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5409,  0.0701, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5412,  0.0698, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5409,  0.0701, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5404,  0.0706, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5397,  0.0713, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5395,  0.0715, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5389,  0.0721, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5386,  0.0724, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.860000. Loss: 0.415694. Time: 17.906354
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.860000, Val Loss: 0.479537 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5384,  0.0726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5382,  0.0728, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5375,  0.0735, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5369,  0.0741, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5368,  0.0742, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5357,  0.0753, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5347,  0.0763, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5339,  0.0771, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5324,  0.0786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5304,  0.0806, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5290,  0.0820, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5281,  0.0829, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5279,  0.0831, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5288,  0.0822, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5295,  0.0815, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5291,  0.0819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5282,  0.0828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5277,  0.0833, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5278,  0.0832, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.855000. Loss: 0.452445. Time: 17.877114
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.880000, Val Loss: 0.602936 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5291,  0.0819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5304,  0.0806, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5315,  0.0795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5325,  0.0785, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5321,  0.0789, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5320,  0.0790, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5317,  0.0793, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5311,  0.0799, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5293,  0.0817, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5275,  0.0835, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5265,  0.0845, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5252,  0.0858, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5242,  0.0868, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5227,  0.0883, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5215,  0.0895, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5197,  0.0913, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5188,  0.0922, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5161,  0.0949, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5134,  0.0976, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.860000. Loss: 0.480208. Time: 17.877529
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.860000, Val Loss: 0.503060 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5141,  0.0969, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5155,  0.0955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5164,  0.0946, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5184,  0.0926, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5195,  0.0915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5196,  0.0914, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5184,  0.0926, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5168,  0.0942, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5159,  0.0951, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5155,  0.0955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5165,  0.0945, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5178,  0.0932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5176,  0.0934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5167,  0.0943, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5149,  0.0961, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5136,  0.0974, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5120,  0.0990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5116,  0.0994, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5108,  0.1002, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.880000. Loss: 0.435299. Time: 17.689451
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.850000, Val Loss: 0.526693 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5096,  0.1014, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5092,  0.1018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5065,  0.1045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5031,  0.1079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5005,  0.1105, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4994,  0.1116, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4991,  0.1119, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4983,  0.1127, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4984,  0.1126, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4992,  0.1118, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5007,  0.1103, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5044,  0.1066, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5060,  0.1050, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5062,  0.1048, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5062,  0.1048, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5047,  0.1063, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5038,  0.1072, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5027,  0.1083, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5015,  0.1095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.850000. Loss: 0.566246. Time: 17.851485
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.880000, Val Loss: 0.494403 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5013,  0.1097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5015,  0.1095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5028,  0.1082, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5037,  0.1073, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5041,  0.1069, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5042,  0.1068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5044,  0.1066, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5055,  0.1055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5074,  0.1036, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5081,  0.1029, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5084,  0.1026, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5093,  0.1016, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5098,  0.1012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5091,  0.1019, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5083,  0.1027, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5074,  0.1036, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5070,  0.1040, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5049,  0.1061, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5029,  0.1081, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.860000. Loss: 0.452826. Time: 17.931877
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.880000, Val Loss: 0.511242 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.5006,  0.1104, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4999,  0.1111, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4991,  0.1119, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4981,  0.1129, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4977,  0.1133, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4967,  0.1143, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4962,  0.1148, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4954,  0.1156, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4933,  0.1177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4911,  0.1199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4903,  0.1207, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4893,  0.1217, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4886,  0.1224, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4878,  0.1232, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4861,  0.1249, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4847,  0.1263, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4836,  0.1274, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4819,  0.1291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4796,  0.1314, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.875000. Loss: 0.461227. Time: 17.828936
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.890000, Val Loss: 0.466872 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4762,  0.1348, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4748,  0.1362, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4743,  0.1367, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4738,  0.1372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4731,  0.1379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4729,  0.1381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4731,  0.1379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4735,  0.1375, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4734,  0.1376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4732,  0.1378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4738,  0.1372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4739,  0.1371, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4740,  0.1370, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4730,  0.1380, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4722,  0.1388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4719,  0.1391, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4724,  0.1386, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4715,  0.1395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4703,  0.1407, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.855000. Loss: 0.509762. Time: 17.748169
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.870000, Val Loss: 0.523521 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4671,  0.1439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4669,  0.1441, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4667,  0.1443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4667,  0.1443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4658,  0.1452, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4654,  0.1455, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4665,  0.1445, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4657,  0.1453, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4652,  0.1458, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4664,  0.1446, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4674,  0.1436, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4673,  0.1437, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4668,  0.1442, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4669,  0.1441, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4673,  0.1437, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4677,  0.1433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4672,  0.1438, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4668,  0.1442, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4662,  0.1448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.885000. Loss: 0.407978. Time: 17.639956
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.880000, Val Loss: 0.554841 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4671,  0.1439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4663,  0.1447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4645,  0.1465, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4619,  0.1491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4599,  0.1511, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4585,  0.1525, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4565,  0.1545, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4554,  0.1556, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4542,  0.1568, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4524,  0.1586, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4506,  0.1604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4479,  0.1631, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4461,  0.1649, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4452,  0.1658, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4450,  0.1660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4451,  0.1659, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4451,  0.1659, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4453,  0.1657, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4454,  0.1656, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.870000. Loss: 0.512590. Time: 17.832571
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.840000, Val Loss: 0.523464 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4443,  0.1667, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4443,  0.1667, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4439,  0.1671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4426,  0.1684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4407,  0.1703, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4399,  0.1711, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4398,  0.1712, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4398,  0.1712, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4400,  0.1710, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4400,  0.1710, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4403,  0.1707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4407,  0.1703, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4411,  0.1699, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4430,  0.1680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4442,  0.1668, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4443,  0.1667, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4441,  0.1669, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4428,  0.1682, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4415,  0.1695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.865000. Loss: 0.512621. Time: 17.703040
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.920000, Val Loss: 0.433570 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4383,  0.1727, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4362,  0.1748, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4347,  0.1763, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4339,  0.1770, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4324,  0.1786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4314,  0.1796, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4303,  0.1807, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4284,  0.1826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4268,  0.1841, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4268,  0.1842, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4268,  0.1842, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4259,  0.1851, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4247,  0.1863, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4237,  0.1873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4235,  0.1875, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4236,  0.1874, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4244,  0.1866, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4245,  0.1865, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4242,  0.1868, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.875000. Loss: 0.409934. Time: 17.807642
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.820000, Val Loss: 0.662553 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4236,  0.1874, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4238,  0.1872, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4235,  0.1875, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4237,  0.1873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4234,  0.1876, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4229,  0.1881, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4222,  0.1888, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4218,  0.1892, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4215,  0.1895, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4207,  0.1903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4195,  0.1915, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4190,  0.1920, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4186,  0.1924, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4176,  0.1934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4165,  0.1945, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4153,  0.1957, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4134,  0.1976, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4117,  0.1993, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4102,  0.2008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.920000. Loss: 0.323656. Time: 17.916623
Validate after epoch 38 with seed 297566
Val Accuracy: 0.860000, Val Loss: 0.538276 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4083,  0.2027, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4069,  0.2041, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4048,  0.2062, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4016,  0.2094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4004,  0.2106, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4008,  0.2102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4001,  0.2109, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4005,  0.2105, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4010,  0.2100, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4018,  0.2092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4020,  0.2090, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4017,  0.2093, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4021,  0.2089, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4019,  0.2091, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.4008,  0.2102, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3987,  0.2123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3970,  0.2140, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3960,  0.2150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3949,  0.2161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.850000. Loss: 0.485190. Time: 17.756918
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.890000, Val Loss: 0.356742 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3917,  0.2193, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3902,  0.2208, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3891,  0.2219, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3876,  0.2234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3869,  0.2241, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3864,  0.2246, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3861,  0.2249, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3859,  0.2251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3858,  0.2252, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3859,  0.2251, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3855,  0.2255, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3848,  0.2262, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3841,  0.2269, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3833,  0.2277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3830,  0.2280, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3831,  0.2279, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3827,  0.2283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3824,  0.2286, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3820,  0.2290, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.890000. Loss: 0.375006. Time: 17.800880
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.890000, Val Loss: 0.535230 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3800,  0.2310, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3789,  0.2321, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3781,  0.2329, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3769,  0.2341, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3755,  0.2355, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3742,  0.2368, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3736,  0.2374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3736,  0.2374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3736,  0.2374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3735,  0.2375, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3732,  0.2378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3728,  0.2382, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3730,  0.2380, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3734,  0.2376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3733,  0.2377, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3726,  0.2384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3720,  0.2390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3713,  0.2397, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3708,  0.2402, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.870000. Loss: 0.499920. Time: 17.813214
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.880000, Val Loss: 0.545397 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3702,  0.2408, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3708,  0.2402, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3716,  0.2394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3722,  0.2388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3726,  0.2384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3730,  0.2380, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3731,  0.2379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3731,  0.2379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3726,  0.2384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3723,  0.2387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3723,  0.2387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3722,  0.2388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3718,  0.2392, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3723,  0.2387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3724,  0.2386, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3717,  0.2393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3712,  0.2398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3712,  0.2398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3716,  0.2394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.895000. Loss: 0.357853. Time: 17.764586
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.880000, Val Loss: 0.496643 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3726,  0.2384, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3722,  0.2388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3716,  0.2394, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3709,  0.2401, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3702,  0.2408, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3692,  0.2418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3688,  0.2422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3682,  0.2428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3676,  0.2434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3670,  0.2440, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3665,  0.2444, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3662,  0.2448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3659,  0.2451, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3653,  0.2457, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3638,  0.2472, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3618,  0.2492, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3606,  0.2504, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3600,  0.2510, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3589,  0.2521, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.890000. Loss: 0.417347. Time: 17.708137
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.830000, Val Loss: 0.607713 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3569,  0.2541, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3562,  0.2548, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3554,  0.2556, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3552,  0.2558, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3552,  0.2558, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3549,  0.2561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3549,  0.2561, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3550,  0.2560, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3551,  0.2559, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3551,  0.2559, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3548,  0.2562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3546,  0.2564, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3546,  0.2564, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3546,  0.2564, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3544,  0.2566, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3543,  0.2567, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3548,  0.2562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3555,  0.2555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3558,  0.2552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.880000. Loss: 0.444628. Time: 17.471081
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.890000, Val Loss: 0.399810 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3553,  0.2557, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3546,  0.2564, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3539,  0.2571, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3527,  0.2583, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3519,  0.2591, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3513,  0.2597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3503,  0.2607, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3497,  0.2613, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3495,  0.2615, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3502,  0.2608, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3508,  0.2602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3510,  0.2600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3511,  0.2599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3511,  0.2599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3510,  0.2600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3509,  0.2601, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3507,  0.2603, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3502,  0.2608, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3497,  0.2613, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.880000. Loss: 0.472375. Time: 17.804415
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.880000, Val Loss: 0.484441 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3494,  0.2616, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3492,  0.2618, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3489,  0.2621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3486,  0.2624, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3483,  0.2627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3481,  0.2629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3483,  0.2627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3484,  0.2626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3484,  0.2626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3487,  0.2623, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3489,  0.2621, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3487,  0.2623, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3484,  0.2626, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3485,  0.2625, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3483,  0.2627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3480,  0.2630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3474,  0.2636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3469,  0.2641, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3469,  0.2641, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.900000. Loss: 0.437027. Time: 17.836867
Validate after epoch 46 with seed 91566
Val Accuracy: 0.880000, Val Loss: 0.474810 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3462,  0.2648, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3458,  0.2652, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3457,  0.2653, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3460,  0.2650, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3463,  0.2647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3466,  0.2644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3466,  0.2644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3466,  0.2644, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3468,  0.2642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3469,  0.2641, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3469,  0.2641, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3468,  0.2642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3473,  0.2637, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3477,  0.2632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3481,  0.2629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3481,  0.2629, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3480,  0.2630, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3479,  0.2631, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3478,  0.2632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.865000. Loss: 0.431343. Time: 17.826940
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.890000, Val Loss: 0.394511 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3478,  0.2632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3476,  0.2634, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3468,  0.2642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3463,  0.2647, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3459,  0.2651, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3452,  0.2658, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3444,  0.2666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3434,  0.2676, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3430,  0.2680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3429,  0.2681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3429,  0.2681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3429,  0.2681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3427,  0.2683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3425,  0.2685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3423,  0.2687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3421,  0.2689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3424,  0.2686, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3427,  0.2683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.895000. Loss: 0.323207. Time: 17.515199
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.860000, Val Loss: 0.543654 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3428,  0.2682, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3428,  0.2682, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3429,  0.2681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3433,  0.2677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3431,  0.2679, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3427,  0.2683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3418,  0.2692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3415,  0.2695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3415,  0.2695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3418,  0.2692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3420,  0.2690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3423,  0.2687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3423,  0.2687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3423,  0.2687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3421,  0.2689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.905000. Loss: 0.318504. Time: 18.027977
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.820000, Val Loss: 0.630072 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3418,  0.2692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3416,  0.2694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3415,  0.2695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3415,  0.2695, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3417,  0.2693, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3417,  0.2693, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3416,  0.2694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3417,  0.2693, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3419,  0.2691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3419,  0.2691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3420,  0.2690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3421,  0.2689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3421,  0.2689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3420,  0.2690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3422,  0.2688, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3421,  0.2689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0727, -0.3418,  0.2692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.885000. Loss: 0.486581. Time: 18.019953
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.860000, Val Loss: 0.478261 
Training Execution time: 26:23:27.00
Conducting Test
Test Accuracy: 0.874000, Test Loss: 0.451781 
