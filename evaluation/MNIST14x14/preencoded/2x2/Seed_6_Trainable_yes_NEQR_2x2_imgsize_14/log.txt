Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 6, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_6_Trainable_yes_NEQR_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 6, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'NEQR', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 10, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_6_Trainable_yes_NEQR_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1254, -0.9126, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1712, -0.9592, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2156, -1.0023, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2594, -1.0429, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2990, -1.0789, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3327, -1.1064, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3700, -1.1334, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3983, -1.1523, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4192, -1.1635, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4425, -1.1745, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4753, -1.1932, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5097, -1.2143, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5434, -1.2321, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5862, -1.2529, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6264, -1.2696, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6611, -1.2832, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6978, -1.3017, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7310, -1.3227, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7581, -1.3373, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.370000. Loss: 7.217800. Time: 24.442470
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.490000, Val Loss: 2.948455 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8014, -1.3595, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8178, -1.3718, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8447, -1.3875, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8653, -1.4035, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8703, -1.4165, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8722, -1.4259, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8767, -1.4327, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8993, -1.4425, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9210, -1.4495, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9474, -1.4547, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9789, -1.4568, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0181, -1.4596, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0401, -1.4633, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0540, -1.4660, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0707, -1.4728, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0865, -1.4839, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1031, -1.4924, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1170, -1.4905, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1267, -1.4887, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.550000. Loss: 3.532909. Time: 23.774025
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.460000, Val Loss: 5.111896 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1284, -1.4963, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1472, -1.5024, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1613, -1.5018, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1751, -1.4981, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1891, -1.4867, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2242, -1.4882, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2455, -1.4885, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2642, -1.4918, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2804, -1.4876, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3129, -1.4843, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3404, -1.4878, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3528, -1.4948, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3699, -1.5107, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3893, -1.5275, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3920, -1.5329, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4033, -1.5311, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4185, -1.5317, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4305, -1.5313, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4276, -1.5293, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.520000. Loss: 4.560017. Time: 23.845394
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.550000, Val Loss: 5.465557 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4154, -1.5163, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4199, -1.5117, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4282, -1.5018, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4339, -1.4909, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4328, -1.4919, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4209, -1.5019, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4090, -1.5066, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4145, -1.5142, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4357, -1.5273, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4475, -1.5407, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4540, -1.5550, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4567, -1.5649, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4544, -1.5723, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4470, -1.5718, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4406, -1.5677, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4331, -1.5623, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4265, -1.5548, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4303, -1.5515, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4383, -1.5500, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.715000. Loss: 3.157805. Time: 24.619753
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.690000, Val Loss: 2.536622 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4507, -1.5352, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4481, -1.5357, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4426, -1.5392, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4213, -1.5291, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4061, -1.5270, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4139, -1.5336, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4313, -1.5428, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4401, -1.5587, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4470, -1.5720, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4394, -1.5658, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4297, -1.5520, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4169, -1.5309, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4225, -1.5117, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4287, -1.4952, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4358, -1.4797, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4586, -1.4653, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4849, -1.4666, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5176, -1.4695, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5444, -1.4739, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.580000. Loss: 3.894281. Time: 24.922277
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.560000, Val Loss: 3.152827 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5587, -1.5112, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5464, -1.5313, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5341, -1.5342, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5173, -1.5429, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5037, -1.5484, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4959, -1.5407, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4997, -1.5441, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4990, -1.5446, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5062, -1.5447, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5247, -1.5380, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5264, -1.5385, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5215, -1.5376, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5141, -1.5359, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5141, -1.5323, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -1.5342, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4992, -1.5359, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4903, -1.5317, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4818, -1.5339, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4982, -1.5490, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.630000. Loss: 3.893670. Time: 24.562682
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.700000, Val Loss: 2.062345 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -1.5673, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5352, -1.5498, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5416, -1.5337, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5472, -1.5047, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5554, -1.4797, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5497, -1.4688, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5384, -1.4684, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5249, -1.4783, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5069, -1.5053, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4882, -1.5431, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4705, -1.5776, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4655, -1.6076, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4678, -1.6225, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4732, -1.6249, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4729, -1.6330, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4686, -1.6301, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4638, -1.6045, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4565, -1.5576, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4560, -1.5332, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.630000. Loss: 3.901742. Time: 24.333549
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.650000, Val Loss: 3.777427 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4687, -1.5050, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4956, -1.4923, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5159, -1.4750, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -1.4807, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5109, -1.5048, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5135, -1.5430, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5184, -1.5506, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5213, -1.5526, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5188, -1.5594, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5067, -1.5640, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4987, -1.5572, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4936, -1.5522, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4891, -1.5369, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4870, -1.5316, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4921, -1.5186, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.5019, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5183, -1.5077, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5060, -1.5226, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4936, -1.5441, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.700000. Loss: 3.005686. Time: 24.521832
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.690000, Val Loss: 4.533025 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4917, -1.5631, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4931, -1.5502, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4892, -1.5293, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -1.5221, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -1.5168, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4705, -1.5128, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4659, -1.5110, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4669, -1.5451, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4760, -1.5744, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4884, -1.5953, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4956, -1.5935, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5024, -1.5922, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5122, -1.5805, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5252, -1.5563, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5319, -1.5316, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5338, -1.5142, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5217, -1.4905, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5139, -1.4765, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5099, -1.4930, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.655000. Loss: 4.079635. Time: 24.643459
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.750000, Val Loss: 2.850772 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5377, -1.5410, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5495, -1.5374, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5471, -1.5406, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5488, -1.5651, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5465, -1.5926, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5411, -1.6217, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5400, -1.6231, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5352, -1.6108, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5364, -1.6058, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.6050, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5579, -1.6004, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5622, -1.5835, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5682, -1.5751, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5611, -1.5639, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -1.5654, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -1.5657, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5133, -1.5591, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4981, -1.5537, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4869, -1.5566, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.730000. Loss: 3.280971. Time: 24.495131
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.740000, Val Loss: 2.404157 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -1.5533, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4925, -1.5604, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5087, -1.5684, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5141, -1.5715, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -1.5686, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5167, -1.5596, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5196, -1.5544, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5229, -1.5483, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5181, -1.5357, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5062, -1.5294, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5075, -1.5266, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5142, -1.5234, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5291, -1.5394, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -1.5475, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5679, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5471, -1.5891, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5530, -1.6023, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5558, -1.6072, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5403, -1.5858, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.660000. Loss: 3.393497. Time: 24.224226
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.730000, Val Loss: 2.051330 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5252, -1.5494, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5227, -1.5336, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5260, -1.5211, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5211, -1.5133, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5123, -1.5089, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5074, -1.5135, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5095, -1.5187, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5146, -1.5246, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5239, -1.5526, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5336, -1.5672, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5392, -1.5588, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5390, -1.5490, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5329, -1.5481, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5164, -1.5536, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4921, -1.5582, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4830, -1.5583, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4864, -1.5538, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4908, -1.5499, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5011, -1.5415, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.680000. Loss: 3.849176. Time: 24.690770
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.710000, Val Loss: 3.669191 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5444, -1.5228, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5683, -1.5259, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5803, -1.5307, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5780, -1.5454, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5777, -1.5657, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5770, -1.5717, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5802, -1.5781, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.5863, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -1.5979, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5392, -1.6085, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5363, -1.6039, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5290, -1.5880, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5247, -1.5797, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5241, -1.5736, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5318, -1.5683, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5353, -1.5490, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5244, -1.5213, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5169, -1.5012, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5129, -1.4886, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.715000. Loss: 3.392159. Time: 24.618559
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.830000, Val Loss: 1.344068 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4874, -1.4742, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4743, -1.4835, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4525, -1.5088, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4383, -1.5270, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4326, -1.5476, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4386, -1.5684, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4470, -1.6000, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4551, -1.6310, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4524, -1.6504, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4473, -1.6384, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4507, -1.6122, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4728, -1.5856, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4973, -1.5709, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5273, -1.5568, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5518, -1.5322, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5598, -1.4998, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -1.4821, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5647, -1.4676, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5451, -1.4768, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.715000. Loss: 2.836371. Time: 24.575030
Validate after epoch 14 with seed 964979
Val Accuracy: 0.700000, Val Loss: 2.830421 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5194, -1.5106, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5156, -1.5125, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5194, -1.5111, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5246, -1.5066, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5249, -1.5083, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5303, -1.5215, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5416, -1.5356, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5552, -1.5486, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5769, -1.5692, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5939, -1.5805, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6017, -1.5803, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6060, -1.5763, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6081, -1.5775, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6005, -1.5648, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5894, -1.5425, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5793, -1.5290, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5849, -1.5401, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5863, -1.5500, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5757, -1.5574, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.770000. Loss: 3.121978. Time: 24.660639
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.750000, Val Loss: 2.473750 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5637, -1.5542, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -1.5566, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5371, -1.5475, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5200, -1.5298, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5049, -1.5113, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4898, -1.5027, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4721, -1.4993, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4577, -1.4906, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4568, -1.4914, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4424, -1.4963, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4443, -1.5180, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4501, -1.5411, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4522, -1.5700, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4551, -1.5948, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4515, -1.6020, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4561, -1.6078, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4602, -1.6185, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4683, -1.6157, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4738, -1.6062, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.705000. Loss: 3.016117. Time: 24.190156
Validate after epoch 16 with seed 840036
Val Accuracy: 0.780000, Val Loss: 3.324668 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5054, -1.5734, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -1.5586, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5473, -1.5562, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5627, -1.5626, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5781, -1.5693, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6056, -1.5646, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6306, -1.5679, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6418, -1.5697, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6426, -1.5864, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6458, -1.6065, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6370, -1.6170, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6057, -1.6160, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5831, -1.5998, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5642, -1.5768, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5330, -1.5303, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5240, -1.4730, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5215, -1.4352, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5283, -1.4099, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5345, -1.4058, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.725000. Loss: 4.176362. Time: 24.330090
Validate after epoch 17 with seed 180463
Val Accuracy: 0.660000, Val Loss: 4.820930 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5509, -1.5122, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -1.5750, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5444, -1.6433, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5387, -1.7179, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5422, -1.7364, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -1.7095, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5988, -1.6508, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6148, -1.6032, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5984, -1.5752, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5738, -1.5549, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5515, -1.5268, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5310, -1.5058, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5090, -1.5161, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5033, -1.5060, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4870, -1.4895, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4709, -1.4883, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4562, -1.4911, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4484, -1.4739, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4563, -1.4591, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.750000. Loss: 3.343961. Time: 24.318570
Validate after epoch 18 with seed 575883
Val Accuracy: 0.610000, Val Loss: 6.290025 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5006, -1.5123, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5230, -1.5510, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5415, -1.5941, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5464, -1.6474, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5411, -1.6750, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5296, -1.6710, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5254, -1.6581, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5265, -1.6475, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5284, -1.6417, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5353, -1.6385, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5523, -1.6305, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5851, -1.6274, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6111, -1.6454, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6331, -1.6461, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6402, -1.6320, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6441, -1.6222, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6361, -1.6111, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6284, -1.6026, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6127, -1.6164, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.810000. Loss: 2.599992. Time: 24.433387
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.670000, Val Loss: 2.762458 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5815, -1.6345, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -1.6307, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5515, -1.6080, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5371, -1.5889, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5288, -1.5646, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5205, -1.5207, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5098, -1.4968, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4893, -1.4864, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4787, -1.4889, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4770, -1.4987, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4926, -1.5124, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5276, -1.5581, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5503, -1.5872, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5745, -1.6099, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5997, -1.6347, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5929, -1.6323, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5656, -1.6125, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5418, -1.5969, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5011, -1.5594, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.740000. Loss: 3.667987. Time: 24.710563
Validate after epoch 20 with seed 822616
Val Accuracy: 0.700000, Val Loss: 3.634024 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4629, -1.4951, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4589, -1.4819, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4781, -1.4754, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -1.4998, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5505, -1.5229, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5765, -1.5575, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5873, -1.5859, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5962, -1.5970, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5969, -1.6115, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6004, -1.6324, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6048, -1.6583, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6232, -1.6846, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6375, -1.7014, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6196, -1.6799, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -1.6267, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4904, -1.5818, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4284, -1.5234, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3796, -1.4617, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3494, -1.4186, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.700000. Loss: 4.356684. Time: 24.906742
Validate after epoch 21 with seed 519531
Val Accuracy: 0.710000, Val Loss: 4.543911 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.3919, -1.4024, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4288, -1.4113, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4811, -1.4380, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5229, -1.4699, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5478, -1.4914, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5581, -1.5033, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5840, -1.5238, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6000, -1.5198, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6195, -1.5085, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6490, -1.5080, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6766, -1.5269, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6802, -1.5492, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6777, -1.5685, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6458, -1.5621, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6113, -1.5488, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5900, -1.5430, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.5454, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5676, -1.5485, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5592, -1.5484, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.795000. Loss: 2.458731. Time: 24.551545
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.760000, Val Loss: 3.583085 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5747, -1.5744, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5790, -1.5926, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5806, -1.6027, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5631, -1.5829, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5416, -1.5609, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5315, -1.5461, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5418, -1.5473, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5480, -1.5458, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5672, -1.5547, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5801, -1.5657, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5640, -1.5642, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -1.5638, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5534, -1.5697, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5594, -1.5758, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5515, -1.5730, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5398, -1.5565, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -1.5329, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5225, -1.5372, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5207, -1.5478, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.785000. Loss: 2.838296. Time: 24.504658
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.730000, Val Loss: 3.920029 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5098, -1.5307, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4826, -1.5160, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4813, -1.5184, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4846, -1.5199, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4958, -1.5236, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4970, -1.5209, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5032, -1.5324, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5043, -1.5325, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5087, -1.5343, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5172, -1.5444, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5213, -1.5473, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5319, -1.5426, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5439, -1.5422, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -1.5543, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5699, -1.5673, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5725, -1.5740, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -1.5717, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5612, -1.5657, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5511, -1.5465, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.765000. Loss: 3.042870. Time: 24.458625
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.590000, Val Loss: 8.205407 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5446, -1.5498, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5632, -1.5658, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5836, -1.6005, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5796, -1.6157, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5758, -1.6253, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5724, -1.6275, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5636, -1.6070, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5447, -1.5724, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5357, -1.5530, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5457, -1.5555, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5354, -1.5507, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5248, -1.5411, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5136, -1.5394, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5107, -1.5466, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4969, -1.5541, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4874, -1.5515, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4895, -1.5489, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5018, -1.5466, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5158, -1.5468, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.690000. Loss: 4.775711. Time: 24.337271
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.760000, Val Loss: 2.956532 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5428, -1.5550, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5556, -1.5590, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5620, -1.5634, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5713, -1.5662, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5726, -1.5661, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5645, -1.5645, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5579, -1.5612, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5565, -1.5593, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5648, -1.5631, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5705, -1.5660, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5703, -1.5643, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5664, -1.5616, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5646, -1.5586, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5680, -1.5540, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5750, -1.5463, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5883, -1.5420, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5919, -1.5473, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6005, -1.5568, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6125, -1.5678, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.830000. Loss: 2.059350. Time: 24.413419
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.620000, Val Loss: 4.894019 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6231, -1.5811, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6176, -1.5863, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5808, -1.5828, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5445, -1.5803, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5190, -1.5782, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4985, -1.5719, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4905, -1.5671, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4958, -1.5682, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4823, -1.5636, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4730, -1.5567, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4773, -1.5551, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4832, -1.5534, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4886, -1.5532, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5077, -1.5520, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5228, -1.5538, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5312, -1.5567, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5572, -1.5577, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5820, -1.5648, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5951, -1.5688, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.775000. Loss: 3.724633. Time: 24.699466
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.780000, Val Loss: 3.394855 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6040, -1.5695, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5973, -1.5706, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5910, -1.5693, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5857, -1.5667, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5794, -1.5645, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5777, -1.5667, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5716, -1.5653, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5635, -1.5689, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5586, -1.5762, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5574, -1.5868, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5550, -1.5929, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5385, -1.5876, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -1.5835, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -1.5791, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5335, -1.5736, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5315, -1.5630, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5338, -1.5553, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5387, -1.5587, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5430, -1.5615, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.790000. Loss: 3.531877. Time: 24.330467
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.870000, Val Loss: 1.856983 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5477, -1.5692, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5460, -1.5692, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5501, -1.5796, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -1.5867, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5569, -1.5890, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5626, -1.5837, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5691, -1.5772, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5762, -1.5765, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5730, -1.5846, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5724, -1.5874, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5687, -1.5861, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5610, -1.5855, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -1.5874, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -1.5872, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5374, -1.5880, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5317, -1.5878, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5298, -1.5874, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5347, -1.5877, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5346, -1.5879, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.810000. Loss: 2.062850. Time: 24.561568
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.770000, Val Loss: 2.495062 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5569, -1.6001, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5794, -1.6045, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6052, -1.6072, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6226, -1.6016, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6212, -1.5880, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6140, -1.5752, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5904, -1.5576, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5654, -1.5350, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5435, -1.5134, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5331, -1.4948, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5123, -1.4875, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4997, -1.4879, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4937, -1.5027, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4754, -1.5362, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4650, -1.5643, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4687, -1.5921, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4979, -1.6133, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5592, -1.6322, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6113, -1.6433, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.730000. Loss: 4.509546. Time: 24.637648
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.750000, Val Loss: 5.555588 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6395, -1.6098, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6259, -1.5844, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6125, -1.5682, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6142, -1.5522, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6179, -1.5410, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6191, -1.5379, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6181, -1.5352, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6240, -1.5289, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6099, -1.5160, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5823, -1.5165, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5658, -1.5203, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5629, -1.5195, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5573, -1.5235, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -1.5297, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -1.5381, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5380, -1.5445, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5300, -1.5609, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5372, -1.5702, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5401, -1.5753, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.845000. Loss: 2.391785. Time: 24.887581
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.810000, Val Loss: 3.122900 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5415, -1.5848, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5374, -1.5757, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5377, -1.5750, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5374, -1.5621, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5334, -1.5427, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5373, -1.5269, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -1.5315, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5615, -1.5488, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5846, -1.5621, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5911, -1.5691, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5864, -1.5813, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5797, -1.5866, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5729, -1.5894, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5626, -1.5855, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5639, -1.5772, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.5642, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5640, -1.5544, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5680, -1.5536, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5726, -1.5595, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.765000. Loss: 2.776535. Time: 24.853300
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.790000, Val Loss: 2.746715 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5780, -1.5913, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5724, -1.6045, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5601, -1.6068, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5533, -1.6031, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -1.5892, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5437, -1.5875, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5428, -1.5918, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5356, -1.6019, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -1.5967, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5429, -1.5779, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5602, -1.5434, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5738, -1.5128, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5712, -1.5078, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5543, -1.5257, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5440, -1.5326, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5378, -1.5339, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5452, -1.5281, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5515, -1.5175, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5565, -1.5284, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.775000. Loss: 2.973448. Time: 24.617746
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.840000, Val Loss: 3.617344 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5775, -1.5897, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5805, -1.6025, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5792, -1.6051, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5803, -1.6011, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5834, -1.5823, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5924, -1.5610, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5981, -1.5465, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5845, -1.5292, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5661, -1.5041, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5436, -1.4910, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5296, -1.4877, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5236, -1.4872, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5121, -1.5114, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5026, -1.5434, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4962, -1.5650, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4810, -1.5792, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4749, -1.5877, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4803, -1.5749, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4970, -1.5788, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.765000. Loss: 2.619610. Time: 24.828793
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.740000, Val Loss: 3.293218 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5441, -1.6224, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5574, -1.6413, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5660, -1.6423, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5806, -1.6256, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5961, -1.6057, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6023, -1.5762, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5919, -1.5596, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5805, -1.5364, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5754, -1.5054, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5594, -1.4919, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5284, -1.4961, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5008, -1.5074, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4817, -1.5186, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4776, -1.5446, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4798, -1.5618, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4855, -1.5653, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4946, -1.5955, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5015, -1.6212, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5148, -1.6338, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.760000. Loss: 3.598489. Time: 24.653891
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.750000, Val Loss: 3.622480 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5490, -1.6208, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5823, -1.6116, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6138, -1.6016, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6052, -1.5775, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5899, -1.5583, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5806, -1.5589, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5727, -1.5646, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5714, -1.5634, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5684, -1.5642, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5650, -1.5601, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5596, -1.5542, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5609, -1.5562, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5462, -1.5410, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5365, -1.5197, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5358, -1.5209, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5395, -1.5249, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5441, -1.5274, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5568, -1.5322, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5807, -1.5364, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.790000. Loss: 3.494788. Time: 24.450918
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.750000, Val Loss: 4.595664 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6228, -1.4944, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6104, -1.5328, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5855, -1.5643, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5669, -1.5858, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5444, -1.5981, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5274, -1.6043, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5158, -1.6107, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5015, -1.6069, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4979, -1.6019, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4951, -1.5980, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4949, -1.5966, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4836, -1.5988, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4788, -1.6018, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4840, -1.6016, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5000, -1.5970, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5179, -1.5964, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5414, -1.6048, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5619, -1.6080, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5890, -1.5828, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.765000. Loss: 2.820182. Time: 24.725250
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.770000, Val Loss: 2.864252 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6333, -1.5128, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6280, -1.4960, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6119, -1.4902, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5966, -1.4787, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5772, -1.4727, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -1.4850, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5347, -1.5074, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5214, -1.5275, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5130, -1.5393, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5142, -1.5713, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5085, -1.5980, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4840, -1.6149, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4391, -1.6382, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4326, -1.6476, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4609, -1.6329, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4887, -1.6223, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5084, -1.6150, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5571, -1.5938, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6080, -1.5617, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.815000. Loss: 3.095410. Time: 24.509350
Validate after epoch 38 with seed 297566
Val Accuracy: 0.650000, Val Loss: 7.761324 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.7066, -1.4771, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.7432, -1.4467, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.7428, -1.4464, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.7209, -1.4472, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.7053, -1.4512, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6704, -1.4710, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6220, -1.4937, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5960, -1.5042, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5989, -1.5127, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5947, -1.5397, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5835, -1.5653, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5821, -1.5835, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5678, -1.5981, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5653, -1.5979, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5731, -1.5878, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6033, -1.5776, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6082, -1.5812, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6112, -1.5875, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6099, -1.5885, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.810000. Loss: 2.699793. Time: 24.165126
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.830000, Val Loss: 1.645688 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5908, -1.5702, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5792, -1.5446, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5646, -1.5203, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5306, -1.5176, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4939, -1.5409, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4747, -1.5462, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4598, -1.5468, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4601, -1.5434, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4807, -1.5331, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5087, -1.5145, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5241, -1.5111, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5403, -1.5239, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5621, -1.5491, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5773, -1.5632, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5751, -1.5815, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5659, -1.5980, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5598, -1.6132, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5517, -1.6175, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5528, -1.6204, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.755000. Loss: 3.179031. Time: 24.940037
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.720000, Val Loss: 4.751126 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5514, -1.5886, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5604, -1.5667, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5613, -1.5470, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5657, -1.5349, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5608, -1.5177, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5767, -1.4983, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5848, -1.4925, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5806, -1.4963, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5753, -1.4996, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5815, -1.5054, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5805, -1.5223, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5825, -1.5188, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5949, -1.5129, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5910, -1.5175, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5741, -1.5268, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5600, -1.5478, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5532, -1.5695, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5478, -1.5873, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5449, -1.5969, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.820000. Loss: 3.438054. Time: 24.646310
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.840000, Val Loss: 2.248970 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5623, -1.6066, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5639, -1.6037, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5657, -1.5973, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5661, -1.5873, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5657, -1.5845, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5776, -1.5859, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5819, -1.5894, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5816, -1.5885, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5710, -1.5857, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5655, -1.5827, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5656, -1.5865, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5690, -1.5885, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5745, -1.5918, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5512, -1.6062, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5322, -1.6063, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5300, -1.5885, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5302, -1.5691, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5298, -1.5549, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5389, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.805000. Loss: 2.928129. Time: 24.578113
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.870000, Val Loss: 2.120996 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5795, -1.5171, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5909, -1.5196, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5972, -1.5236, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6040, -1.5469, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6122, -1.5622, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6268, -1.5741, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6374, -1.5772, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6483, -1.5778, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6476, -1.5818, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6461, -1.5876, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6362, -1.5863, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6188, -1.5783, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6015, -1.5659, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5818, -1.5504, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5518, -1.5260, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5299, -1.5173, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5154, -1.5210, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5029, -1.5259, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5024, -1.5343, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.820000. Loss: 2.966720. Time: 24.461650
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.770000, Val Loss: 3.987538 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4979, -1.5623, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5109, -1.5596, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5370, -1.5576, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5506, -1.5495, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5494, -1.5458, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5456, -1.5437, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5371, -1.5448, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5276, -1.5327, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5316, -1.5296, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5442, -1.5342, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5541, -1.5461, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5687, -1.5708, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5809, -1.5925, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5673, -1.6027, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5518, -1.6101, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5366, -1.6107, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5272, -1.5989, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5356, -1.5897, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5444, -1.5851, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.745000. Loss: 3.129105. Time: 24.615658
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.870000, Val Loss: 2.161081 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5602, -1.5883, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5700, -1.5629, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5758, -1.5436, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5830, -1.5151, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5860, -1.4940, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5849, -1.4673, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5757, -1.4638, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5730, -1.4686, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5809, -1.4904, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5934, -1.5207, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5977, -1.5523, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5856, -1.5763, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5409, -1.6210, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4970, -1.6458, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4623, -1.6501, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4284, -1.6457, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4125, -1.6233, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4001, -1.6125, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4007, -1.6038, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.750000. Loss: 4.321384. Time: 24.475313
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.740000, Val Loss: 6.466950 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4312, -1.5769, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4824, -1.5341, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5356, -1.5078, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5719, -1.5090, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5959, -1.5213, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6196, -1.5264, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6386, -1.5283, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6507, -1.5347, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6674, -1.5357, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6815, -1.5331, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6886, -1.5325, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6646, -1.5498, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6260, -1.5667, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5816, -1.5697, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5429, -1.5746, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4847, -1.5853, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4481, -1.5929, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4352, -1.5933, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4555, -1.5758, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.815000. Loss: 3.733579. Time: 24.532735
Validate after epoch 46 with seed 91566
Val Accuracy: 0.830000, Val Loss: 1.948999 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4857, -1.5734, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4865, -1.5773, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5101, -1.5751, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5208, -1.5778, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5173, -1.5756, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5195, -1.5650, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5361, -1.5350, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5457, -1.5384, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5491, -1.5441, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5550, -1.5439, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5800, -1.5352, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5833, -1.5356, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5746, -1.5437, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5595, -1.5523, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5504, -1.5575, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5447, -1.5606, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5426, -1.5629, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5402, -1.5617, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5396, -1.5578, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.815000. Loss: 2.643827. Time: 24.229826
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.810000, Val Loss: 2.441877 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5282, -1.5569, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5500, -1.5538, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5718, -1.5427, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5835, -1.5361, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5845, -1.5343, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5951, -1.5385, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5984, -1.5430, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5922, -1.5378, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6067, -1.5217, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6096, -1.5138, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5877, -1.5078, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5536, -1.5037, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5438, -1.5235, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5383, -1.5379, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5224, -1.5497, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5068, -1.5717, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4917, -1.6113, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4777, -1.6357, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4690, -1.6510, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.810000. Loss: 2.225832. Time: 24.377740
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.860000, Val Loss: 2.359981 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4772, -1.6501, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4796, -1.6496, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4810, -1.6493, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.4855, -1.6542, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5092, -1.6519, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5263, -1.6384, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5425, -1.6229, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5532, -1.6134, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5633, -1.6088, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5712, -1.6157, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5824, -1.6206, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5928, -1.6019, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6006, -1.5861, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6251, -1.5684, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6120, -1.5528, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5908, -1.5358, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5877, -1.5131, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5699, -1.5053, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5587, -1.5134, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.855000. Loss: 1.781940. Time: 24.586652
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.780000, Val Loss: 4.384946 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5311, -1.5323, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5131, -1.5437, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5001, -1.5484, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5104, -1.5713, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5394, -1.6044, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5622, -1.6277, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5752, -1.6374, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5768, -1.6339, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5710, -1.6445, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5663, -1.6603, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5416, -1.6398, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5236, -1.5979, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5242, -1.5516, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5324, -1.5087, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.5896, -1.4579, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6319, -1.4463, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6570, -1.4321, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6698, -1.4467, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.6595, -1.4723, -0.2684, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.740000. Loss: 4.892522. Time: 24.145850
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.690000, Val Loss: 4.923052 
Training Execution time: 36:12:23.00
Conducting Test
Test Accuracy: 0.690000, Test Loss: 5.004167 
