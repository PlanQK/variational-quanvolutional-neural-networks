Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 8, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_8_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 8, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 4, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_8_Trainable_yes_Threshold_Encoder_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1046, -0.9113, -0.3226, -0.6884]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1501, -0.9566, -0.3677, -0.7338]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1906, -0.9964, -0.4090, -0.7742]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2247, -1.0291, -0.4469, -0.8080]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2556, -1.0579, -0.4845, -0.8386]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2806, -1.0806, -0.5158, -0.8631]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2976, -1.0960, -0.5460, -0.8797]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3100, -1.1071, -0.5730, -0.8918]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3113, -1.1089, -0.5976, -0.8933]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3040, -1.1039, -0.6243, -0.8867]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3006, -1.1016, -0.6644, -0.8836]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3066, -1.1068, -0.7134, -0.8893]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3065, -1.1069, -0.7532, -0.8894]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3086, -1.1088, -0.7865, -0.8914]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3084, -1.1087, -0.8157, -0.8912]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3035, -1.1048, -0.8433, -0.8866]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3021, -1.1037, -0.8680, -0.8853]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3041, -1.1054, -0.8947, -0.8872]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3025, -1.1041, -0.9213, -0.8857]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.420000. Loss: 3.497255. Time: 16.036724
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.590000, Val Loss: 1.575670 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3054, -1.1066, -0.9841, -0.8885]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3070, -1.1079, -1.0046, -0.8901]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3069, -1.1078, -1.0228, -0.8899]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3078, -1.1086, -1.0383, -0.8908]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3107, -1.1110, -1.0515, -0.8935]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3101, -1.1105, -1.0621, -0.8930]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3109, -1.1112, -1.0733, -0.8938]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3127, -1.1127, -1.0887, -0.8955]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3111, -1.1114, -1.0964, -0.8939]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3114, -1.1116, -1.1138, -0.8942]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3099, -1.1104, -1.1352, -0.8928]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3100, -1.1105, -1.1660, -0.8929]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3118, -1.1120, -1.1915, -0.8946]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3094, -1.1100, -1.2091, -0.8923]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3057, -1.1069, -1.2152, -0.8888]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3046, -1.1060, -1.2186, -0.8878]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3091, -1.1099, -1.2297, -0.8921]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3106, -1.1111, -1.2329, -0.8935]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3111, -1.1116, -1.2364, -0.8940]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.605000. Loss: 1.428034. Time: 15.939719
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.580000, Val Loss: 1.869665 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3127, -1.1130, -1.2520, -0.8956]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3101, -1.1108, -1.2646, -0.8931]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3098, -1.1106, -1.2785, -0.8929]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3064, -1.1077, -1.2924, -0.8895]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3011, -1.1033, -1.2925, -0.8845]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2992, -1.1017, -1.2877, -0.8827]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3070, -1.1084, -1.2918, -0.8902]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3242, -1.1232, -1.3192, -0.9068]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3456, -1.1414, -1.3442, -0.9273]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3635, -1.1563, -1.3716, -0.9443]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3699, -1.1620, -1.3839, -0.9505]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3156, -1.1168, -1.3781, -0.8991]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2588, -1.0681, -1.3712, -0.8447]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2325, -1.0466, -1.3786, -0.8199]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2255, -1.0427, -1.3889, -0.8139]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2283, -1.0476, -1.3950, -0.8174]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2330, -1.0538, -1.4048, -0.8226]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2375, -1.0592, -1.4115, -0.8273]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2275, -1.0494, -1.4120, -0.8175]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.635000. Loss: 1.534302. Time: 16.101704
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.650000, Val Loss: 1.649946 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2042, -1.0261, -1.4178, -0.7943]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2676, -1.0920, -1.4101, -0.8584]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3173, -1.1439, -1.4056, -0.9087]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3464, -1.1742, -1.4142, -0.9382]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3736, -1.2008, -1.4361, -0.9648]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3940, -1.2201, -1.4436, -0.9845]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4065, -1.2320, -1.4369, -0.9967]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3904, -1.2203, -1.4318, -0.9830]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3369, -1.1758, -1.4119, -0.9345]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2790, -1.1253, -1.3959, -0.8809]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2480, -1.0991, -1.3859, -0.8525]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2321, -1.0861, -1.3810, -0.8381]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2212, -1.0768, -1.3925, -0.8281]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2229, -1.0802, -1.4093, -0.8304]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2306, -1.0894, -1.4177, -0.8384]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2331, -1.0928, -1.4237, -0.8412]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2315, -1.0914, -1.4272, -0.8397]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2157, -1.0748, -1.4268, -0.8241]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2360, -1.0971, -1.4334, -0.8446]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.725000. Loss: 1.468041. Time: 16.158844
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.690000, Val Loss: 1.275442 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2788, -1.1433, -1.4512, -0.8876]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2807, -1.1461, -1.4589, -0.8899]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2656, -1.1319, -1.4591, -0.8757]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2551, -1.1220, -1.4661, -0.8658]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2585, -1.1260, -1.4800, -0.8693]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2713, -1.1393, -1.4964, -0.8819]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2991, -1.1673, -1.5152, -0.9090]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3068, -1.1757, -1.5331, -0.9168]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3046, -1.1744, -1.5373, -0.9151]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3047, -1.1749, -1.5485, -0.9154]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3099, -1.1801, -1.5584, -0.9205]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3139, -1.1840, -1.5644, -0.9243]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3041, -1.1750, -1.5753, -0.9152]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2964, -1.1679, -1.5754, -0.9080]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2874, -1.1593, -1.5392, -0.8995]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2857, -1.1579, -1.5000, -0.8980]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2901, -1.1623, -1.4866, -0.9022]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2856, -1.1581, -1.4858, -0.8980]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2763, -1.1491, -1.4984, -0.8892]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.630000. Loss: 1.978446. Time: 16.336870
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.520000, Val Loss: 2.306552 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2990, -1.1720, -1.5125, -0.9113]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3294, -1.2020, -1.5032, -0.9407]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3262, -1.2004, -1.4638, -0.9384]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3140, -1.1899, -1.4266, -0.9274]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3072, -1.1841, -1.4036, -0.9214]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2985, -1.1762, -1.3888, -0.9133]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2839, -1.1624, -1.3844, -0.8996]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2850, -1.1639, -1.3865, -0.9009]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2978, -1.1769, -1.3996, -0.9133]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2970, -1.1764, -1.4296, -0.9128]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3019, -1.1814, -1.4683, -0.9175]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3150, -1.1943, -1.4982, -0.9301]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3170, -1.1965, -1.5356, -0.9321]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3031, -1.1835, -1.5634, -0.9192]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2792, -1.1608, -1.5757, -0.8966]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2666, -1.1490, -1.5711, -0.8848]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2543, -1.1370, -1.5591, -0.8731]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2414, -1.1242, -1.5476, -0.8607]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2429, -1.1262, -1.5427, -0.8623]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.630000. Loss: 1.803743. Time: 16.218807
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.760000, Val Loss: 1.148713 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2320, -1.1153, -1.5463, -0.8518]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2324, -1.1159, -1.5460, -0.8523]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2390, -1.1230, -1.5469, -0.8589]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2660, -1.1514, -1.5286, -0.8856]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3112, -1.1976, -1.5123, -0.9298]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3296, -1.2175, -1.4959, -0.9483]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3325, -1.2218, -1.4745, -0.9519]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3158, -1.2076, -1.4404, -0.9372]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3085, -1.2017, -1.4208, -0.9310]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3000, -1.1941, -1.4312, -0.9233]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2838, -1.1789, -1.4383, -0.9082]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2690, -1.1649, -1.4490, -0.8944]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2482, -1.1444, -1.4508, -0.8747]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2371, -1.1336, -1.4609, -0.8642]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2203, -1.1164, -1.4668, -0.8479]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1936, -1.0881, -1.4703, -0.8215]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1851, -1.0797, -1.4807, -0.8134]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1924, -1.0887, -1.4847, -0.8210]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2011, -1.0990, -1.4768, -0.8301]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.605000. Loss: 1.701270. Time: 15.982260
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.750000, Val Loss: 1.282316 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2447, -1.1473, -1.4551, -0.8739]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2600, -1.1640, -1.4510, -0.8892]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2840, -1.1889, -1.4428, -0.9125]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2876, -1.1935, -1.4507, -0.9165]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3046, -1.2105, -1.4647, -0.9327]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3329, -1.2379, -1.4778, -0.9593]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3508, -1.2552, -1.4854, -0.9761]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3424, -1.2487, -1.4803, -0.9691]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3236, -1.2326, -1.4814, -0.9527]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3051, -1.2160, -1.4739, -0.9361]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2888, -1.2015, -1.4685, -0.9215]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2721, -1.1860, -1.4581, -0.9063]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2627, -1.1774, -1.4497, -0.8977]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2656, -1.1808, -1.4426, -0.9008]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2607, -1.1762, -1.4395, -0.8963]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2644, -1.1802, -1.4408, -0.8999]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2684, -1.1845, -1.4503, -0.9038]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2557, -1.1719, -1.4561, -0.8918]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2387, -1.1548, -1.4606, -0.8756]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.750000. Loss: 1.427267. Time: 16.204436
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.680000, Val Loss: 1.457650 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2657, -1.1837, -1.4951, -0.9023]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2823, -1.2009, -1.5066, -0.9184]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2866, -1.2058, -1.5146, -0.9228]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2757, -1.1956, -1.5258, -0.9128]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2768, -1.1971, -1.5348, -0.9141]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2799, -1.2004, -1.5386, -0.9172]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2854, -1.2060, -1.5384, -0.9224]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3032, -1.2235, -1.5342, -0.9393]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2926, -1.2139, -1.5201, -0.9297]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2781, -1.2002, -1.5055, -0.9163]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2574, -1.1803, -1.5066, -0.8970]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2401, -1.1634, -1.5157, -0.8807]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2207, -1.1439, -1.5163, -0.8621]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1908, -1.1125, -1.5146, -0.8330]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1894, -1.1125, -1.5117, -0.8322]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2211, -1.1484, -1.5095, -0.8644]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2605, -1.1919, -1.5054, -0.9039]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2896, -1.2232, -1.5027, -0.9327]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3039, -1.2390, -1.5185, -0.9470]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.720000. Loss: 1.539908. Time: 16.536372
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.750000, Val Loss: 1.464376 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3106, -1.2477, -1.5623, -0.9545]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3290, -1.2652, -1.5644, -0.9713]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3258, -1.2630, -1.5582, -0.9689]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2815, -1.2232, -1.5439, -0.9296]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2505, -1.1951, -1.5400, -0.9020]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2387, -1.1851, -1.5317, -0.8918]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2314, -1.1789, -1.5348, -0.8855]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2279, -1.1762, -1.5245, -0.8826]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2194, -1.1677, -1.5234, -0.8747]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2118, -1.1601, -1.5168, -0.8676]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2126, -1.1613, -1.5157, -0.8685]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2173, -1.1665, -1.5348, -0.8731]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2263, -1.1761, -1.5505, -0.8818]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2424, -1.1932, -1.5676, -0.8974]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2489, -1.2002, -1.5820, -0.9037]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2646, -1.2163, -1.5724, -0.9186]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2819, -1.2338, -1.5653, -0.9348]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2983, -1.2500, -1.5494, -0.9499]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3169, -1.2680, -1.5480, -0.9670]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.700000. Loss: 2.056382. Time: 16.208712
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.650000, Val Loss: 2.294982 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3287, -1.2799, -1.5086, -0.9781]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3186, -1.2711, -1.4932, -0.9694]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2854, -1.2412, -1.4968, -0.9403]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2602, -1.2181, -1.5086, -0.9179]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2405, -1.1996, -1.5105, -0.9001]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2149, -1.1742, -1.5090, -0.8764]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1961, -1.1555, -1.5063, -0.8589]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1753, -1.1337, -1.5177, -0.8391]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1606, -1.1182, -1.5269, -0.8250]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1744, -1.1350, -1.5240, -0.8392]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2118, -1.1775, -1.5283, -0.8767]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2316, -1.2002, -1.5293, -0.8967]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2474, -1.2179, -1.5389, -0.9124]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2621, -1.2337, -1.5545, -0.9267]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2545, -1.2273, -1.5739, -0.9203]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2505, -1.2240, -1.5905, -0.9170]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2478, -1.2217, -1.5997, -0.9147]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2442, -1.2183, -1.6143, -0.9115]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2407, -1.2151, -1.6225, -0.9084]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.680000. Loss: 1.671693. Time: 16.081706
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.760000, Val Loss: 1.027182 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2245, -1.1990, -1.5967, -0.8934]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2263, -1.2011, -1.5854, -0.8952]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2390, -1.2141, -1.5753, -0.9071]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2511, -1.2264, -1.5581, -0.9185]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2446, -1.2204, -1.5475, -0.9127]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2487, -1.2247, -1.5340, -0.9166]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2604, -1.2364, -1.5207, -0.9275]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2661, -1.2422, -1.5083, -0.9328]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2378, -1.2152, -1.5281, -0.9072]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2223, -1.2005, -1.5458, -0.8932]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2207, -1.1995, -1.5479, -0.8920]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2255, -1.2049, -1.5279, -0.8968]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2239, -1.2036, -1.5266, -0.8955]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2458, -1.2262, -1.5074, -0.9161]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2636, -1.2444, -1.4878, -0.9329]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2755, -1.2565, -1.4902, -0.9441]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2774, -1.2589, -1.4874, -0.9462]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2768, -1.2586, -1.4743, -0.9458]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2759, -1.2580, -1.4629, -0.9451]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.660000. Loss: 2.108541. Time: 16.218451
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.760000, Val Loss: 1.146305 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2498, -1.2335, -1.4981, -0.9218]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2378, -1.2223, -1.5062, -0.9111]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2297, -1.2146, -1.5264, -0.9038]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2238, -1.2090, -1.5483, -0.8985]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2214, -1.2067, -1.5830, -0.8963]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2107, -1.1959, -1.6208, -0.8863]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2318, -1.2180, -1.6204, -0.9064]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2488, -1.2359, -1.6174, -0.9227]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2652, -1.2527, -1.6118, -0.9381]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2820, -1.2694, -1.6050, -0.9535]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2992, -1.2861, -1.5708, -0.9692]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3171, -1.3030, -1.5328, -0.9852]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3153, -1.3021, -1.5047, -0.9841]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2915, -1.2814, -1.4875, -0.9639]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2638, -1.2565, -1.4878, -0.9401]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2634, -1.2574, -1.4928, -0.9404]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2705, -1.2649, -1.4887, -0.9472]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2650, -1.2603, -1.4923, -0.9426]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2593, -1.2551, -1.4847, -0.9377]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.645000. Loss: 2.085147. Time: 16.011889
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.750000, Val Loss: 1.356066 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2193, -1.2164, -1.4949, -0.9015]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2031, -1.2006, -1.5037, -0.8868]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2076, -1.2061, -1.5047, -0.8915]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2178, -1.2174, -1.5161, -0.9015]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2190, -1.2192, -1.5400, -0.9029]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2301, -1.2308, -1.5480, -0.9133]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2700, -1.2715, -1.5252, -0.9507]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2875, -1.2898, -1.5370, -0.9673]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2973, -1.3000, -1.5533, -0.9766]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3024, -1.3055, -1.5676, -0.9815]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2945, -1.2989, -1.5762, -0.9751]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2799, -1.2859, -1.5770, -0.9627]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2611, -1.2688, -1.5723, -0.9465]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2454, -1.2543, -1.5639, -0.9329]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2389, -1.2485, -1.5545, -0.9273]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2366, -1.2466, -1.5497, -0.9255]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2387, -1.2489, -1.5457, -0.9275]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2339, -1.2443, -1.5428, -0.9232]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2308, -1.2414, -1.5326, -0.9205]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.730000. Loss: 1.754578. Time: 15.868302
Validate after epoch 14 with seed 964979
Val Accuracy: 0.690000, Val Loss: 1.857144 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2224, -1.2330, -1.4980, -0.9129]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2174, -1.2281, -1.4763, -0.9083]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2140, -1.2246, -1.4585, -0.9052]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2126, -1.2232, -1.4497, -0.9039]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2121, -1.2227, -1.4443, -0.9034]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2108, -1.2214, -1.4340, -0.9023]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2206, -1.2315, -1.4205, -0.9114]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2348, -1.2462, -1.4263, -0.9246]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2465, -1.2581, -1.4591, -0.9354]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2451, -1.2570, -1.5020, -0.9343]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2427, -1.2548, -1.5336, -0.9322]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2432, -1.2555, -1.5414, -0.9328]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2452, -1.2575, -1.5412, -0.9346]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2503, -1.2626, -1.5539, -0.9392]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2552, -1.2674, -1.5754, -0.9437]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2456, -1.2582, -1.5941, -0.9352]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2452, -1.2580, -1.5905, -0.9349]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2432, -1.2562, -1.5776, -0.9332]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2335, -1.2468, -1.5683, -0.9245]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.795000. Loss: 1.354774. Time: 15.992697
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.760000, Val Loss: 1.540266 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2224, -1.2359, -1.5530, -0.9145]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2159, -1.2294, -1.5425, -0.9086]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2135, -1.2270, -1.5453, -0.9064]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2211, -1.2349, -1.5513, -0.9135]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2281, -1.2422, -1.5586, -0.9200]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2326, -1.2468, -1.5730, -0.9242]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2470, -1.2613, -1.5582, -0.9374]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2647, -1.2789, -1.5369, -0.9535]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2713, -1.2857, -1.5247, -0.9596]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2677, -1.2826, -1.5283, -0.9567]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2637, -1.2790, -1.5394, -0.9532]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2476, -1.2638, -1.5433, -0.9391]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2385, -1.2553, -1.5576, -0.9311]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2310, -1.2482, -1.5754, -0.9246]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2266, -1.2439, -1.5970, -0.9206]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2177, -1.2351, -1.6133, -0.9126]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2130, -1.2306, -1.6212, -0.9084]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2143, -1.2320, -1.6228, -0.9096]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2198, -1.2377, -1.6184, -0.9147]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.770000. Loss: 1.571501. Time: 15.780418
Validate after epoch 16 with seed 840036
Val Accuracy: 0.700000, Val Loss: 1.978569 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2148, -1.2328, -1.5893, -0.9103]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2108, -1.2289, -1.5761, -0.9067]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2069, -1.2249, -1.5708, -0.9031]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2074, -1.2254, -1.5883, -0.9035]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2066, -1.2247, -1.5919, -0.9028]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2101, -1.2283, -1.5859, -0.9061]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2192, -1.2378, -1.5715, -0.9146]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2339, -1.2529, -1.5286, -0.9283]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2445, -1.2637, -1.5101, -0.9380]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2614, -1.2806, -1.5074, -0.9534]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2753, -1.2942, -1.5096, -0.9660]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2869, -1.3055, -1.5060, -0.9763]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2793, -1.2989, -1.5109, -0.9700]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2649, -1.2860, -1.5199, -0.9578]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2539, -1.2758, -1.5320, -0.9483]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2385, -1.2614, -1.5519, -0.9349]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2292, -1.2526, -1.5669, -0.9268]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2305, -1.2543, -1.5681, -0.9282]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2285, -1.2524, -1.5658, -0.9264]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.755000. Loss: 1.975251. Time: 15.845702
Validate after epoch 17 with seed 180463
Val Accuracy: 0.720000, Val Loss: 1.505780 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2200, -1.2442, -1.5659, -0.9189]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2144, -1.2386, -1.5858, -0.9138]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2060, -1.2301, -1.5858, -0.9061]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1936, -1.2174, -1.5765, -0.8947]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1945, -1.2187, -1.5703, -0.8957]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1987, -1.2232, -1.5682, -0.8997]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1917, -1.2161, -1.5750, -0.8933]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1979, -1.2228, -1.5689, -0.8992]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2071, -1.2324, -1.5572, -0.9078]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2095, -1.2352, -1.5471, -0.9102]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2216, -1.2477, -1.5287, -0.9214]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2325, -1.2588, -1.5182, -0.9314]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2385, -1.2650, -1.5108, -0.9370]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2354, -1.2622, -1.5068, -0.9344]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2266, -1.2537, -1.5091, -0.9265]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2136, -1.2408, -1.5167, -0.9148]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2055, -1.2328, -1.5258, -0.9075]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2033, -1.2308, -1.5326, -0.9056]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1874, -1.2144, -1.5525, -0.8908]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.735000. Loss: 1.410961. Time: 16.005695
Validate after epoch 18 with seed 575883
Val Accuracy: 0.620000, Val Loss: 3.511371 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2198, -1.2492, -1.5539, -0.9217]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2371, -1.2671, -1.5537, -0.9378]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2565, -1.2868, -1.5523, -0.9556]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2767, -1.3067, -1.5579, -0.9737]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2901, -1.3199, -1.5641, -0.9858]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2971, -1.3268, -1.5669, -0.9922]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3105, -1.3392, -1.5671, -1.0037]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3139, -1.3426, -1.5574, -1.0068]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2781, -1.3114, -1.5407, -0.9772]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2525, -1.2890, -1.5274, -0.9559]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2336, -1.2720, -1.5205, -0.9399]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2088, -1.2485, -1.5165, -0.9183]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2099, -1.2509, -1.5142, -0.9201]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2171, -1.2591, -1.5178, -0.9271]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2166, -1.2592, -1.5235, -0.9270]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2084, -1.2513, -1.5379, -0.9198]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2020, -1.2450, -1.5474, -0.9140]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1888, -1.2315, -1.5512, -0.9020]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1849, -1.2278, -1.5606, -0.8985]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.770000. Loss: 1.473135. Time: 15.907514
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.740000, Val Loss: 1.509370 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2013, -1.2455, -1.5687, -0.9141]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2078, -1.2525, -1.5704, -0.9203]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2094, -1.2544, -1.5733, -0.9218]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2124, -1.2577, -1.5769, -0.9247]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2101, -1.2554, -1.5874, -0.9226]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2085, -1.2539, -1.5943, -0.9213]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2091, -1.2545, -1.5967, -0.9218]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2123, -1.2579, -1.6085, -0.9248]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2187, -1.2644, -1.6161, -0.9307]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2221, -1.2679, -1.6292, -0.9338]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2123, -1.2582, -1.6206, -0.9250]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2048, -1.2507, -1.5907, -0.9182]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1881, -1.2338, -1.5740, -0.9030]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1875, -1.2336, -1.5571, -0.9027]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1968, -1.2438, -1.5433, -0.9116]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2048, -1.2525, -1.5374, -0.9192]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2109, -1.2590, -1.5355, -0.9250]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2183, -1.2666, -1.5263, -0.9318]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2062, -1.2547, -1.5043, -0.9209]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.750000. Loss: 1.607478. Time: 16.094321
Validate after epoch 20 with seed 822616
Val Accuracy: 0.770000, Val Loss: 1.996953 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2265, -1.2759, -1.5069, -0.9399]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2455, -1.2952, -1.4950, -0.9573]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2465, -1.2969, -1.4884, -0.9586]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2311, -1.2827, -1.4959, -0.9454]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2218, -1.2741, -1.5043, -0.9375]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2173, -1.2699, -1.5132, -0.9336]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2224, -1.2753, -1.5188, -0.9384]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2247, -1.2778, -1.5252, -0.9406]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2351, -1.2882, -1.5399, -0.9500]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2410, -1.2941, -1.5541, -0.9552]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2438, -1.2970, -1.5784, -0.9579]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2335, -1.2872, -1.5930, -0.9489]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2234, -1.2775, -1.5908, -0.9400]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2147, -1.2691, -1.5895, -0.9324]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2089, -1.2635, -1.5675, -0.9273]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2062, -1.2609, -1.5453, -0.9249]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2067, -1.2615, -1.5200, -0.9254]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2096, -1.2645, -1.5021, -0.9280]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2067, -1.2616, -1.4955, -0.9255]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.740000. Loss: 1.438055. Time: 15.767139
Validate after epoch 21 with seed 519531
Val Accuracy: 0.750000, Val Loss: 1.420197 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1881, -1.2427, -1.4877, -0.9085]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1819, -1.2364, -1.4941, -0.9028]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1805, -1.2351, -1.5108, -0.9017]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1831, -1.2379, -1.5306, -0.9041]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1838, -1.2387, -1.5431, -0.9048]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1858, -1.2408, -1.5500, -0.9067]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2007, -1.2564, -1.5503, -0.9205]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2158, -1.2721, -1.5469, -0.9345]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2278, -1.2844, -1.5482, -0.9455]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2329, -1.2898, -1.5491, -0.9503]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2407, -1.2976, -1.5578, -0.9573]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2481, -1.3050, -1.5707, -0.9639]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2511, -1.3080, -1.5741, -0.9666]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2544, -1.3113, -1.5826, -0.9696]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2457, -1.3033, -1.5831, -0.9622]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2443, -1.3020, -1.5900, -0.9610]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2331, -1.2914, -1.5786, -0.9513]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2268, -1.2856, -1.5825, -0.9460]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2087, -1.2678, -1.5813, -0.9299]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.780000. Loss: 1.646627. Time: 15.893888
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.640000, Val Loss: 2.446268 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1710, -1.2303, -1.5786, -0.8961]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1671, -1.2270, -1.5716, -0.8929]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1737, -1.2344, -1.5565, -0.8993]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1812, -1.2428, -1.5498, -0.9065]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1767, -1.2383, -1.5323, -0.9024]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1744, -1.2361, -1.5259, -0.9004]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1891, -1.2517, -1.5289, -0.9142]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2432, -1.3080, -1.5339, -0.9643]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2777, -1.3440, -1.5417, -0.9964]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2888, -1.3568, -1.5463, -1.0076]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2914, -1.3610, -1.5462, -1.0111]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2839, -1.3555, -1.5409, -1.0059]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2714, -1.3453, -1.5337, -0.9963]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2516, -1.3280, -1.5287, -0.9805]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2352, -1.3135, -1.5353, -0.9673]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2212, -1.3008, -1.5333, -0.9558]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2017, -1.2825, -1.5261, -0.9394]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2042, -1.2858, -1.5305, -0.9420]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1955, -1.2777, -1.5404, -0.9347]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.775000. Loss: 1.810184. Time: 16.212665
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.700000, Val Loss: 2.643533 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1801, -1.2628, -1.5876, -0.9214]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1782, -1.2611, -1.6077, -0.9199]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2011, -1.2848, -1.6196, -0.9406]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2142, -1.2987, -1.6226, -0.9526]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2063, -1.2916, -1.6219, -0.9462]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1974, -1.2832, -1.6204, -0.9387]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2011, -1.2873, -1.5995, -0.9422]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2070, -1.2934, -1.5522, -0.9475]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2153, -1.3018, -1.5124, -0.9549]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2192, -1.3058, -1.4866, -0.9584]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2217, -1.3084, -1.4674, -0.9606]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2106, -1.2978, -1.4562, -0.9511]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1826, -1.2706, -1.4430, -0.9270]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1677, -1.2563, -1.4492, -0.9142]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1747, -1.2644, -1.4811, -0.9210]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1846, -1.2750, -1.5011, -0.9301]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1868, -1.2777, -1.5105, -0.9324]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2003, -1.2916, -1.5439, -0.9445]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2035, -1.2952, -1.5861, -0.9475]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.745000. Loss: 1.809870. Time: 15.635310
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.750000, Val Loss: 1.888812 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2186, -1.3103, -1.6525, -0.9608]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2296, -1.3211, -1.6887, -0.9704]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2368, -1.3282, -1.7012, -0.9766]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2303, -1.3224, -1.6852, -0.9714]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2102, -1.3037, -1.6428, -0.9546]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2009, -1.2950, -1.6140, -0.9468]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1810, -1.2756, -1.5546, -0.9296]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1532, -1.2479, -1.4885, -0.9052]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1342, -1.2289, -1.4462, -0.8885]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1394, -1.2356, -1.4365, -0.8939]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1491, -1.2468, -1.4281, -0.9033]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1730, -1.2727, -1.4504, -0.9254]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1939, -1.2951, -1.4764, -0.9445]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2198, -1.3218, -1.5170, -0.9677]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2383, -1.3406, -1.5305, -0.9840]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2544, -1.3565, -1.5483, -0.9979]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2648, -1.3667, -1.5589, -1.0069]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2705, -1.3723, -1.5718, -1.0118]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2934, -1.3929, -1.6167, -1.0300]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.735000. Loss: 1.979111. Time: 15.693164
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.720000, Val Loss: 2.296017 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2634, -1.3682, -1.6094, -1.0078]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2242, -1.3336, -1.5850, -0.9770]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1807, -1.2944, -1.5467, -0.9420]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1632, -1.2794, -1.5256, -0.9284]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1523, -1.2700, -1.5286, -0.9199]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1531, -1.2722, -1.5487, -0.9214]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1578, -1.2779, -1.5616, -0.9260]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1500, -1.2702, -1.5577, -0.9194]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1536, -1.2744, -1.5608, -0.9228]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1670, -1.2887, -1.5633, -0.9349]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1787, -1.3010, -1.5646, -0.9453]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1807, -1.3033, -1.5731, -0.9472]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1711, -1.2940, -1.5747, -0.9391]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1714, -1.2945, -1.5796, -0.9396]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1738, -1.2972, -1.5784, -0.9418]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1842, -1.3077, -1.5805, -0.9508]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1841, -1.3078, -1.5815, -0.9508]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1910, -1.3149, -1.6005, -0.9569]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1993, -1.3233, -1.6300, -0.9640]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.765000. Loss: 1.665108. Time: 15.834224
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.680000, Val Loss: 2.126563 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2019, -1.3262, -1.6573, -0.9665]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2205, -1.3443, -1.6417, -0.9822]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2271, -1.3510, -1.6234, -0.9879]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2137, -1.3388, -1.5911, -0.9772]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1954, -1.3218, -1.5580, -0.9624]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1834, -1.3107, -1.5349, -0.9527]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1784, -1.3062, -1.5230, -0.9487]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1554, -1.2834, -1.4881, -0.9291]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1298, -1.2573, -1.4633, -0.9067]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1196, -1.2476, -1.4630, -0.8982]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1198, -1.2487, -1.4730, -0.8989]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1194, -1.2489, -1.4709, -0.8989]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1210, -1.2510, -1.4709, -0.9006]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1325, -1.2637, -1.4943, -0.9112]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1575, -1.2908, -1.5301, -0.9340]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1703, -1.3048, -1.5492, -0.9458]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2020, -1.3371, -1.5781, -0.9734]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2285, -1.3639, -1.6060, -0.9964]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2358, -1.3720, -1.6324, -1.0033]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.730000. Loss: 1.863559. Time: 15.808961
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.670000, Val Loss: 2.933207 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2195, -1.3587, -1.6374, -0.9916]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2081, -1.3486, -1.6254, -0.9828]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1942, -1.3360, -1.6026, -0.9719]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1996, -1.3417, -1.5926, -0.9767]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2006, -1.3429, -1.5809, -0.9777]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2033, -1.3457, -1.5729, -0.9801]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2044, -1.3469, -1.5696, -0.9811]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2007, -1.3435, -1.5667, -0.9781]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1900, -1.3334, -1.5644, -0.9695]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1869, -1.3306, -1.5624, -0.9671]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1792, -1.3232, -1.5591, -0.9607]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1675, -1.3119, -1.5551, -0.9510]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1625, -1.3070, -1.5553, -0.9468]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1674, -1.3122, -1.5684, -0.9512]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1576, -1.3026, -1.5668, -0.9429]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1690, -1.3143, -1.5887, -0.9529]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1855, -1.3312, -1.6209, -0.9673]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1772, -1.3237, -1.6145, -0.9607]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1586, -1.3058, -1.5825, -0.9452]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.790000. Loss: 1.316230. Time: 16.052352
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.750000, Val Loss: 1.656323 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1816, -1.3304, -1.5670, -0.9661]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2084, -1.3573, -1.5759, -0.9892]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2242, -1.3734, -1.5674, -1.0030]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2265, -1.3764, -1.5442, -1.0056]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2286, -1.3789, -1.5306, -1.0077]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2231, -1.3743, -1.5129, -1.0036]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2101, -1.3626, -1.4852, -0.9935]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2010, -1.3546, -1.4622, -0.9865]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1945, -1.3488, -1.4481, -0.9815]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1760, -1.3313, -1.4421, -0.9664]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1644, -1.3206, -1.4548, -0.9571]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1597, -1.3164, -1.4655, -0.9535]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1567, -1.3137, -1.4848, -0.9511]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1493, -1.3064, -1.5145, -0.9449]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1489, -1.3062, -1.5511, -0.9446]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1484, -1.3058, -1.5814, -0.9443]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1448, -1.3022, -1.6008, -0.9413]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1468, -1.3043, -1.6243, -0.9430]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1544, -1.3121, -1.6607, -0.9496]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.795000. Loss: 1.094846. Time: 15.955002
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.720000, Val Loss: 1.903576 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1716, -1.3297, -1.6710, -0.9646]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1794, -1.3378, -1.6433, -0.9714]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1918, -1.3501, -1.6330, -0.9820]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1936, -1.3522, -1.6230, -0.9837]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1771, -1.3367, -1.5887, -0.9703]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1551, -1.3157, -1.5556, -0.9522]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1366, -1.2978, -1.5336, -0.9369]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1263, -1.2879, -1.5241, -0.9283]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1192, -1.2810, -1.5278, -0.9225]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1146, -1.2765, -1.5258, -0.9186]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1134, -1.2754, -1.5185, -0.9176]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1242, -1.2873, -1.5514, -0.9275]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1441, -1.3084, -1.5965, -0.9452]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1580, -1.3231, -1.6283, -0.9575]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1697, -1.3354, -1.6437, -0.9679]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1774, -1.3434, -1.6491, -0.9746]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1765, -1.3429, -1.6402, -0.9742]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1739, -1.3407, -1.6245, -0.9722]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1640, -1.3313, -1.5979, -0.9642]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.735000. Loss: 2.130627. Time: 16.011956
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.670000, Val Loss: 2.572947 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1572, -1.3250, -1.5572, -0.9588]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1652, -1.3330, -1.5482, -0.9656]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1700, -1.3380, -1.5525, -0.9698]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1663, -1.3346, -1.5580, -0.9668]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1658, -1.3342, -1.5599, -0.9665]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1697, -1.3380, -1.5552, -0.9697]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1781, -1.3463, -1.5494, -0.9768]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1652, -1.3339, -1.5437, -0.9662]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1496, -1.3188, -1.5420, -0.9533]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1537, -1.3233, -1.5394, -0.9570]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1514, -1.3213, -1.5431, -0.9552]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1478, -1.3178, -1.5530, -0.9522]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1477, -1.3179, -1.5632, -0.9523]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1542, -1.3247, -1.5704, -0.9581]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1531, -1.3237, -1.5758, -0.9572]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1461, -1.3169, -1.5871, -0.9514]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1402, -1.3110, -1.5981, -0.9463]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1396, -1.3105, -1.6053, -0.9459]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1490, -1.3203, -1.6099, -0.9542]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.800000. Loss: 1.640022. Time: 16.162022
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.740000, Val Loss: 1.511807 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1633, -1.3348, -1.6237, -0.9665]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1735, -1.3450, -1.5966, -0.9752]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1777, -1.3493, -1.5816, -0.9789]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1820, -1.3536, -1.5661, -0.9826]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1884, -1.3598, -1.5440, -0.9879]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1761, -1.3483, -1.5195, -0.9779]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1588, -1.3320, -1.5026, -0.9638]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1633, -1.3369, -1.4846, -0.9679]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1794, -1.3530, -1.4786, -0.9817]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1900, -1.3637, -1.4872, -0.9909]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1873, -1.3615, -1.5040, -0.9890]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1896, -1.3640, -1.5154, -0.9911]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1840, -1.3589, -1.5373, -0.9867]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1742, -1.3498, -1.5621, -0.9789]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1554, -1.3319, -1.5890, -0.9634]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1404, -1.3175, -1.5992, -0.9511]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1256, -1.3029, -1.5965, -0.9386]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1095, -1.2866, -1.6023, -0.9247]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0976, -1.2745, -1.5971, -0.9144]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.755000. Loss: 1.517688. Time: 15.621285
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.710000, Val Loss: 2.190433 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0940, -1.2715, -1.5869, -0.9117]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1065, -1.2853, -1.5889, -0.9232]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1209, -1.3009, -1.5897, -0.9362]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1309, -1.3119, -1.5930, -0.9453]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1390, -1.3205, -1.6131, -0.9525]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1416, -1.3234, -1.6296, -0.9549]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1507, -1.3327, -1.6283, -0.9627]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1768, -1.3588, -1.6040, -0.9848]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1857, -1.3682, -1.5865, -0.9928]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1852, -1.3684, -1.5738, -0.9929]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1955, -1.3784, -1.5583, -1.0014]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1972, -1.3803, -1.5484, -1.0030]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1894, -1.3734, -1.5494, -0.9971]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1785, -1.3634, -1.5580, -0.9885]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1734, -1.3587, -1.5646, -0.9846]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1707, -1.3563, -1.5628, -0.9825]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1676, -1.3534, -1.5561, -0.9801]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1481, -1.3347, -1.5522, -0.9641]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1155, -1.3027, -1.5446, -0.9369]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.800000. Loss: 1.594252. Time: 15.745959
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.710000, Val Loss: 2.359262 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0938, -1.2826, -1.5406, -0.9196]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1003, -1.2904, -1.5427, -0.9259]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1142, -1.3057, -1.5465, -0.9385]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1285, -1.3211, -1.5485, -0.9513]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1429, -1.3363, -1.5457, -0.9639]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1602, -1.3541, -1.5441, -0.9788]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1742, -1.3683, -1.5446, -0.9907]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1902, -1.3840, -1.5460, -1.0039]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2064, -1.3995, -1.5385, -1.0170]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1945, -1.3894, -1.5370, -1.0085]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1841, -1.3803, -1.5360, -1.0008]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1752, -1.3724, -1.5339, -0.9941]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1663, -1.3644, -1.5298, -0.9873]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1665, -1.3648, -1.5269, -0.9877]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1641, -1.3626, -1.5194, -0.9858]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1490, -1.3483, -1.5085, -0.9738]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1349, -1.3348, -1.5042, -0.9624]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1355, -1.3357, -1.5013, -0.9632]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1410, -1.3415, -1.5064, -0.9680]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.775000. Loss: 1.368277. Time: 15.816968
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.780000, Val Loss: 1.056732 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1597, -1.3603, -1.5148, -0.9837]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1717, -1.3721, -1.5329, -0.9936]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1885, -1.3883, -1.5529, -1.0072]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1932, -1.3931, -1.5728, -1.0112]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1830, -1.3841, -1.5953, -1.0036]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1720, -1.3742, -1.6088, -0.9953]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1546, -1.3580, -1.6000, -0.9817]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1522, -1.3562, -1.5908, -0.9802]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1548, -1.3591, -1.5774, -0.9825]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1520, -1.3565, -1.5687, -0.9804]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1471, -1.3519, -1.5681, -0.9765]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1487, -1.3537, -1.5767, -0.9780]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1556, -1.3605, -1.5741, -0.9837]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1604, -1.3651, -1.5717, -0.9875]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1591, -1.3640, -1.5672, -0.9866]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1601, -1.3650, -1.5658, -0.9875]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1648, -1.3696, -1.5621, -0.9913]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1699, -1.3745, -1.5601, -0.9954]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1693, -1.3741, -1.5622, -0.9951]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.795000. Loss: 1.472219. Time: 15.817026
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.810000, Val Loss: 1.574019 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1619, -1.3672, -1.5624, -0.9892]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1552, -1.3608, -1.5681, -0.9839]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1492, -1.3550, -1.5718, -0.9790]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1405, -1.3466, -1.5598, -0.9720]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1326, -1.3389, -1.5350, -0.9655]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1154, -1.3218, -1.5067, -0.9512]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1049, -1.3114, -1.4933, -0.9425]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0970, -1.3034, -1.4881, -0.9358]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0909, -1.2973, -1.4974, -0.9307]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0917, -1.2983, -1.5014, -0.9315]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0852, -1.2915, -1.5013, -0.9259]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0797, -1.2858, -1.5036, -0.9211]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0773, -1.2835, -1.5124, -0.9192]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0880, -1.2952, -1.5270, -0.9288]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1329, -1.3429, -1.5568, -0.9685]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1738, -1.3860, -1.5792, -1.0044]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1912, -1.4054, -1.5882, -1.0206]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2066, -1.4213, -1.6036, -1.0338]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2217, -1.4362, -1.6401, -1.0462]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.800000. Loss: 1.498383. Time: 15.742430
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.830000, Val Loss: 1.317116 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2092, -1.4273, -1.7025, -1.0390]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1619, -1.3873, -1.6952, -1.0061]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1355, -1.3650, -1.6933, -0.9877]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1190, -1.3510, -1.6922, -0.9762]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1152, -1.3487, -1.6763, -0.9742]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1161, -1.3504, -1.6537, -0.9756]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1100, -1.3449, -1.6330, -0.9710]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0771, -1.3120, -1.5839, -0.9443]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0526, -1.2874, -1.5407, -0.9243]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0491, -1.2849, -1.5251, -0.9220]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0371, -1.2725, -1.5184, -0.9120]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0337, -1.2693, -1.5056, -0.9094]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0330, -1.2691, -1.4997, -0.9091]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0465, -1.2846, -1.5125, -0.9213]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0603, -1.3002, -1.5185, -0.9337]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0853, -1.3275, -1.5236, -0.9555]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1114, -1.3553, -1.5224, -0.9778]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1263, -1.3714, -1.5214, -0.9908]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1255, -1.3716, -1.5172, -0.9909]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.840000. Loss: 1.057116. Time: 15.866726
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.770000, Val Loss: 2.010165 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1182, -1.3655, -1.4955, -0.9860]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1103, -1.3581, -1.4904, -0.9801]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1208, -1.3689, -1.5016, -0.9887]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1523, -1.4001, -1.5365, -1.0140]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1605, -1.4091, -1.5536, -1.0214]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1443, -1.3951, -1.5471, -1.0102]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1183, -1.3717, -1.5351, -0.9914]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0962, -1.3514, -1.5274, -0.9751]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0842, -1.3404, -1.5236, -0.9663]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0939, -1.3511, -1.5399, -0.9747]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1103, -1.3682, -1.5706, -0.9884]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1344, -1.3923, -1.5900, -1.0077]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1632, -1.4203, -1.5986, -1.0300]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1760, -1.4331, -1.6129, -1.0403]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1678, -1.4267, -1.6200, -1.0354]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1592, -1.4195, -1.6245, -1.0299]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1464, -1.4084, -1.6282, -1.0212]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1394, -1.4024, -1.6249, -1.0165]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1309, -1.3948, -1.6247, -1.0105]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.785000. Loss: 1.709154. Time: 15.795475
Validate after epoch 38 with seed 297566
Val Accuracy: 0.740000, Val Loss: 2.113353 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0950, -1.3612, -1.5856, -0.9840]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0711, -1.3384, -1.5620, -0.9659]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0740, -1.3426, -1.5526, -0.9692]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0781, -1.3475, -1.5419, -0.9730]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0814, -1.3513, -1.5396, -0.9760]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0848, -1.3550, -1.5477, -0.9790]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0891, -1.3595, -1.5581, -0.9825]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0943, -1.3648, -1.5754, -0.9867]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0979, -1.3684, -1.5859, -0.9895]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0874, -1.3582, -1.5801, -0.9815]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0797, -1.3507, -1.5708, -0.9756]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0820, -1.3533, -1.5769, -0.9776]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0953, -1.3666, -1.5848, -0.9881]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1050, -1.3765, -1.5934, -0.9959]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1079, -1.3795, -1.5936, -0.9983]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1010, -1.3731, -1.5855, -0.9932]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1023, -1.3745, -1.5920, -0.9943]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1121, -1.3841, -1.6044, -1.0019]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1252, -1.3968, -1.6309, -1.0119]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.740000. Loss: 1.750507. Time: 15.940088
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.750000, Val Loss: 1.899549 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1500, -1.4203, -1.6535, -1.0305]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1451, -1.4162, -1.6147, -1.0273]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1420, -1.4136, -1.5669, -1.0253]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1421, -1.4139, -1.5309, -1.0256]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1453, -1.4170, -1.5080, -1.0280]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1461, -1.4178, -1.4898, -1.0286]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1457, -1.4174, -1.4719, -1.0284]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1438, -1.4158, -1.4658, -1.0271]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1385, -1.4109, -1.4688, -1.0233]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1317, -1.4047, -1.4680, -1.0184]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1227, -1.3964, -1.4611, -1.0119]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1165, -1.3908, -1.4824, -1.0075]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1090, -1.3837, -1.5097, -1.0019]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1024, -1.3776, -1.5285, -0.9971]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1054, -1.3806, -1.5521, -0.9995]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1099, -1.3850, -1.5589, -1.0030]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1209, -1.3956, -1.5825, -1.0113]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1145, -1.3898, -1.5656, -1.0068]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1182, -1.3934, -1.5747, -1.0096]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.795000. Loss: 1.385774. Time: 15.699799
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.780000, Val Loss: 2.009640 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1196, -1.3949, -1.6082, -1.0108]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1169, -1.3924, -1.6043, -1.0088]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1088, -1.3847, -1.5860, -1.0028]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1036, -1.3798, -1.5704, -0.9989]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1005, -1.3769, -1.5567, -0.9966]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0932, -1.3699, -1.5439, -0.9911]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0877, -1.3645, -1.5392, -0.9868]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0842, -1.3612, -1.5378, -0.9842]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0817, -1.3588, -1.5368, -0.9823]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0864, -1.3634, -1.5439, -0.9859]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1004, -1.3774, -1.5521, -0.9970]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1195, -1.3961, -1.5669, -1.0119]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1384, -1.4144, -1.5849, -1.0264]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1521, -1.4275, -1.5905, -1.0368]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1607, -1.4358, -1.5692, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1526, -1.4290, -1.5583, -1.0381]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1506, -1.4275, -1.5475, -1.0370]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1401, -1.4183, -1.5353, -1.0298]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1283, -1.4078, -1.5266, -1.0216]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.830000. Loss: 1.268895. Time: 16.225806
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.750000, Val Loss: 1.665282 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1096, -1.3907, -1.5367, -1.0083]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0938, -1.3759, -1.5480, -0.9967]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0762, -1.3591, -1.5583, -0.9835]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0652, -1.3485, -1.5823, -0.9752]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0638, -1.3476, -1.6063, -0.9744]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0614, -1.3453, -1.6118, -0.9726]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0683, -1.3526, -1.6102, -0.9783]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0894, -1.3740, -1.6056, -0.9952]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1109, -1.3954, -1.6087, -1.0121]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1361, -1.4200, -1.6095, -1.0314]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1432, -1.4275, -1.6065, -1.0374]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1528, -1.4368, -1.5941, -1.0447]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1613, -1.4450, -1.5804, -1.0511]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1451, -1.4311, -1.5663, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1368, -1.4242, -1.5489, -1.0353]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1263, -1.4150, -1.5317, -1.0283]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1158, -1.4057, -1.5207, -1.0211]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1115, -1.4019, -1.5158, -1.0182]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1059, -1.3968, -1.5221, -1.0143]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.770000. Loss: 1.579580. Time: 16.119839
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.760000, Val Loss: 1.624995 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0965, -1.3882, -1.5417, -1.0076]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1034, -1.3949, -1.5495, -1.0128]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1070, -1.3984, -1.5615, -1.0155]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1057, -1.3972, -1.5958, -1.0147]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1032, -1.3949, -1.6158, -1.0129]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0951, -1.3872, -1.6357, -1.0069]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0942, -1.3865, -1.6528, -1.0063]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1042, -1.3962, -1.6562, -1.0139]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1130, -1.4047, -1.6563, -1.0206]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1205, -1.4119, -1.6519, -1.0262]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1240, -1.4153, -1.6461, -1.0289]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1237, -1.4151, -1.6382, -1.0287]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1209, -1.4126, -1.6267, -1.0268]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1206, -1.4123, -1.6169, -1.0266]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1194, -1.4113, -1.6034, -1.0258]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1024, -1.3956, -1.5714, -1.0136]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0900, -1.3841, -1.5457, -1.0047]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0851, -1.3797, -1.5331, -1.0012]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0808, -1.3757, -1.5306, -0.9981]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.825000. Loss: 1.528250. Time: 15.747131
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.730000, Val Loss: 1.959989 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0665, -1.3619, -1.5361, -0.9873]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0618, -1.3573, -1.5425, -0.9837]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0580, -1.3536, -1.5596, -0.9808]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0539, -1.3495, -1.5762, -0.9776]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0611, -1.3570, -1.5857, -0.9834]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0707, -1.3668, -1.5915, -0.9912]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0887, -1.3847, -1.5952, -1.0053]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1020, -1.3984, -1.5967, -1.0161]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1179, -1.4140, -1.5947, -1.0285]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1440, -1.4389, -1.5843, -1.0481]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1620, -1.4558, -1.5657, -1.0614]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1755, -1.4684, -1.5456, -1.0713]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1791, -1.4721, -1.5385, -1.0743]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1565, -1.4534, -1.5296, -1.0604]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1363, -1.4365, -1.5210, -1.0478]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1233, -1.4256, -1.5159, -1.0396]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1201, -1.4233, -1.5202, -1.0380]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1129, -1.4170, -1.5289, -1.0332]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0970, -1.4026, -1.5362, -1.0222]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.740000. Loss: 1.960874. Time: 15.929673
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.800000, Val Loss: 1.413706 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1048, -1.4106, -1.5294, -1.0284]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1120, -1.4175, -1.5171, -1.0338]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1052, -1.4114, -1.5157, -1.0292]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1114, -1.4174, -1.5246, -1.0338]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1142, -1.4201, -1.5302, -1.0359]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1163, -1.4221, -1.5283, -1.0375]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1173, -1.4231, -1.5178, -1.0383]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1100, -1.4165, -1.5106, -1.0333]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1031, -1.4103, -1.5123, -1.0284]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1061, -1.4132, -1.5331, -1.0308]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1081, -1.4151, -1.5531, -1.0323]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1031, -1.4106, -1.5721, -1.0288]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0866, -1.3952, -1.5978, -1.0168]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0923, -1.4011, -1.6018, -1.0215]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1139, -1.4219, -1.5972, -1.0378]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1308, -1.4380, -1.5822, -1.0505]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1168, -1.4262, -1.5851, -1.0416]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1062, -1.4170, -1.5972, -1.0346]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0893, -1.4018, -1.5985, -1.0229]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.765000. Loss: 1.804529. Time: 15.766434
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.750000, Val Loss: 2.133298 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0747, -1.3888, -1.5883, -1.0128]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0502, -1.3652, -1.5913, -0.9943]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0419, -1.3578, -1.5974, -0.9885]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0500, -1.3667, -1.6029, -0.9956]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0649, -1.3821, -1.5981, -1.0078]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0760, -1.3935, -1.5751, -1.0168]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0850, -1.4026, -1.5703, -1.0240]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1056, -1.4225, -1.5700, -1.0396]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1323, -1.4480, -1.5521, -1.0596]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1342, -1.4508, -1.5383, -1.0621]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1339, -1.4513, -1.5296, -1.0628]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1370, -1.4546, -1.5222, -1.0654]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1402, -1.4576, -1.5173, -1.0679]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1510, -1.4673, -1.5125, -1.0752]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1508, -1.4673, -1.5093, -1.0754]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1410, -1.4591, -1.5191, -1.0693]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1394, -1.4579, -1.5174, -1.0685]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1386, -1.4573, -1.5069, -1.0681]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1198, -1.4409, -1.5107, -1.0556]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.770000. Loss: 1.724669. Time: 15.864589
Validate after epoch 46 with seed 91566
Val Accuracy: 0.830000, Val Loss: 1.592046 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1016, -1.4253, -1.5129, -1.0439]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1003, -1.4244, -1.5329, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0773, -1.4034, -1.5640, -1.0270]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0601, -1.3875, -1.5937, -1.0147]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0469, -1.3751, -1.6255, -1.0050]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0287, -1.3573, -1.6575, -0.9909]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0038, -1.3245, -1.7026, -0.9648]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-2.1599e-04, -1.3304e+00, -1.6889e+00, -9.6952e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0199, -1.3526, -1.6724, -0.9872]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0312, -1.3655, -1.6603, -0.9975]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0274, -1.3625, -1.6541, -0.9952]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0352, -1.3710, -1.6345, -1.0020]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0505, -1.3868, -1.6085, -1.0145]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0673, -1.4039, -1.5849, -1.0281]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0774, -1.4142, -1.5706, -1.0363]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0837, -1.4206, -1.5615, -1.0413]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0934, -1.4298, -1.5532, -1.0485]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1040, -1.4399, -1.5442, -1.0563]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1028, -1.4391, -1.5438, -1.0558]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.825000. Loss: 1.603279. Time: 16.027617
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.840000, Val Loss: 1.365192 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0961, -1.4333, -1.5480, -1.0515]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1007, -1.4376, -1.5383, -1.0548]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1139, -1.4496, -1.5318, -1.0641]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1238, -1.4590, -1.5296, -1.0715]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1382, -1.4720, -1.5127, -1.0816]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1277, -1.4634, -1.5184, -1.0753]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1210, -1.4578, -1.5240, -1.0712]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1219, -1.4589, -1.5275, -1.0721]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1210, -1.4583, -1.5340, -1.0718]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1158, -1.4538, -1.5432, -1.0684]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1264, -1.4634, -1.5361, -1.0758]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1270, -1.4642, -1.5439, -1.0765]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0960, -1.4371, -1.5678, -1.0560]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0757, -1.4193, -1.5917, -1.0425]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0789, -1.4233, -1.5941, -1.0459]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0962, -1.4403, -1.5796, -1.0595]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0966, -1.4414, -1.5748, -1.0607]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0865, -1.4325, -1.5708, -1.0539]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0646, -1.4127, -1.5715, -1.0386]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.770000. Loss: 1.507044. Time: 15.870099
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.710000, Val Loss: 2.574349 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0676, -1.4168, -1.5469, -1.0422]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0749, -1.4242, -1.5351, -1.0482]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0765, -1.4260, -1.5265, -1.0497]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0887, -1.4376, -1.5178, -1.0589]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0916, -1.4406, -1.5170, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0828, -1.4328, -1.5213, -1.0553]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0737, -1.4245, -1.5306, -1.0489]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0693, -1.4206, -1.5405, -1.0460]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0898, -1.4400, -1.5238, -1.0613]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0996, -1.4497, -1.5063, -1.0690]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0937, -1.4449, -1.5149, -1.0656]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0698, -1.4236, -1.5489, -1.0493]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0572, -1.4124, -1.5751, -1.0408]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0612, -1.4169, -1.5775, -1.0445]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0554, -1.4117, -1.5858, -1.0406]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0440, -1.4011, -1.6071, -1.0322]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0300, -1.3877, -1.6286, -1.0216]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0201, -1.3782, -1.6477, -1.0140]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0155, -1.3738, -1.6528, -1.0105]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.795000. Loss: 1.686305. Time: 16.044829
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.730000, Val Loss: 2.377005 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0488, -1.4080, -1.6184, -1.0382]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0803, -1.4390, -1.5855, -1.0630]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1170, -1.4742, -1.5509, -1.0910]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1464, -1.5016, -1.5202, -1.1124]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1593, -1.5142, -1.5168, -1.1226]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1600, -1.5161, -1.5169, -1.1248]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1587, -1.5159, -1.5174, -1.1253]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1383, -1.4999, -1.5320, -1.1148]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1201, -1.4857, -1.5395, -1.1054]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1086, -1.4766, -1.5352, -1.0993]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0971, -1.4672, -1.5180, -1.0928]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0984, -1.4687, -1.4919, -1.0942]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0792, -1.4522, -1.4925, -1.0822]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0513, -1.4279, -1.5037, -1.0641]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0323, -1.4111, -1.5142, -1.0516]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0124, -1.3930, -1.5300, -1.0377]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0022, -1.3838, -1.5428, -1.0308]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0107, -1.3714, -1.5535, -1.0212]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0195, -1.3630, -1.5630, -1.0146]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.785000. Loss: 2.072560. Time: 15.927896
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.750000, Val Loss: 1.959387 
Training Execution time: 23:37:42.00
Conducting Test
Test Accuracy: 0.769000, Test Loss: 1.882083 
