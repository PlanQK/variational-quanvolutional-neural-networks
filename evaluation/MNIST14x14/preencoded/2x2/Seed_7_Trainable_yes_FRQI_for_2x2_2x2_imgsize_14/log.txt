Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 7, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_7_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Loading MNIST dataset from the PyTorch storage
Loading MNIST dataset into memory
Saving data tensors to disk at ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 7, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_7_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1036, -0.8802, -0.2993, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1502, -0.8813, -0.3459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1918, -0.8815, -0.3875, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2262, -0.8820, -0.4218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2600, -0.8832, -0.4555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2844, -0.8858, -0.4799, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3083, -0.8873, -0.5036, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3273, -0.8878, -0.5224, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3441, -0.8870, -0.5390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3536, -0.8867, -0.5482, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3667, -0.8867, -0.5611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3876, -0.8882, -0.5819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4032, -0.8901, -0.5972, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4224, -0.8917, -0.6160, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4445, -0.8941, -0.6378, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4502, -0.8965, -0.6432, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4425, -0.8972, -0.6352, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4303, -0.8973, -0.6225, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4142, -0.8973, -0.6059, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.295000. Loss: 2.370947. Time: 16.724391
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.400000, Val Loss: 1.720631 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4047, -0.8986, -0.5957, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3857, -0.8972, -0.5764, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3700, -0.8962, -0.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3561, -0.8962, -0.5461, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3371, -0.8970, -0.5266, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3195, -0.8967, -0.5084, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3048, -0.8975, -0.4932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2949, -0.8996, -0.4829, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2832, -0.9016, -0.4709, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2840, -0.9037, -0.4713, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2881, -0.9055, -0.4749, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2917, -0.9071, -0.4782, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2913, -0.9084, -0.4774, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2885, -0.9081, -0.4744, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2809, -0.9071, -0.4666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2679, -0.9062, -0.4535, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2572, -0.9049, -0.4424, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2539, -0.9045, -0.4383, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2550, -0.9039, -0.4388, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.570000. Loss: 1.384566. Time: 16.708727
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.530000, Val Loss: 1.211587 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2554, -0.9032, -0.4377, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2571, -0.9019, -0.4387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2500, -0.8995, -0.4312, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2395, -0.8974, -0.4204, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2336, -0.8960, -0.4139, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2344, -0.8958, -0.4139, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2332, -0.8946, -0.4118, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2306, -0.8922, -0.4088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2384, -0.8904, -0.4163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2524, -0.8895, -0.4295, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2650, -0.8889, -0.4415, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2739, -0.8866, -0.4496, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2733, -0.8854, -0.4483, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2700, -0.8854, -0.4443, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2620, -0.8846, -0.4357, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2475, -0.8839, -0.4208, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2373, -0.8842, -0.4103, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2256, -0.8830, -0.3979, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2190, -0.8815, -0.3905, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.610000. Loss: 1.168437. Time: 16.927453
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.710000, Val Loss: 1.005988 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2167, -0.8810, -0.3871, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2203, -0.8803, -0.3901, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2244, -0.8794, -0.3938, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2268, -0.8787, -0.3957, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2493, -0.8804, -0.4177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2635, -0.8815, -0.4316, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2637, -0.8824, -0.4316, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2658, -0.8831, -0.4334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2661, -0.8835, -0.4333, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2645, -0.8839, -0.4312, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2573, -0.8839, -0.4232, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2583, -0.8830, -0.4233, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2670, -0.8825, -0.4315, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2789, -0.8837, -0.4429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2823, -0.8851, -0.4459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2821, -0.8862, -0.4453, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2785, -0.8875, -0.4413, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2724, -0.8884, -0.4345, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2707, -0.8881, -0.4324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.665000. Loss: 0.979234. Time: 16.622842
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.690000, Val Loss: 0.923569 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2604, -0.8857, -0.4217, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2526, -0.8850, -0.4136, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2458, -0.8842, -0.4068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2516, -0.8831, -0.4123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2583, -0.8819, -0.4186, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2693, -0.8799, -0.4294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2750, -0.8783, -0.4346, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2843, -0.8792, -0.4433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2856, -0.8784, -0.4439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2834, -0.8778, -0.4411, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2968, -0.8750, -0.4538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3020, -0.8719, -0.4584, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3125, -0.8683, -0.4685, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3251, -0.8672, -0.4802, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3320, -0.8674, -0.4864, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3412, -0.8660, -0.4951, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3558, -0.8645, -0.5094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3696, -0.8654, -0.5228, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3746, -0.8669, -0.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.670000. Loss: 1.044874. Time: 16.563070
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.690000, Val Loss: 0.915478 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3611, -0.8686, -0.5133, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3514, -0.8679, -0.5026, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3378, -0.8675, -0.4883, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3221, -0.8662, -0.4719, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3068, -0.8638, -0.4557, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2923, -0.8620, -0.4403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2921, -0.8626, -0.4398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3005, -0.8629, -0.4478, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3033, -0.8617, -0.4506, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3191, -0.8610, -0.4660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3438, -0.8606, -0.4902, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3559, -0.8588, -0.5018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3815, -0.8540, -0.5270, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3898, -0.8486, -0.5347, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3882, -0.8461, -0.5329, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3782, -0.8454, -0.5227, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3707, -0.8443, -0.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3611, -0.8429, -0.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3595, -0.8411, -0.5039, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.675000. Loss: 1.009124. Time: 16.696401
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.760000, Val Loss: 0.749176 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3940, -0.8413, -0.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3986, -0.8415, -0.5422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3942, -0.8416, -0.5373, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3857, -0.8409, -0.5283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3834, -0.8391, -0.5254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3823, -0.8400, -0.5240, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3791, -0.8440, -0.5206, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3675, -0.8474, -0.5089, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3689, -0.8484, -0.5098, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3668, -0.8472, -0.5074, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3613, -0.8475, -0.5016, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3493, -0.8480, -0.4894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3359, -0.8461, -0.4758, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3298, -0.8434, -0.4694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3274, -0.8424, -0.4667, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3165, -0.8428, -0.4553, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3073, -0.8441, -0.4461, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3004, -0.8440, -0.4387, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2891, -0.8438, -0.4271, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.715000. Loss: 0.829360. Time: 17.082648
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.740000, Val Loss: 0.668673 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2827, -0.8436, -0.4203, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2907, -0.8431, -0.4285, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2919, -0.8433, -0.4295, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3045, -0.8425, -0.4417, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3157, -0.8415, -0.4527, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3291, -0.8414, -0.4660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3360, -0.8428, -0.4727, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3471, -0.8445, -0.4834, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3639, -0.8443, -0.4998, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3710, -0.8426, -0.5064, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3750, -0.8418, -0.5101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3694, -0.8409, -0.5041, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3563, -0.8419, -0.4906, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3446, -0.8427, -0.4787, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3539, -0.8436, -0.4873, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3707, -0.8437, -0.5038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3782, -0.8430, -0.5110, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3784, -0.8438, -0.5112, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3699, -0.8447, -0.5027, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.715000. Loss: 0.928721. Time: 17.016813
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.710000, Val Loss: 0.930762 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3675, -0.8434, -0.5002, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3618, -0.8414, -0.4938, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3494, -0.8401, -0.4809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3352, -0.8384, -0.4663, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3282, -0.8359, -0.4591, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3185, -0.8343, -0.4492, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3102, -0.8326, -0.4405, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3229, -0.8341, -0.4530, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3405, -0.8373, -0.4706, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3645, -0.8396, -0.4948, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3684, -0.8407, -0.4990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3725, -0.8399, -0.5031, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3765, -0.8376, -0.5068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3715, -0.8356, -0.5007, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3617, -0.8345, -0.4903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3585, -0.8358, -0.4868, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3628, -0.8370, -0.4908, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3596, -0.8373, -0.4872, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3710, -0.8392, -0.4980, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.680000. Loss: 0.836651. Time: 16.782889
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.740000, Val Loss: 0.669900 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4101, -0.8455, -0.5354, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4155, -0.8453, -0.5403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4054, -0.8440, -0.5300, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3955, -0.8438, -0.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3851, -0.8418, -0.5094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3797, -0.8394, -0.5039, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3926, -0.8395, -0.5164, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4003, -0.8394, -0.5234, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3994, -0.8396, -0.5217, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3950, -0.8397, -0.5168, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3908, -0.8393, -0.5121, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4049, -0.8398, -0.5258, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4070, -0.8405, -0.5275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4020, -0.8398, -0.5221, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3914, -0.8379, -0.5108, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3859, -0.8366, -0.5047, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3786, -0.8356, -0.4971, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3818, -0.8341, -0.5000, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3979, -0.8310, -0.5159, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.735000. Loss: 0.787753. Time: 16.851748
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.770000, Val Loss: 0.708827 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4046, -0.8280, -0.5220, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4106, -0.8282, -0.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4263, -0.8290, -0.5425, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4328, -0.8283, -0.5485, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4203, -0.8282, -0.5357, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3969, -0.8265, -0.5120, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3746, -0.8254, -0.4894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3665, -0.8235, -0.4809, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3547, -0.8217, -0.4687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3469, -0.8173, -0.4606, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3446, -0.8151, -0.4580, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3411, -0.8140, -0.4543, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3479, -0.8107, -0.4611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3442, -0.8085, -0.4574, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3566, -0.8073, -0.4697, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3645, -0.8053, -0.4773, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3613, -0.8051, -0.4740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3575, -0.8056, -0.4697, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3559, -0.8067, -0.4681, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.700000. Loss: 0.779021. Time: 16.761961
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.790000, Val Loss: 0.610010 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3414, -0.8037, -0.4538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3295, -0.8020, -0.4417, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3209, -0.8020, -0.4331, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3300, -0.8029, -0.4419, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3346, -0.8047, -0.4462, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3457, -0.8057, -0.4571, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3639, -0.8055, -0.4751, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3809, -0.8054, -0.4919, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4254, -0.8017, -0.5364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4492, -0.7984, -0.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4489, -0.7948, -0.5602, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4439, -0.7926, -0.5555, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4423, -0.7908, -0.5540, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4357, -0.7883, -0.5469, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4178, -0.7853, -0.5288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4115, -0.7820, -0.5223, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3954, -0.7807, -0.5058, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3757, -0.7800, -0.4859, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3629, -0.7792, -0.4725, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.750000. Loss: 0.788848. Time: 16.671798
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.760000, Val Loss: 0.648206 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3875, -0.7795, -0.4965, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3898, -0.7800, -0.4989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3945, -0.7796, -0.5035, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3971, -0.7794, -0.5061, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3975, -0.7776, -0.5065, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4000, -0.7745, -0.5091, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4211, -0.7718, -0.5303, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4290, -0.7688, -0.5383, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4333, -0.7653, -0.5429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4337, -0.7636, -0.5429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4291, -0.7613, -0.5376, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4264, -0.7577, -0.5340, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4309, -0.7531, -0.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4375, -0.7482, -0.5440, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4363, -0.7434, -0.5422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4294, -0.7402, -0.5347, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4161, -0.7381, -0.5209, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4008, -0.7361, -0.5050, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3860, -0.7352, -0.4899, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.750000. Loss: 0.793178. Time: 16.792756
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.840000, Val Loss: 0.528691 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3702, -0.7330, -0.4734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3644, -0.7308, -0.4671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3643, -0.7299, -0.4666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3634, -0.7289, -0.4650, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3721, -0.7249, -0.4735, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3780, -0.7204, -0.4790, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3848, -0.7161, -0.4852, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3982, -0.7139, -0.4984, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4022, -0.7132, -0.5018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4038, -0.7149, -0.5029, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4080, -0.7151, -0.5066, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4081, -0.7170, -0.5064, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4062, -0.7182, -0.5045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4127, -0.7188, -0.5108, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4094, -0.7187, -0.5073, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4118, -0.7182, -0.5094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4140, -0.7160, -0.5113, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4068, -0.7151, -0.5038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3914, -0.7133, -0.4880, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.750000. Loss: 0.708038. Time: 16.720602
Validate after epoch 14 with seed 964979
Val Accuracy: 0.820000, Val Loss: 0.625120 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3618, -0.7086, -0.4572, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3515, -0.7076, -0.4464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3366, -0.7074, -0.4312, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3220, -0.7072, -0.4163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3089, -0.7064, -0.4030, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2995, -0.7059, -0.3934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2916, -0.7049, -0.3853, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2927, -0.7029, -0.3858, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3075, -0.7016, -0.4003, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3247, -0.7018, -0.4174, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3367, -0.7025, -0.4293, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3624, -0.7012, -0.4545, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3728, -0.7011, -0.4645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3824, -0.7047, -0.4737, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3942, -0.7099, -0.4853, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3977, -0.7135, -0.4885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4113, -0.7158, -0.5021, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4215, -0.7169, -0.5121, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4197, -0.7174, -0.5101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.810000. Loss: 0.593665. Time: 16.698502
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.810000, Val Loss: 0.685693 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3982, -0.7158, -0.4885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3964, -0.7151, -0.4865, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3943, -0.7134, -0.4843, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3923, -0.7115, -0.4824, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3887, -0.7105, -0.4785, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3826, -0.7102, -0.4720, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3710, -0.7106, -0.4600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3607, -0.7109, -0.4494, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3566, -0.7107, -0.4449, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3620, -0.7108, -0.4498, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3651, -0.7093, -0.4526, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3702, -0.7073, -0.4574, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3729, -0.7062, -0.4599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3776, -0.7048, -0.4645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3865, -0.7023, -0.4733, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3942, -0.7010, -0.4811, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3918, -0.7005, -0.4787, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3943, -0.6994, -0.4812, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3935, -0.6982, -0.4803, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.825000. Loss: 0.593023. Time: 16.815432
Validate after epoch 16 with seed 840036
Val Accuracy: 0.820000, Val Loss: 0.676638 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3835, -0.6901, -0.4700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3785, -0.6849, -0.4650, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4005, -0.6787, -0.4869, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4220, -0.6766, -0.5082, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4484, -0.6748, -0.5344, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4814, -0.6726, -0.5671, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4997, -0.6714, -0.5851, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5032, -0.6698, -0.5884, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5041, -0.6679, -0.5894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5041, -0.6667, -0.5894, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -0.6646, -0.5878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5130, -0.6618, -0.5979, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4977, -0.6610, -0.5824, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4767, -0.6600, -0.5611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4651, -0.6593, -0.5495, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4702, -0.6626, -0.5547, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4691, -0.6649, -0.5536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4662, -0.6646, -0.5506, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4586, -0.6650, -0.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.755000. Loss: 0.816771. Time: 17.020374
Validate after epoch 17 with seed 180463
Val Accuracy: 0.760000, Val Loss: 0.759063 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4552, -0.6625, -0.5386, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4539, -0.6612, -0.5371, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4496, -0.6579, -0.5326, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4523, -0.6551, -0.5348, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4557, -0.6527, -0.5377, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4549, -0.6521, -0.5365, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4496, -0.6535, -0.5307, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4469, -0.6536, -0.5275, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4482, -0.6502, -0.5287, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4389, -0.6448, -0.5194, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4220, -0.6407, -0.5023, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4132, -0.6399, -0.4934, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4075, -0.6411, -0.4874, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3996, -0.6445, -0.4795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3973, -0.6479, -0.4770, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3895, -0.6492, -0.4690, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3818, -0.6504, -0.4612, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3792, -0.6510, -0.4583, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3987, -0.6517, -0.4776, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.795000. Loss: 0.624135. Time: 16.802499
Validate after epoch 18 with seed 575883
Val Accuracy: 0.660000, Val Loss: 0.997841 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4326, -0.6427, -0.5114, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4398, -0.6395, -0.5185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4536, -0.6358, -0.5321, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4633, -0.6331, -0.5414, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4596, -0.6308, -0.5372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4520, -0.6296, -0.5291, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4415, -0.6302, -0.5181, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4297, -0.6315, -0.5059, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4222, -0.6320, -0.4981, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4118, -0.6324, -0.4874, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4021, -0.6337, -0.4776, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4203, -0.6345, -0.4955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4395, -0.6347, -0.5142, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4611, -0.6324, -0.5355, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4648, -0.6304, -0.5390, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4537, -0.6282, -0.5277, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4456, -0.6264, -0.5194, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4336, -0.6224, -0.5075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4262, -0.6216, -0.5002, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.810000. Loss: 0.577872. Time: 16.770223
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.810000, Val Loss: 0.668004 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4273, -0.6207, -0.5013, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4341, -0.6168, -0.5082, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4306, -0.6144, -0.5047, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4276, -0.6135, -0.5017, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4414, -0.6117, -0.5149, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4514, -0.6093, -0.5245, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4551, -0.6037, -0.5279, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4641, -0.5988, -0.5367, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4648, -0.5954, -0.5374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4558, -0.5946, -0.5281, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4480, -0.5942, -0.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4457, -0.5948, -0.5168, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4475, -0.5932, -0.5182, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4560, -0.5922, -0.5266, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4632, -0.5937, -0.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4536, -0.5947, -0.5241, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4349, -0.5927, -0.5054, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4163, -0.5894, -0.4868, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4021, -0.5879, -0.4726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.775000. Loss: 0.696151. Time: 16.815823
Validate after epoch 20 with seed 822616
Val Accuracy: 0.800000, Val Loss: 0.691329 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3943, -0.5820, -0.4648, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3954, -0.5792, -0.4655, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3942, -0.5767, -0.4642, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3963, -0.5732, -0.4662, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4043, -0.5682, -0.4740, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4218, -0.5619, -0.4913, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4214, -0.5574, -0.4906, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4188, -0.5526, -0.4879, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4354, -0.5490, -0.5045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4564, -0.5450, -0.5253, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4730, -0.5426, -0.5416, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4780, -0.5413, -0.5462, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4756, -0.5401, -0.5433, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4642, -0.5387, -0.5315, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4505, -0.5364, -0.5176, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4506, -0.5344, -0.5174, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4610, -0.5336, -0.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4825, -0.5320, -0.5487, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4858, -0.5301, -0.5519, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.755000. Loss: 0.697657. Time: 16.812050
Validate after epoch 21 with seed 519531
Val Accuracy: 0.860000, Val Loss: 0.449721 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4540, -0.5311, -0.5196, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4399, -0.5308, -0.5055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4321, -0.5295, -0.4976, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4246, -0.5292, -0.4898, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4151, -0.5305, -0.4800, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4129, -0.5288, -0.4776, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4159, -0.5260, -0.4806, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4160, -0.5231, -0.4806, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4211, -0.5226, -0.4856, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4261, -0.5215, -0.4903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4325, -0.5199, -0.4964, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4380, -0.5186, -0.5018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4404, -0.5174, -0.5042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4340, -0.5175, -0.4978, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4305, -0.5165, -0.4941, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4205, -0.5168, -0.4840, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4148, -0.5180, -0.4779, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4160, -0.5186, -0.4790, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4164, -0.5175, -0.4791, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.830000. Loss: 0.527024. Time: 16.920263
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.760000, Val Loss: 0.772768 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4393, -0.5208, -0.5015, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4578, -0.5210, -0.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4775, -0.5202, -0.5395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4801, -0.5203, -0.5418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4810, -0.5192, -0.5426, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4869, -0.5183, -0.5486, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4842, -0.5178, -0.5459, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4810, -0.5181, -0.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4892, -0.5166, -0.5512, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4973, -0.5137, -0.5592, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4885, -0.5112, -0.5504, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4692, -0.5100, -0.5310, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4444, -0.5094, -0.5060, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4245, -0.5093, -0.4858, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4065, -0.5084, -0.4677, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3875, -0.5067, -0.4485, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3719, -0.5064, -0.4329, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3708, -0.5034, -0.4317, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3687, -0.5010, -0.4294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.845000. Loss: 0.564280. Time: 16.676236
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.780000, Val Loss: 0.636496 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3848, -0.4959, -0.4453, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4102, -0.4945, -0.4707, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4332, -0.4922, -0.4939, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4402, -0.4910, -0.5008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4404, -0.4902, -0.5009, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4325, -0.4894, -0.4929, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4257, -0.4887, -0.4860, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4216, -0.4871, -0.4816, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4220, -0.4856, -0.4818, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4152, -0.4856, -0.4749, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4091, -0.4873, -0.4687, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4025, -0.4889, -0.4619, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4018, -0.4905, -0.4612, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4112, -0.4921, -0.4702, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4367, -0.4911, -0.4955, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4574, -0.4894, -0.5161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4699, -0.4880, -0.5287, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4942, -0.4864, -0.5529, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5166, -0.4839, -0.5752, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.800000. Loss: 0.658506. Time: 16.811262
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.740000, Val Loss: 0.739313 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5337, -0.4815, -0.5923, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5437, -0.4836, -0.6022, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5425, -0.4844, -0.6008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5311, -0.4858, -0.5893, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5230, -0.4889, -0.5812, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5081, -0.4900, -0.5664, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4960, -0.4896, -0.5542, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4827, -0.4913, -0.5409, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4853, -0.4899, -0.5434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5134, -0.4889, -0.5715, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5327, -0.4871, -0.5907, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5516, -0.4854, -0.6094, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5585, -0.4848, -0.6161, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5539, -0.4808, -0.6112, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5476, -0.4775, -0.6045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5297, -0.4747, -0.5863, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5027, -0.4743, -0.5592, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4745, -0.4758, -0.5308, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4490, -0.4798, -0.5053, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.780000. Loss: 0.686514. Time: 16.804435
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.810000, Val Loss: 0.605738 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4153, -0.4818, -0.4714, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4065, -0.4819, -0.4623, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4030, -0.4813, -0.4587, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3991, -0.4812, -0.4547, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3910, -0.4815, -0.4464, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3910, -0.4797, -0.4463, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4005, -0.4725, -0.4557, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4031, -0.4689, -0.4582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4064, -0.4685, -0.4614, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4059, -0.4681, -0.4609, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4014, -0.4674, -0.4562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3977, -0.4671, -0.4523, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4011, -0.4671, -0.4556, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4101, -0.4674, -0.4645, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4144, -0.4683, -0.4686, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4139, -0.4701, -0.4680, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4281, -0.4706, -0.4820, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4408, -0.4683, -0.4946, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4528, -0.4666, -0.5065, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.830000. Loss: 0.559082. Time: 16.864442
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.750000, Val Loss: 0.703448 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4809, -0.4656, -0.5341, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -0.4661, -0.5395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4959, -0.4663, -0.5488, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5124, -0.4638, -0.5650, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5240, -0.4605, -0.5764, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5404, -0.4563, -0.5926, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5723, -0.4527, -0.6243, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5781, -0.4494, -0.6298, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5800, -0.4455, -0.6315, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5773, -0.4424, -0.6285, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5528, -0.4390, -0.6038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5312, -0.4381, -0.5820, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5032, -0.4377, -0.5538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4852, -0.4375, -0.5356, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4693, -0.4363, -0.5196, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4594, -0.4343, -0.5095, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4557, -0.4326, -0.5056, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4571, -0.4325, -0.5070, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4487, -0.4334, -0.4984, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.770000. Loss: 0.661968. Time: 16.806934
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.830000, Val Loss: 0.699422 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4315, -0.4344, -0.4811, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4292, -0.4327, -0.4787, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4227, -0.4321, -0.4721, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4146, -0.4318, -0.4638, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4047, -0.4310, -0.4538, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3975, -0.4316, -0.4465, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3915, -0.4325, -0.4403, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3893, -0.4338, -0.4379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4207, -0.4346, -0.4694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4391, -0.4363, -0.4879, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4501, -0.4375, -0.4988, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4562, -0.4376, -0.5046, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4546, -0.4379, -0.5028, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4517, -0.4387, -0.4997, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4647, -0.4393, -0.5127, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4751, -0.4399, -0.5230, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -0.4418, -0.5336, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5022, -0.4417, -0.5497, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5162, -0.4420, -0.5636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.815000. Loss: 0.558159. Time: 16.780227
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.850000, Val Loss: 0.544562 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5002, -0.4429, -0.5474, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4797, -0.4437, -0.5267, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4654, -0.4439, -0.5123, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4552, -0.4446, -0.5018, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4520, -0.4448, -0.4985, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4489, -0.4442, -0.4953, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4566, -0.4434, -0.5029, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4724, -0.4444, -0.5188, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4964, -0.4472, -0.5429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5035, -0.4495, -0.5499, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5085, -0.4500, -0.5548, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5154, -0.4498, -0.5616, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5110, -0.4491, -0.5572, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5052, -0.4467, -0.5513, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4976, -0.4432, -0.5435, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4918, -0.4425, -0.5374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4870, -0.4422, -0.5324, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4772, -0.4406, -0.5224, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4635, -0.4411, -0.5086, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.815000. Loss: 0.564891. Time: 16.811528
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.830000, Val Loss: 0.557152 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4911, -0.4425, -0.5361, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5144, -0.4422, -0.5595, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5442, -0.4406, -0.5893, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5792, -0.4396, -0.6244, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6004, -0.4385, -0.6456, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6003, -0.4388, -0.6454, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5774, -0.4410, -0.6223, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5461, -0.4409, -0.5909, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5075, -0.4413, -0.5521, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4792, -0.4410, -0.5236, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4567, -0.4405, -0.5010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4485, -0.4401, -0.4925, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4537, -0.4377, -0.4977, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4688, -0.4353, -0.5126, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4743, -0.4339, -0.5181, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4786, -0.4329, -0.5224, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4727, -0.4343, -0.5164, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4650, -0.4351, -0.5087, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4550, -0.4348, -0.4987, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.800000. Loss: 0.689787. Time: 16.659692
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.830000, Val Loss: 0.585254 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4378, -0.4351, -0.4815, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4435, -0.4342, -0.4871, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4575, -0.4350, -0.5011, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4705, -0.4360, -0.5140, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4760, -0.4352, -0.5194, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4940, -0.4317, -0.5374, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5128, -0.4307, -0.5562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5264, -0.4288, -0.5698, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5361, -0.4242, -0.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5439, -0.4221, -0.5871, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5459, -0.4207, -0.5891, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5406, -0.4207, -0.5836, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5264, -0.4201, -0.5692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -0.4164, -0.5523, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4870, -0.4136, -0.5294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4651, -0.4117, -0.5074, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4643, -0.4069, -0.5065, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4795, -0.4032, -0.5217, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4890, -0.4002, -0.5311, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.830000. Loss: 0.586391. Time: 16.906482
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.780000, Val Loss: 0.704349 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4912, -0.3968, -0.5332, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4999, -0.3975, -0.5418, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5065, -0.3981, -0.5482, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5022, -0.3981, -0.5438, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5086, -0.3979, -0.5501, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5242, -0.3971, -0.5657, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5261, -0.3950, -0.5675, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5278, -0.3932, -0.5691, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5223, -0.3914, -0.5635, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -0.3900, -0.5504, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -0.3883, -0.5341, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4808, -0.3867, -0.5218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4830, -0.3857, -0.5240, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4805, -0.3855, -0.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4884, -0.3860, -0.5294, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4896, -0.3856, -0.5304, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -0.3852, -0.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4713, -0.3837, -0.5120, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4609, -0.3822, -0.5016, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.800000. Loss: 0.562265. Time: 16.688885
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.740000, Val Loss: 0.871683 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4538, -0.3774, -0.4943, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4586, -0.3749, -0.4989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4593, -0.3739, -0.4995, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4656, -0.3729, -0.5058, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5048, -0.3729, -0.5449, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5288, -0.3730, -0.5689, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -0.3719, -0.5827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5505, -0.3717, -0.5906, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5452, -0.3713, -0.5852, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5317, -0.3698, -0.5716, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5172, -0.3681, -0.5568, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -0.3674, -0.5491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5117, -0.3667, -0.5508, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5210, -0.3633, -0.5600, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5250, -0.3592, -0.5640, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5206, -0.3553, -0.5597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5111, -0.3526, -0.5501, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5146, -0.3522, -0.5536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5199, -0.3513, -0.5588, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.835000. Loss: 0.570588. Time: 16.793973
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.830000, Val Loss: 0.685830 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5336, -0.3493, -0.5723, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5497, -0.3491, -0.5881, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5493, -0.3485, -0.5876, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5319, -0.3482, -0.5700, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5225, -0.3472, -0.5606, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -0.3470, -0.5541, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5086, -0.3463, -0.5466, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4980, -0.3467, -0.5362, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5044, -0.3465, -0.5426, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5041, -0.3452, -0.5422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4950, -0.3443, -0.5330, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4836, -0.3443, -0.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4729, -0.3427, -0.5106, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4721, -0.3402, -0.5097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4687, -0.3384, -0.5061, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4724, -0.3327, -0.5097, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4704, -0.3291, -0.5075, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4638, -0.3262, -0.5008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4565, -0.3232, -0.4932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.795000. Loss: 0.566198. Time: 16.741874
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.870000, Val Loss: 0.491707 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4536, -0.3192, -0.4902, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4693, -0.3158, -0.5057, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4883, -0.3137, -0.5245, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5033, -0.3112, -0.5393, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5177, -0.3091, -0.5536, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5270, -0.3066, -0.5627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5380, -0.3046, -0.5735, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5554, -0.3034, -0.5907, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5535, -0.3030, -0.5888, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5504, -0.3023, -0.5855, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5579, -0.3007, -0.5929, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5655, -0.2985, -0.6005, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5560, -0.2964, -0.5910, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5445, -0.2942, -0.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5226, -0.2918, -0.5574, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5009, -0.2893, -0.5358, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4807, -0.2871, -0.5155, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4641, -0.2860, -0.4989, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4481, -0.2858, -0.4828, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.830000. Loss: 0.543676. Time: 16.715032
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.810000, Val Loss: 0.554979 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4398, -0.2881, -0.4743, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4482, -0.2882, -0.4827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4559, -0.2873, -0.4903, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4626, -0.2861, -0.4968, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4760, -0.2836, -0.5101, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4918, -0.2811, -0.5258, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5058, -0.2791, -0.5398, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5126, -0.2780, -0.5466, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5211, -0.2771, -0.5551, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5184, -0.2767, -0.5523, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5113, -0.2765, -0.5452, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5162, -0.2762, -0.5500, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5299, -0.2749, -0.5636, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5390, -0.2744, -0.5726, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5556, -0.2738, -0.5891, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5706, -0.2720, -0.6039, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5618, -0.2706, -0.5950, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5462, -0.2698, -0.5794, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5634, -0.2717, -0.5966, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.785000. Loss: 0.652511. Time: 16.715839
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.850000, Val Loss: 0.528185 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5902, -0.2766, -0.6233, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5821, -0.2784, -0.6152, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5641, -0.2790, -0.5970, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5391, -0.2787, -0.5719, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5186, -0.2781, -0.5513, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5056, -0.2785, -0.5381, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4964, -0.2774, -0.5288, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4960, -0.2739, -0.5284, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4895, -0.2710, -0.5218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4966, -0.2670, -0.5289, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5006, -0.2642, -0.5329, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5023, -0.2603, -0.5345, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4958, -0.2576, -0.5279, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5018, -0.2566, -0.5338, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5159, -0.2567, -0.5479, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5279, -0.2569, -0.5599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5437, -0.2547, -0.5757, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5437, -0.2532, -0.5757, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5363, -0.2522, -0.5683, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.840000. Loss: 0.491558. Time: 16.780087
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.770000, Val Loss: 0.651398 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5163, -0.2516, -0.5482, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5249, -0.2511, -0.5568, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5243, -0.2507, -0.5562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5198, -0.2500, -0.5518, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5094, -0.2491, -0.5414, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5010, -0.2486, -0.5331, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5107, -0.2491, -0.5427, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5135, -0.2503, -0.5455, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -0.2508, -0.5412, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5037, -0.2503, -0.5356, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5032, -0.2495, -0.5350, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5026, -0.2486, -0.5343, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4965, -0.2483, -0.5283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4930, -0.2486, -0.5247, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5032, -0.2474, -0.5348, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5048, -0.2460, -0.5364, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5094, -0.2447, -0.5409, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5089, -0.2444, -0.5404, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5065, -0.2457, -0.5379, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.845000. Loss: 0.438193. Time: 16.600691
Validate after epoch 38 with seed 297566
Val Accuracy: 0.820000, Val Loss: 0.629133 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4902, -0.2453, -0.5215, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4958, -0.2424, -0.5271, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5115, -0.2387, -0.5427, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5413, -0.2366, -0.5723, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5517, -0.2364, -0.5825, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5545, -0.2379, -0.5852, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -0.2389, -0.5734, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5360, -0.2414, -0.5666, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5223, -0.2423, -0.5528, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5070, -0.2419, -0.5375, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4927, -0.2416, -0.5231, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4804, -0.2419, -0.5107, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4722, -0.2424, -0.5025, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4709, -0.2428, -0.5012, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4709, -0.2429, -0.5011, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4761, -0.2431, -0.5062, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4942, -0.2421, -0.5244, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5033, -0.2417, -0.5334, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5047, -0.2398, -0.5347, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.800000. Loss: 0.574819. Time: 16.542675
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.840000, Val Loss: 0.368208 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5350, -0.2331, -0.5648, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5529, -0.2302, -0.5826, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5687, -0.2302, -0.5983, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5664, -0.2304, -0.5958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5575, -0.2297, -0.5867, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5451, -0.2289, -0.5742, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5290, -0.2270, -0.5580, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5157, -0.2261, -0.5446, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5122, -0.2256, -0.5409, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5070, -0.2253, -0.5356, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -0.2267, -0.5301, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4965, -0.2275, -0.5250, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4902, -0.2269, -0.5185, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4840, -0.2259, -0.5121, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4765, -0.2259, -0.5045, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4750, -0.2248, -0.5030, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4857, -0.2232, -0.5137, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4850, -0.2233, -0.5130, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4835, -0.2243, -0.5115, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.830000. Loss: 0.467757. Time: 16.965995
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.790000, Val Loss: 0.689217 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4759, -0.2206, -0.5038, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4776, -0.2158, -0.5055, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4838, -0.2130, -0.5116, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4956, -0.2107, -0.5233, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5060, -0.2091, -0.5337, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5053, -0.2089, -0.5330, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4978, -0.2088, -0.5254, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -0.2084, -0.5133, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4715, -0.2075, -0.4991, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4867, -0.2067, -0.5143, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5172, -0.2054, -0.5448, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5410, -0.2030, -0.5686, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5671, -0.2020, -0.5947, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5712, -0.2004, -0.5988, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5585, -0.1977, -0.5860, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5419, -0.1961, -0.5694, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5422, -0.1961, -0.5696, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5354, -0.1959, -0.5627, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5277, -0.1955, -0.5549, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.860000. Loss: 0.536765. Time: 16.730688
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.840000, Val Loss: 0.600696 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5207, -0.1965, -0.5478, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5260, -0.1973, -0.5530, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5197, -0.1975, -0.5466, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5171, -0.1982, -0.5439, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5148, -0.1989, -0.5415, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5098, -0.1984, -0.5366, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5016, -0.1963, -0.5283, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4961, -0.1940, -0.5228, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4934, -0.1934, -0.5199, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4954, -0.1943, -0.5218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5068, -0.1943, -0.5333, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5231, -0.1934, -0.5494, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5329, -0.1930, -0.5593, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5522, -0.1928, -0.5785, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5928, -0.1922, -0.6190, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6018, -0.1902, -0.6279, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6047, -0.1895, -0.6307, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5930, -0.1895, -0.6190, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5745, -0.1898, -0.6004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.835000. Loss: 0.549745. Time: 16.838183
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.870000, Val Loss: 0.467477 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5521, -0.1892, -0.5778, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5574, -0.1876, -0.5831, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5581, -0.1861, -0.5838, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5624, -0.1842, -0.5881, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5509, -0.1834, -0.5766, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5539, -0.1820, -0.5795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5540, -0.1804, -0.5795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5564, -0.1798, -0.5819, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5481, -0.1794, -0.5735, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5296, -0.1781, -0.5550, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5180, -0.1763, -0.5434, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5081, -0.1754, -0.5333, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5040, -0.1749, -0.5293, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5067, -0.1742, -0.5318, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5155, -0.1729, -0.5406, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5228, -0.1715, -0.5479, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5237, -0.1699, -0.5489, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5171, -0.1677, -0.5422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5216, -0.1643, -0.5468, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.840000. Loss: 0.513375. Time: 16.761884
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.780000, Val Loss: 0.729638 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5226, -0.1624, -0.5478, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5235, -0.1621, -0.5488, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5330, -0.1597, -0.5584, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5308, -0.1576, -0.5562, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5238, -0.1551, -0.5491, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5171, -0.1532, -0.5422, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5095, -0.1520, -0.5344, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5158, -0.1501, -0.5406, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5323, -0.1486, -0.5571, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5513, -0.1480, -0.5760, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5651, -0.1467, -0.5898, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5846, -0.1466, -0.6092, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5863, -0.1464, -0.6108, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5812, -0.1450, -0.6056, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5660, -0.1437, -0.5902, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5489, -0.1431, -0.5730, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5298, -0.1424, -0.5539, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5110, -0.1413, -0.5350, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4955, -0.1401, -0.5194, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.810000. Loss: 0.606300. Time: 16.694161
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.890000, Val Loss: 0.433181 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4979, -0.1396, -0.5218, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5019, -0.1401, -0.5256, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5039, -0.1398, -0.5276, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5270, -0.1392, -0.5506, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5335, -0.1390, -0.5570, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5348, -0.1381, -0.5582, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5300, -0.1380, -0.5533, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5187, -0.1383, -0.5420, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5138, -0.1380, -0.5372, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5258, -0.1380, -0.5492, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5383, -0.1383, -0.5617, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -0.1384, -0.5660, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5651, -0.1378, -0.5885, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5846, -0.1373, -0.6079, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6050, -0.1366, -0.6282, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6071, -0.1356, -0.6303, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5926, -0.1336, -0.6157, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5740, -0.1327, -0.5972, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5556, -0.1317, -0.5786, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.805000. Loss: 0.640536. Time: 16.701889
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.810000, Val Loss: 0.610297 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5569, -0.1296, -0.5799, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5597, -0.1283, -0.5827, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5634, -0.1263, -0.5864, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5812, -0.1244, -0.6042, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5936, -0.1231, -0.6165, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5920, -0.1222, -0.6148, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5762, -0.1214, -0.5990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5651, -0.1214, -0.5878, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5599, -0.1203, -0.5825, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5537, -0.1194, -0.5762, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5467, -0.1184, -0.5692, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5409, -0.1175, -0.5633, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5428, -0.1169, -0.5653, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5387, -0.1156, -0.5611, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5315, -0.1137, -0.5539, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5177, -0.1120, -0.5400, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5015, -0.1112, -0.5239, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4881, -0.1109, -0.5105, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4778, -0.1101, -0.5001, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.855000. Loss: 0.508027. Time: 16.639875
Validate after epoch 46 with seed 91566
Val Accuracy: 0.820000, Val Loss: 0.516899 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4664, -0.1096, -0.4886, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4723, -0.1102, -0.4944, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4787, -0.1107, -0.5008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5097, -0.1110, -0.5318, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5376, -0.1119, -0.5597, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5568, -0.1127, -0.5789, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5848, -0.1125, -0.6068, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6024, -0.1119, -0.6244, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6049, -0.1121, -0.6268, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5899, -0.1127, -0.6117, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5790, -0.1122, -0.6008, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5728, -0.1106, -0.5945, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5729, -0.1099, -0.5946, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5714, -0.1095, -0.5932, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5615, -0.1091, -0.5832, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5514, -0.1089, -0.5731, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5382, -0.1080, -0.5599, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5240, -0.1075, -0.5456, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5129, -0.1069, -0.5345, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.845000. Loss: 0.536336. Time: 16.326255
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.870000, Val Loss: 0.432426 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4909, -0.1057, -0.5124, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4948, -0.1053, -0.5163, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4962, -0.1048, -0.5177, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4935, -0.1035, -0.5150, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4865, -0.1022, -0.5080, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4789, -0.1025, -0.5004, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4705, -0.1027, -0.4921, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4629, -0.1026, -0.4844, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4665, -0.1023, -0.4880, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4777, -0.1026, -0.4992, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4871, -0.1026, -0.5085, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4874, -0.1029, -0.5087, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4860, -0.1026, -0.5072, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4917, -0.1030, -0.5129, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4948, -0.1035, -0.5159, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5027, -0.1037, -0.5237, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5183, -0.1035, -0.5395, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5234, -0.1040, -0.5447, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5215, -0.1043, -0.5428, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.830000. Loss: 0.463010. Time: 16.880497
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.780000, Val Loss: 0.660380 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5049, -0.1048, -0.5261, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4968, -0.1049, -0.5181, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4875, -0.1051, -0.5088, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4864, -0.1056, -0.5076, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4943, -0.1055, -0.5155, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4959, -0.1046, -0.5171, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4925, -0.1040, -0.5137, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4871, -0.1035, -0.5083, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4778, -0.1033, -0.4990, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4748, -0.1028, -0.4960, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4765, -0.1024, -0.4977, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4808, -0.1017, -0.5020, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4978, -0.1009, -0.5191, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5128, -0.1001, -0.5341, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5192, -0.0994, -0.5405, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5391, -0.0992, -0.5604, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5727, -0.0988, -0.5940, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5922, -0.0986, -0.6135, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5949, -0.0983, -0.6160, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.825000. Loss: 0.506097. Time: 16.814563
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.770000, Val Loss: 0.626068 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5744, -0.0979, -0.5954, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5790, -0.0979, -0.5999, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5800, -0.0977, -0.6010, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5737, -0.0978, -0.5947, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5747, -0.0983, -0.5958, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5697, -0.0984, -0.5908, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5585, -0.0988, -0.5795, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5489, -0.0994, -0.5699, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5476, -0.1002, -0.5686, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5422, -0.1020, -0.5632, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5320, -0.1029, -0.5530, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5220, -0.1035, -0.5429, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5161, -0.1040, -0.5369, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5344, -0.1044, -0.5552, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5822, -0.1038, -0.6031, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6100, -0.1036, -0.6307, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6289, -0.1027, -0.6496, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6199, -0.1023, -0.6404, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5940, -0.1017, -0.6144, -0.6564]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.825000. Loss: 0.639483. Time: 16.760647
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.810000, Val Loss: 0.647802 
Training Execution time: 24:47:57.00
Conducting Test
Test Accuracy: 0.812000, Test Loss: 0.588090 
