Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Loading MNIST dataset from the PyTorch storage
Loading MNIST dataset into memory
Saving data tensors to disk at ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_2x2', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 2, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 4, 'np_seed': 10, 'out_channels': 3, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 1, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_FRQI_for_2x2_2x2_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0941, -0.9031, -0.2910, -0.6584]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0704, -0.8835, -0.2668, -0.6222]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0609, -0.8770, -0.2587, -0.5913]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0582, -0.8754, -0.2551, -0.5703]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0395, -0.8574, -0.2353, -0.5652]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0023, -0.8204, -0.1971, -0.5747]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0226, -0.7948, -0.1698, -0.5850]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0571, -0.7586, -0.1329, -0.6012]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0983, -0.7144, -0.0874, -0.6134]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1262, -0.6832, -0.0566, -0.6349]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1403, -0.6631, -0.0380, -0.6542]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1480, -0.6507, -0.0262, -0.6688]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1560, -0.6386, -0.0130, -0.6885]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1648, -0.6244,  0.0036, -0.7128]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1884, -0.5955,  0.0363, -0.7324]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2088, -0.5696,  0.0659, -0.7552]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2227, -0.5489,  0.0906, -0.7785]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2243, -0.5374,  0.1030, -0.8031]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2186, -0.5350,  0.1025, -0.8399]], dtype=torch.float64,
       requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.505000. Loss: 1.631499. Time: 18.400716
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.730000, Val Loss: 1.000876 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2137, -0.5386,  0.0924, -0.9020]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2142, -0.5315,  0.0983, -0.9216]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2044, -0.5272,  0.0998, -0.9366]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1964, -0.5227,  0.1044, -0.9522]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1953, -0.5159,  0.1129, -0.9659]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2042, -0.5036,  0.1303, -0.9635]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2096, -0.4940,  0.1446, -0.9672]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2067, -0.4882,  0.1542, -0.9776]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2021, -0.4827,  0.1628, -0.9779]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1975, -0.4770,  0.1755, -0.9713]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1946, -0.4722,  0.1893, -0.9573]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1950, -0.4705,  0.1999, -0.9494]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1989, -0.4698,  0.2084, -0.9507]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1989, -0.4685,  0.2156, -0.9586]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1943, -0.4681,  0.2240, -0.9628]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1937, -0.4677,  0.2267, -0.9716]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1880, -0.4688,  0.2334, -0.9726]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1779, -0.4705,  0.2399, -0.9753]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1745, -0.4711,  0.2421, -0.9871]], dtype=torch.float64,
       requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.760000. Loss: 0.854707. Time: 18.942297
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.820000, Val Loss: 0.679052 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1568, -0.4752,  0.2490, -1.0055]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1499, -0.4753,  0.2478, -1.0185]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1412, -0.4758,  0.2503, -1.0298]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1317, -0.4770,  0.2509, -1.0447]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1230, -0.4784,  0.2532, -1.0627]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1137, -0.4789,  0.2622, -1.0699]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1022, -0.4799,  0.2767, -1.0695]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1010, -0.4784,  0.2841, -1.0563]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0994, -0.4764,  0.2864, -1.0549]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0955, -0.4744,  0.2861, -1.0646]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0921, -0.4726,  0.2907, -1.0665]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0846, -0.4730,  0.2995, -1.0617]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0765, -0.4768,  0.3086, -1.0631]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0754, -0.4807,  0.3224, -1.0550]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0738, -0.4838,  0.3347, -1.0507]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0747, -0.4850,  0.3416, -1.0557]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0800, -0.4846,  0.3464, -1.0495]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0853, -0.4847,  0.3513, -1.0430]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0845, -0.4883,  0.3598, -1.0326]], dtype=torch.float64,
       requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.800000. Loss: 0.686132. Time: 18.857526
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.790000, Val Loss: 0.684653 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0552, -0.5198,  0.3994, -0.9919]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0440, -0.5304,  0.4100, -0.9948]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0393, -0.5347,  0.4131, -1.0083]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0399, -0.5370,  0.4213, -1.0087]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0380, -0.5396,  0.4281, -1.0107]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0287, -0.5470,  0.4410, -1.0116]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0170, -0.5572,  0.4574, -1.0136]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0100, -0.5647,  0.4716, -1.0122]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0040, -0.5703,  0.4862, -1.0039]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0025, -0.5746,  0.4981, -0.9968]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0031, -0.5816,  0.5139, -0.9890]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0103, -0.5906,  0.5292, -0.9840]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0213, -0.6016,  0.5444, -0.9809]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0209, -0.6012,  0.5395, -0.9965]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0200, -0.6009,  0.5375, -1.0109]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0204, -0.6024,  0.5385, -1.0232]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0228, -0.6061,  0.5446, -1.0304]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0225, -0.6086,  0.5511, -1.0330]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0160, -0.6082,  0.5538, -1.0320]], dtype=torch.float64,
       requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.825000. Loss: 0.500517. Time: 18.946762
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.770000, Val Loss: 0.643279 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0139, -0.6133,  0.5617, -1.0438]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0118, -0.6142,  0.5645, -1.0512]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0125, -0.6173,  0.5698, -1.0579]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0258e-03, -6.0197e-01,  5.5329e-01, -1.0839e+00]],
       dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0012, -0.5967,  0.5482, -1.0995]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 9.8425e-04, -5.9743e-01,  5.4933e-01, -1.1044e+00]],
       dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0085, -0.6075,  0.5585, -1.0961]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0209, -0.6224,  0.5751, -1.0805]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0372, -0.6336,  0.5881, -1.0678]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0497, -0.6417,  0.5969, -1.0563]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0669, -0.6528,  0.6033, -1.0486]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0869, -0.6670,  0.6158, -1.0433]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0919, -0.6734,  0.6425, -1.0221]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0848, -0.6765,  0.6571, -1.0072]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0838, -0.6825,  0.6720, -1.0003]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0827, -0.6874,  0.6780, -1.0094]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0969, -0.6918,  0.6735, -1.0172]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1156, -0.6994,  0.6733, -1.0177]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1369, -0.7057,  0.6712, -1.0172]], dtype=torch.float64,
       requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.755000. Loss: 0.693835. Time: 19.163533
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.880000, Val Loss: 0.517683 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1644, -0.7175,  0.6864, -1.0181]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1666, -0.7175,  0.7025, -1.0158]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1580, -0.7139,  0.7329, -0.9998]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1564, -0.7118,  0.7643, -0.9844]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1563, -0.7167,  0.7944, -0.9682]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1655, -0.7243,  0.8164, -0.9620]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1747, -0.7383,  0.8404, -0.9491]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1816, -0.7473,  0.8552, -0.9334]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1682, -0.7409,  0.8481, -0.9294]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1688, -0.7383,  0.8448, -0.9209]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1668, -0.7139,  0.8224, -0.9196]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1722, -0.7032,  0.8147, -0.9093]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1848, -0.7016,  0.8178, -0.8845]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1985, -0.7085,  0.8281, -0.8686]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1935, -0.7159,  0.8345, -0.8632]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1837, -0.7264,  0.8450, -0.8586]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1710, -0.7182,  0.8408, -0.8739]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1618, -0.7080,  0.8397, -0.8854]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1521, -0.7071,  0.8428, -0.8928]], dtype=torch.float64,
       requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.805000. Loss: 0.633710. Time: 18.908680
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.790000, Val Loss: 0.475941 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1466, -0.6914,  0.8321, -0.9304]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1448, -0.6790,  0.8243, -0.9493]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1383, -0.6686,  0.8179, -0.9697]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1358, -0.6693,  0.8178, -0.9847]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1691, -0.7107,  0.8401, -0.9534]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2002, -0.7480,  0.8635, -0.9280]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2211, -0.7724,  0.8817, -0.9144]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2276, -0.7887,  0.8966, -0.9113]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2201, -0.8027,  0.9088, -0.9144]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2289, -0.8151,  0.9187, -0.9203]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2482, -0.8258,  0.9288, -0.9263]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2670, -0.8393,  0.9413, -0.9307]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2858, -0.8537,  0.9497, -0.9407]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3164, -0.8746,  0.9357, -0.9669]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3261, -0.8832,  0.9391, -0.9806]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3247, -0.8837,  0.9532, -0.9855]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3145, -0.8800,  0.9750, -0.9860]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3108, -0.8785,  0.9876, -0.9909]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3082, -0.8785,  0.9951, -0.9980]], dtype=torch.float64,
       requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.875000. Loss: 0.415406. Time: 18.906658
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.890000, Val Loss: 0.363980 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3154, -0.8849,  1.0191, -0.9893]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3522, -0.9032,  1.0284, -0.9828]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3628, -0.9137,  1.0383, -0.9798]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3583, -0.9221,  1.0377, -0.9830]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3370, -0.9284,  1.0422, -0.9804]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2908, -0.9145,  1.0588, -0.9656]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2384, -0.8972,  1.0723, -0.9505]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2139, -0.8881,  1.0849, -0.9375]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2095, -0.8892,  1.0968, -0.9318]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2106, -0.8989,  1.1090, -0.9271]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2054, -0.8993,  1.1134, -0.9338]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2058, -0.9054,  1.1186, -0.9390]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2090, -0.9175,  1.1254, -0.9371]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2189, -0.9344,  1.1344, -0.9267]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2433, -0.9429,  1.1391, -0.9258]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2492, -0.9303,  1.1243, -0.9494]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2404, -0.9163,  1.1062, -0.9779]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2288, -0.9042,  1.0914, -1.0034]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2201, -0.8970,  1.0823, -1.0190]], dtype=torch.float64,
       requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.835000. Loss: 0.564281. Time: 18.998463
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.820000, Val Loss: 0.559263 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2455, -0.9273,  1.1001, -0.9964]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2601, -0.9409,  1.1112, -0.9896]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2756, -0.9532,  1.1243, -0.9785]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2866, -0.9628,  1.1283, -0.9804]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2928, -0.9651,  1.1310, -0.9776]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2966, -0.9668,  1.1305, -0.9804]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2950, -0.9657,  1.1212, -0.9966]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3050, -0.9663,  1.1094, -1.0127]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3031, -0.9646,  1.1146, -1.0101]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2920, -0.9641,  1.1255, -1.0030]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2759, -0.9609,  1.1425, -0.9871]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2658, -0.9553,  1.1441, -0.9877]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2646, -0.9507,  1.1437, -0.9892]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2862, -0.9591,  1.1578, -0.9744]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3070, -0.9693,  1.1733, -0.9559]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3170, -0.9753,  1.1837, -0.9448]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3327, -0.9851,  1.1916, -0.9343]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3541, -0.9888,  1.1979, -0.9299]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3724, -0.9868,  1.2097, -0.9160]], dtype=torch.float64,
       requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.835000. Loss: 0.522215. Time: 18.814381
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.860000, Val Loss: 0.429366 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4283, -1.0142,  1.1696, -0.9453]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4818, -1.0512,  1.1329, -0.9728]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4944, -1.0453,  1.1375, -0.9782]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4980, -1.0434,  1.1397, -0.9815]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5009, -1.0230,  1.1578, -0.9671]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5258, -1.0182,  1.1654, -0.9582]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5485, -1.0108,  1.1740, -0.9534]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5499, -0.9933,  1.1883, -0.9512]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5500, -0.9787,  1.2021, -0.9477]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5470, -0.9582,  1.2215, -0.9421]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5585, -0.9373,  1.2467, -0.9328]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5666, -0.9465,  1.2476, -0.9430]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5573, -0.9582,  1.2429, -0.9607]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5503, -0.9663,  1.2388, -0.9791]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5351, -0.9625,  1.2441, -0.9850]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5131, -0.9457,  1.2623, -0.9747]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4942, -0.9226,  1.2875, -0.9505]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4974, -0.9120,  1.3039, -0.9335]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5043, -0.9101,  1.3082, -0.9291]], dtype=torch.float64,
       requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.810000. Loss: 0.529640. Time: 19.054448
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.860000, Val Loss: 0.468834 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4773, -0.9184,  1.2882, -0.9667]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4681, -0.9271,  1.2750, -0.9904]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4482, -0.9322,  1.2790, -0.9846]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4257, -0.9369,  1.2880, -0.9697]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4075, -0.9399,  1.2950, -0.9629]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3969, -0.9410,  1.2993, -0.9619]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3869, -0.9408,  1.2996, -0.9721]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3742, -0.9390,  1.2970, -0.9911]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3601, -0.9401,  1.2955, -1.0077]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3464, -0.9503,  1.2995, -1.0076]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3393, -0.9579,  1.3028, -0.9987]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3404, -0.9610,  1.3044, -0.9886]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3315, -0.9619,  1.3041, -0.9856]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3200, -0.9619,  1.3037, -0.9875]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3120, -0.9636,  1.3038, -0.9879]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3086, -0.9720,  1.3059, -0.9831]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3163, -0.9834,  1.3090, -0.9771]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3483, -0.9965,  1.3138, -0.9636]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3821, -1.0138,  1.3234, -0.9379]], dtype=torch.float64,
       requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.865000. Loss: 0.495695. Time: 18.861674
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.860000, Val Loss: 0.481011 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4255, -1.0339,  1.3410, -0.8919]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4377, -1.0427,  1.3441, -0.8888]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4434, -1.0471,  1.3485, -0.8857]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4414, -1.0553,  1.3435, -0.8956]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4454, -1.0586,  1.3465, -0.8917]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4472, -1.0586,  1.3514, -0.8811]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4390, -1.0520,  1.3604, -0.8615]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4127, -1.0495,  1.3616, -0.8521]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3795, -1.0532,  1.3525, -0.8620]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3556, -1.0571,  1.3472, -0.8710]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3462, -1.0564,  1.3430, -0.8800]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3389, -1.0505,  1.3330, -0.8904]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3481, -1.0412,  1.3222, -0.8985]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3596, -1.0364,  1.3240, -0.8900]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3649, -1.0359,  1.3305, -0.8737]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3724, -1.0390,  1.3392, -0.8433]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3767, -1.0410,  1.3433, -0.8302]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3786, -1.0444,  1.3497, -0.8184]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3798, -1.0461,  1.3537, -0.8141]], dtype=torch.float64,
       requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.800000. Loss: 0.560982. Time: 18.860454
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.830000, Val Loss: 0.490761 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3967, -1.0391,  1.3413, -0.8359]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3921, -1.0368,  1.3401, -0.8451]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3896, -1.0357,  1.3403, -0.8467]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3915, -1.0354,  1.3401, -0.8532]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3966, -1.0368,  1.3366, -0.8638]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4066, -1.0430,  1.3325, -0.8691]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3987, -1.0544,  1.3333, -0.8613]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3832, -1.0592,  1.3400, -0.8474]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3682, -1.0594,  1.3528, -0.8230]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3572, -1.0579,  1.3533, -0.8131]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3548, -1.0560,  1.3512, -0.8187]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3532, -1.0534,  1.3476, -0.8338]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3567, -1.0513,  1.3449, -0.8467]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3699, -1.0481,  1.3408, -0.8520]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3848, -1.0441,  1.3377, -0.8588]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4100, -1.0435,  1.3512, -0.8463]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4257, -1.0445,  1.3595, -0.8434]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4381, -1.0434,  1.3649, -0.8483]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4631, -1.0466,  1.3653, -0.8571]], dtype=torch.float64,
       requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.830000. Loss: 0.523685. Time: 19.052836
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.830000, Val Loss: 0.484069 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5523, -1.0847,  1.3335, -0.8996]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6032, -1.1241,  1.3035, -0.9282]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6483, -1.1211,  1.3027, -0.9422]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6558, -1.1048,  1.3125, -0.9486]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6919, -1.1319,  1.2933, -0.9488]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7096, -1.1458,  1.2819, -0.9479]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7222, -1.1542,  1.2749, -0.9483]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7395, -1.1805,  1.2574, -0.9517]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7227, -1.1471,  1.2820, -0.9466]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6929, -1.0926,  1.3196, -0.9314]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6456, -1.0171,  1.3743, -0.8979]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6110, -0.9759,  1.4034, -0.8796]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5884, -0.9490,  1.4237, -0.8722]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5909, -0.9330,  1.4386, -0.8589]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6049, -0.9261,  1.4462, -0.8542]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6112, -0.9253,  1.4455, -0.8657]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6221, -0.9284,  1.4387, -0.8900]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6325, -0.9292,  1.4354, -0.9069]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6347, -0.9298,  1.4334, -0.9205]], dtype=torch.float64,
       requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.860000. Loss: 0.477182. Time: 18.860322
Validate after epoch 14 with seed 964979
Val Accuracy: 0.840000, Val Loss: 0.489447 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6374, -0.9264,  1.4338, -0.9440]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6222, -0.9210,  1.4398, -0.9419]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5994, -0.9144,  1.4462, -0.9382]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5916, -0.9098,  1.4498, -0.9440]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5889, -0.9068,  1.4525, -0.9487]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5857, -0.9038,  1.4539, -0.9549]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5810, -0.8993,  1.4525, -0.9611]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5759, -0.8953,  1.4517, -0.9585]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5731, -0.8901,  1.4487, -0.9627]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5785, -0.8907,  1.4487, -0.9493]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5770, -0.8913,  1.4502, -0.9377]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5745, -0.8938,  1.4524, -0.9241]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5739, -0.8962,  1.4547, -0.9136]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5867, -0.8970,  1.4564, -0.9118]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5996, -0.9007,  1.4595, -0.8913]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5995, -0.9069,  1.4639, -0.8655]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5911, -0.9138,  1.4713, -0.8328]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5835, -0.9201,  1.4780, -0.8074]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5805, -0.9252,  1.4809, -0.7997]], dtype=torch.float64,
       requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.895000. Loss: 0.430904. Time: 18.662839
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.870000, Val Loss: 0.489699 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5815, -0.9361,  1.4852, -0.8100]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5801, -0.9418,  1.4855, -0.8236]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5688, -0.9453,  1.4855, -0.8363]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5549, -0.9472,  1.4842, -0.8508]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5445, -0.9484,  1.4824, -0.8650]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5514, -0.9488,  1.4810, -0.8769]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5603, -0.9493,  1.4801, -0.8910]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5668, -0.9492,  1.4785, -0.9079]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5702, -0.9504,  1.4770, -0.9211]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5749, -0.9522,  1.4762, -0.9285]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5756, -0.9544,  1.4767, -0.9329]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5784, -0.9562,  1.4773, -0.9355]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5770, -0.9575,  1.4841, -0.9102]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5761, -0.9605,  1.4908, -0.8813]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5696, -0.9623,  1.4951, -0.8620]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5700, -0.9608,  1.4994, -0.8558]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5681, -0.9601,  1.5022, -0.8551]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5570, -0.9595,  1.5051, -0.8489]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5531, -0.9585,  1.5080, -0.8331]], dtype=torch.float64,
       requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.885000. Loss: 0.375739. Time: 19.133973
Validate after epoch 16 with seed 840036
Val Accuracy: 0.820000, Val Loss: 0.521843 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5394, -0.9538,  1.5144, -0.8281]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5297, -0.9458,  1.5173, -0.8405]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5338, -0.9491,  1.5188, -0.8405]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5511, -0.9681,  1.5180, -0.8182]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5568, -0.9775,  1.5171, -0.8083]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5771, -0.9806,  1.5119, -0.8238]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5817, -0.9862,  1.5060, -0.8494]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5825, -0.9913,  1.5004, -0.8714]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5797, -0.9954,  1.4947, -0.8871]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5641, -0.9953,  1.4923, -0.8884]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5394, -0.9964,  1.4926, -0.8807]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5204, -0.9983,  1.4948, -0.8612]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5156, -0.9963,  1.4964, -0.8532]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5198, -0.9943,  1.4976, -0.8469]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5232, -0.9972,  1.5030, -0.8208]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5203, -0.9973,  1.5065, -0.8073]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5167, -0.9969,  1.5083, -0.8024]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5094, -0.9957,  1.5089, -0.8041]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4965, -0.9878,  1.5091, -0.8154]], dtype=torch.float64,
       requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.855000. Loss: 0.539014. Time: 18.894754
Validate after epoch 17 with seed 180463
Val Accuracy: 0.820000, Val Loss: 0.587168 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5093, -0.9879,  1.5127, -0.8094]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5162, -0.9943,  1.5132, -0.8016]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5240, -0.9979,  1.5142, -0.7990]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5256, -0.9996,  1.5140, -0.7943]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5249, -0.9965,  1.5115, -0.8008]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5222, -0.9920,  1.5089, -0.8174]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5073, -0.9894,  1.5096, -0.8201]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5096, -0.9871,  1.5106, -0.8183]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5134, -0.9860,  1.5114, -0.8121]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5176, -0.9830,  1.5128, -0.8143]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5206, -0.9845,  1.5143, -0.8134]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5272, -0.9906,  1.5154, -0.8129]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5427, -0.9959,  1.5161, -0.8209]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5444, -0.9998,  1.5178, -0.8253]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5392, -1.0019,  1.5194, -0.8141]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5431, -1.0020,  1.5176, -0.8100]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5490, -1.0001,  1.5148, -0.8163]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5460, -0.9971,  1.5123, -0.8264]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5481, -0.9943,  1.5093, -0.8421]], dtype=torch.float64,
       requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.875000. Loss: 0.410421. Time: 18.993554
Validate after epoch 18 with seed 575883
Val Accuracy: 0.800000, Val Loss: 0.600712 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5502, -0.9963,  1.5063, -0.8719]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5504, -0.9965,  1.5025, -0.8909]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5580, -0.9943,  1.4986, -0.9015]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5541, -0.9926,  1.4946, -0.9116]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5405, -0.9942,  1.4900, -0.9204]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5284, -0.9966,  1.4820, -0.9355]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5201, -0.9981,  1.4770, -0.9457]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5164, -0.9993,  1.4745, -0.9514]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5035, -1.0012,  1.4729, -0.9588]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4933, -1.0013,  1.4714, -0.9682]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4922, -0.9986,  1.4691, -0.9860]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4924, -0.9949,  1.4684, -1.0044]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5134, -0.9953,  1.4698, -1.0006]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5316, -0.9932,  1.4717, -0.9960]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5450, -0.9912,  1.4780, -0.9841]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5555, -0.9894,  1.4839, -0.9751]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5647, -0.9903,  1.4864, -0.9784]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5603, -0.9919,  1.4878, -0.9856]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5528, -0.9941,  1.4850, -0.9996]], dtype=torch.float64,
       requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.875000. Loss: 0.346673. Time: 18.890207
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.830000, Val Loss: 0.567213 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5370, -0.9898,  1.4896, -0.9913]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5265, -0.9828,  1.4936, -0.9878]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5174, -0.9762,  1.4950, -0.9966]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5057, -0.9745,  1.4958, -0.9966]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4984, -0.9745,  1.4968, -0.9986]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4980, -0.9765,  1.4996, -1.0004]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4943, -0.9790,  1.5011, -1.0014]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4892, -0.9790,  1.5007, -0.9896]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4780, -0.9822,  1.5008, -0.9736]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4795, -0.9887,  1.5007, -0.9552]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4824, -0.9856,  1.5009, -0.9575]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4856, -0.9765,  1.5015, -0.9746]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4889, -0.9560,  1.5047, -1.0050]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4965, -0.9368,  1.5078, -1.0337]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5070, -0.9255,  1.5116, -1.0522]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5181, -0.9258,  1.5130, -1.0590]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5257, -0.9330,  1.5118, -1.0560]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5324, -0.9427,  1.5091, -1.0459]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5324, -0.9505,  1.5069, -1.0314]], dtype=torch.float64,
       requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.840000. Loss: 0.492675. Time: 18.880574
Validate after epoch 20 with seed 822616
Val Accuracy: 0.900000, Val Loss: 0.399691 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5101, -0.9708,  1.5027, -0.9915]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4911, -0.9744,  1.5008, -0.9877]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4802, -0.9808,  1.4987, -0.9821]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4757, -0.9889,  1.4966, -0.9705]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4688, -0.9973,  1.4958, -0.9622]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4625, -1.0012,  1.4973, -0.9621]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4590, -1.0062,  1.4976, -0.9607]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4731, -1.0072,  1.4969, -0.9613]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5100, -1.0152,  1.4963, -0.9311]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5309, -1.0202,  1.4937, -0.9130]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5200, -1.0277,  1.4913, -0.9033]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5131, -1.0325,  1.4896, -0.9014]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5083, -1.0375,  1.4846, -0.9143]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4977, -1.0413,  1.4814, -0.9256]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4935, -1.0418,  1.4800, -0.9317]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4970, -1.0399,  1.4826, -0.9283]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5042, -1.0418,  1.4859, -0.9258]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5275, -1.0449,  1.4833, -0.9280]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5516, -1.0439,  1.4840, -0.9247]], dtype=torch.float64,
       requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.885000. Loss: 0.465205. Time: 19.057166
Validate after epoch 21 with seed 519531
Val Accuracy: 0.880000, Val Loss: 0.365777 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5608, -1.0330,  1.4889, -0.9158]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5639, -1.0366,  1.4869, -0.9163]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5757, -1.0445,  1.4821, -0.9224]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5755, -1.0475,  1.4817, -0.9271]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5660, -1.0460,  1.4845, -0.9301]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5869, -1.0503,  1.4853, -0.9317]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6055, -1.0556,  1.4873, -0.9328]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6294, -1.0642,  1.4867, -0.9398]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6480, -1.0824,  1.4828, -0.9518]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6534, -1.0794,  1.4928, -0.9554]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6509, -1.0680,  1.5052, -0.9563]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6557, -1.0639,  1.5133, -0.9596]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6410, -1.0554,  1.5229, -0.9519]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6289, -1.0439,  1.5343, -0.9460]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6184, -1.0266,  1.5486, -0.9323]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5971, -1.0093,  1.5606, -0.9172]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5761, -1.0004,  1.5665, -0.9124]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5537, -0.9992,  1.5714, -0.9067]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5391, -0.9950,  1.5768, -0.9102]], dtype=torch.float64,
       requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.885000. Loss: 0.364276. Time: 18.902641
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.840000, Val Loss: 0.541401 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5158, -0.9741,  1.5817, -0.9075]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5046, -0.9645,  1.5824, -0.9084]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5003, -0.9679,  1.5738, -0.9028]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4959, -0.9755,  1.5646, -0.8990]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4963, -0.9855,  1.5542, -0.8864]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5092, -1.0002,  1.5420, -0.8641]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5144, -1.0111,  1.5339, -0.8469]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5178, -1.0170,  1.5281, -0.8328]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5264, -1.0136,  1.5234, -0.8293]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5368, -1.0112,  1.5212, -0.8286]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5371, -1.0104,  1.5209, -0.8302]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5379, -1.0104,  1.5206, -0.8317]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5355, -1.0116,  1.5194, -0.8348]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5342, -1.0158,  1.5169, -0.8483]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5404, -1.0192,  1.5167, -0.8713]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5430, -1.0225,  1.5168, -0.8927]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5475, -1.0227,  1.5154, -0.9082]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5721, -1.0165,  1.5195, -0.9039]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5925, -1.0093,  1.5245, -0.8963]], dtype=torch.float64,
       requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.885000. Loss: 0.367286. Time: 18.863211
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.860000, Val Loss: 0.394073 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6292, -1.0002,  1.5323, -0.8932]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6611, -0.9992,  1.5350, -0.9043]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6776, -0.9956,  1.5386, -0.9031]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6891, -0.9961,  1.5401, -0.9064]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6956, -0.9990,  1.5409, -0.9126]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6946, -1.0024,  1.5402, -0.9192]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6942, -1.0038,  1.5402, -0.9242]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6811, -1.0076,  1.5396, -0.9308]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6696, -1.0111,  1.5384, -0.9363]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6612, -1.0034,  1.5412, -0.9320]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6494, -0.9976,  1.5438, -0.9305]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6379, -0.9816,  1.5535, -0.9184]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6278, -0.9653,  1.5630, -0.9011]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6191, -0.9544,  1.5697, -0.8891]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6276, -0.9480,  1.5743, -0.8862]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6292, -0.9399,  1.5749, -0.8945]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6196, -0.9360,  1.5762, -0.9135]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6284, -0.9211,  1.5755, -0.9338]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6632, -0.9116,  1.5704, -0.9378]], dtype=torch.float64,
       requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.875000. Loss: 0.394493. Time: 18.952743
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.890000, Val Loss: 0.450546 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7279, -0.9077,  1.5594, -0.9318]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7638, -0.9081,  1.5493, -0.9316]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7838, -0.8962,  1.5454, -0.9198]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7900, -0.8815,  1.5472, -0.9085]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7838, -0.8736,  1.5482, -0.9061]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7726, -0.8676,  1.5512, -0.9025]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7522, -0.8692,  1.5486, -0.9068]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7273, -0.8751,  1.5445, -0.9149]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7221, -0.8702,  1.5435, -0.9024]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7212, -0.8602,  1.5485, -0.8745]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7150, -0.8542,  1.5528, -0.8585]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7285, -0.8483,  1.5577, -0.8418]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7368, -0.8435,  1.5610, -0.8345]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7736, -0.8433,  1.5604, -0.8381]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7890, -0.8463,  1.5510, -0.8522]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7946, -0.8464,  1.5459, -0.8598]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7934, -0.8456,  1.5441, -0.8653]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7900, -0.8433,  1.5517, -0.8654]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7941, -0.8558,  1.5495, -0.8769]], dtype=torch.float64,
       requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.905000. Loss: 0.373063. Time: 18.951520
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.880000, Val Loss: 0.435100 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7998, -0.8651,  1.5463, -0.8890]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8029, -0.8649,  1.5479, -0.8917]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7818, -0.8562,  1.5535, -0.8857]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7714, -0.8426,  1.5600, -0.8797]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7643, -0.8370,  1.5634, -0.8816]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7602, -0.8321,  1.5627, -0.8867]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7824, -0.8242,  1.5660, -0.8824]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8050, -0.8187,  1.5739, -0.8693]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8196, -0.8196,  1.5767, -0.8672]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8231, -0.8188,  1.5779, -0.8684]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8212, -0.8299,  1.5767, -0.8770]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8236, -0.8402,  1.5736, -0.8831]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8233, -0.8493,  1.5761, -0.8798]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8135, -0.8569,  1.5772, -0.8800]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8011, -0.8693,  1.5753, -0.8909]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7880, -0.8776,  1.5806, -0.8960]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7635, -0.8890,  1.5841, -0.8983]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7541, -0.8923,  1.5869, -0.8928]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7596, -0.8943,  1.5842, -0.8900]], dtype=torch.float64,
       requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.885000. Loss: 0.338136. Time: 18.939109
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.910000, Val Loss: 0.346647 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7454, -0.8872,  1.5838, -0.8801]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7342, -0.8820,  1.5836, -0.8759]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7352, -0.8777,  1.5774, -0.8700]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7389, -0.8749,  1.5722, -0.8693]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7474, -0.8699,  1.5694, -0.8643]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7515, -0.8717,  1.5635, -0.8527]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7391, -0.8776,  1.5565, -0.8392]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7270, -0.8809,  1.5523, -0.8341]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7233, -0.8804,  1.5494, -0.8313]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7201, -0.8763,  1.5451, -0.8286]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7120, -0.8731,  1.5402, -0.8293]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7111, -0.8658,  1.5391, -0.8234]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7004, -0.8567,  1.5301, -0.8321]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6866, -0.8549,  1.5275, -0.8378]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6737, -0.8529,  1.5257, -0.8418]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6728, -0.8544,  1.5214, -0.8333]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6806, -0.8563,  1.5183, -0.8206]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6898, -0.8539,  1.5157, -0.7983]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6937, -0.8538,  1.5166, -0.7855]], dtype=torch.float64,
       requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.885000. Loss: 0.340860. Time: 18.810429
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.910000, Val Loss: 0.420423 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6986, -0.8562,  1.5218, -0.7787]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7019, -0.8630,  1.5189, -0.7981]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7042, -0.8683,  1.5190, -0.8160]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7122, -0.8700,  1.5209, -0.8310]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7152, -0.8720,  1.5208, -0.8466]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7168, -0.8767,  1.5174, -0.8657]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7107, -0.8809,  1.5180, -0.8767]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6957, -0.8798,  1.5234, -0.8771]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6911, -0.8704,  1.5383, -0.8559]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6828, -0.8667,  1.5472, -0.8396]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6755, -0.8655,  1.5517, -0.8331]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6784, -0.8660,  1.5573, -0.8324]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6794, -0.8638,  1.5642, -0.8378]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6845, -0.8399,  1.5708, -0.8726]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6846, -0.8120,  1.5745, -0.9070]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6752, -0.8020,  1.5716, -0.9200]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6690, -0.8028,  1.5632, -0.9179]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6821, -0.8030,  1.5575, -0.9059]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7201, -0.8018,  1.5515, -0.8979]], dtype=torch.float64,
       requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.845000. Loss: 0.423548. Time: 18.943982
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.890000, Val Loss: 0.426336 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7588, -0.8008,  1.5456, -0.8966]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7565, -0.7938,  1.5440, -0.8882]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7505, -0.7866,  1.5417, -0.8829]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7536, -0.7867,  1.5383, -0.8805]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7496, -0.7816,  1.5369, -0.8889]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7405, -0.7782,  1.5368, -0.8963]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7202, -0.7795,  1.5404, -0.8978]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7398, -0.7716,  1.5441, -0.9057]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7478, -0.7630,  1.5463, -0.9176]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7491, -0.7619,  1.5470, -0.9208]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7513, -0.7752,  1.5443, -0.8977]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7543, -0.7849,  1.5391, -0.8745]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7494, -0.7911,  1.5337, -0.8625]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7335, -0.7925,  1.5287, -0.8589]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7195, -0.7839,  1.5220, -0.8838]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7112, -0.7826,  1.5159, -0.8980]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7144, -0.7854,  1.5114, -0.9083]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7209, -0.7813,  1.5112, -0.9224]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7207, -0.7759,  1.5118, -0.9374]], dtype=torch.float64,
       requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.895000. Loss: 0.310618. Time: 18.824218
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.890000, Val Loss: 0.443443 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7737, -0.7765,  1.5121, -0.9182]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8120, -0.7786,  1.5256, -0.8856]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8222, -0.7796,  1.5442, -0.8464]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8250, -0.7776,  1.5524, -0.8159]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8355, -0.7758,  1.5580, -0.8049]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8449, -0.7827,  1.5616, -0.8050]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8544, -0.7873,  1.5661, -0.8019]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8752, -0.7818,  1.5710, -0.7986]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8865, -0.7783,  1.5802, -0.7959]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8777, -0.7717,  1.5924, -0.7848]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8658, -0.7675,  1.6015, -0.7796]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8592, -0.7556,  1.6059, -0.7759]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8454, -0.7441,  1.6097, -0.7767]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8305, -0.7354,  1.6107, -0.7697]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8211, -0.7338,  1.6133, -0.7664]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8153, -0.7342,  1.6076, -0.7561]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8005, -0.7302,  1.6081, -0.7605]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7816, -0.7341,  1.6086, -0.7661]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7771, -0.7348,  1.6095, -0.7764]], dtype=torch.float64,
       requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.840000. Loss: 0.461102. Time: 18.905760
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.860000, Val Loss: 0.439987 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7803, -0.7362,  1.6099, -0.7959]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7659, -0.7056,  1.6412, -0.8181]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7657, -0.6747,  1.6614, -0.8392]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7630, -0.6622,  1.6694, -0.8514]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7580, -0.6676,  1.6655, -0.8562]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7562, -0.6717,  1.6612, -0.8563]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7707, -0.6558,  1.6719, -0.8568]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7854, -0.6369,  1.6835, -0.8598]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7954, -0.6222,  1.6898, -0.8649]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8021, -0.6287,  1.6775, -0.8658]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8055, -0.6373,  1.6660, -0.8667]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8092, -0.6422,  1.6543, -0.8714]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8135, -0.6473,  1.6425, -0.8747]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8190, -0.6479,  1.6404, -0.8755]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8155, -0.6541,  1.6402, -0.8752]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7916, -0.6503,  1.6521, -0.8797]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7682, -0.6284,  1.6741, -0.8891]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7615, -0.6012,  1.7045, -0.9000]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7594, -0.5826,  1.7229, -0.9085]], dtype=torch.float64,
       requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.920000. Loss: 0.287015. Time: 18.850331
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.870000, Val Loss: 0.475619 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7788, -0.6463,  1.6813, -0.8983]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7771, -0.6546,  1.6770, -0.8991]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7736, -0.6760,  1.6600, -0.8908]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7792, -0.7097,  1.6346, -0.8766]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7882, -0.7094,  1.6340, -0.8783]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8012, -0.6941,  1.6435, -0.8841]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8354, -0.7087,  1.6240, -0.8628]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8587, -0.7166,  1.6110, -0.8460]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8581, -0.7242,  1.6056, -0.8254]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8514, -0.7313,  1.6007, -0.8103]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8623, -0.7340,  1.5947, -0.7906]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8757, -0.7379,  1.5906, -0.7689]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8749, -0.7447,  1.5896, -0.7590]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8664, -0.7488,  1.5878, -0.7609]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8524, -0.7473,  1.5850, -0.7673]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8453, -0.7482,  1.5847, -0.7756]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8388, -0.7514,  1.5844, -0.7822]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8356, -0.7576,  1.5844, -0.8009]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8434, -0.7644,  1.5864, -0.8157]], dtype=torch.float64,
       requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.885000. Loss: 0.416425. Time: 18.750896
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.860000, Val Loss: 0.428662 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8535, -0.7785,  1.5820, -0.8575]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8504, -0.7851,  1.5787, -0.8714]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8465, -0.7872,  1.5781, -0.8802]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8469, -0.7822,  1.5818, -0.8785]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8822, -0.7833,  1.5812, -0.8668]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8990, -0.7819,  1.5819, -0.8571]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9182, -0.7861,  1.5758, -0.8575]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9431, -0.7868,  1.5721, -0.8605]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9574, -0.7919,  1.5686, -0.8644]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9761, -0.7966,  1.5631, -0.8744]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9869, -0.7897,  1.5578, -0.8811]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9914, -0.7484,  1.5768, -0.8633]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9940, -0.7124,  1.5942, -0.8481]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9875, -0.7081,  1.6049, -0.8431]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9755, -0.7043,  1.6091, -0.8382]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9607, -0.7054,  1.6057, -0.8424]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9474, -0.7078,  1.6018, -0.8484]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9514, -0.7172,  1.6000, -0.8449]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9384, -0.7209,  1.5983, -0.8387]], dtype=torch.float64,
       requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.880000. Loss: 0.418639. Time: 18.648669
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.880000, Val Loss: 0.564679 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9204, -0.7310,  1.5802, -0.8476]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8914, -0.7330,  1.5674, -0.8478]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8786, -0.7261,  1.5582, -0.8471]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8825, -0.7203,  1.5548, -0.8466]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8717, -0.7139,  1.5615, -0.8170]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8585, -0.7030,  1.5712, -0.7871]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8516, -0.6849,  1.5718, -0.7850]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8549, -0.6712,  1.5722, -0.7803]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8768, -0.6574,  1.5740, -0.7841]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8898, -0.6444,  1.5823, -0.8033]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8919, -0.6324,  1.5886, -0.8215]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8938, -0.6232,  1.5905, -0.8361]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8934, -0.6220,  1.5884, -0.8391]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8972, -0.6255,  1.5911, -0.8409]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8995, -0.6243,  1.5971, -0.8481]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9000, -0.6187,  1.5977, -0.8515]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8998, -0.6114,  1.6003, -0.8584]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8831, -0.6115,  1.5983, -0.8628]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8681, -0.6179,  1.5908, -0.8626]], dtype=torch.float64,
       requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.890000. Loss: 0.326071. Time: 18.780585
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.890000, Val Loss: 0.459427 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8444, -0.6264,  1.5812, -0.8650]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8158, -0.6200,  1.5900, -0.8733]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8065, -0.6131,  1.5972, -0.8821]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8351, -0.6282,  1.5838, -0.8747]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8812, -0.6631,  1.5622, -0.8526]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9162, -0.6924,  1.5457, -0.8374]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9467, -0.7110,  1.5388, -0.8294]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9738, -0.7389,  1.5261, -0.8253]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9994, -0.7602,  1.5131, -0.8261]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0181, -0.7836,  1.4913, -0.8325]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0550, -0.8309,  1.4358, -0.8432]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0768, -0.8568,  1.4118, -0.8531]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0823, -0.8479,  1.4193, -0.8592]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0794, -0.8280,  1.4335, -0.8630]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0685, -0.8064,  1.4509, -0.8661]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0566, -0.7953,  1.4590, -0.8712]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0456, -0.7816,  1.4675, -0.8766]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0279, -0.7599,  1.4848, -0.8750]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0149, -0.7396,  1.5020, -0.8740]], dtype=torch.float64,
       requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.860000. Loss: 0.394996. Time: 18.829488
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.890000, Val Loss: 0.405605 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9407, -0.6607,  1.5635, -0.8419]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9137, -0.6392,  1.5801, -0.8341]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8933, -0.6173,  1.5919, -0.8375]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8748, -0.5918,  1.6042, -0.8538]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8606, -0.5727,  1.6156, -0.8735]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8396, -0.5422,  1.6436, -0.8864]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8267, -0.5174,  1.6645, -0.8992]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8172, -0.5067,  1.6730, -0.9062]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8377, -0.5132,  1.6646, -0.9006]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8537, -0.5338,  1.6445, -0.8886]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8636, -0.5617,  1.6188, -0.8724]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8678, -0.5771,  1.6045, -0.8619]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8795, -0.6018,  1.5868, -0.8512]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8884, -0.6074,  1.5858, -0.8575]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8782, -0.6240,  1.5763, -0.8476]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8610, -0.6440,  1.5635, -0.8333]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8536, -0.6549,  1.5565, -0.8284]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8675, -0.6624,  1.5486, -0.8082]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8837, -0.6633,  1.5425, -0.7850]], dtype=torch.float64,
       requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.875000. Loss: 0.434853. Time: 18.686167
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.890000, Val Loss: 0.355691 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9021, -0.6678,  1.5363, -0.7431]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9117, -0.6732,  1.5351, -0.7259]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9159, -0.6765,  1.5346, -0.7205]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9218, -0.6791,  1.5325, -0.7232]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9286, -0.6816,  1.5262, -0.7218]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9322, -0.6819,  1.5223, -0.7215]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9344, -0.6812,  1.5223, -0.7222]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9261, -0.6810,  1.5278, -0.7233]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9019, -0.6803,  1.5377, -0.7223]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8920, -0.6779,  1.5331, -0.7430]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9025, -0.6714,  1.5211, -0.7717]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9113, -0.6662,  1.5156, -0.7927]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9249, -0.6628,  1.5140, -0.8078]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9186, -0.6674,  1.4954, -0.8307]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9123, -0.6835,  1.4551, -0.8679]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9126, -0.6882,  1.4294, -0.8828]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9356, -0.6983,  1.4079, -0.8897]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9546, -0.7041,  1.3963, -0.8943]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9644, -0.7076,  1.3897, -0.8986]], dtype=torch.float64,
       requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.920000. Loss: 0.346144. Time: 18.793473
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.850000, Val Loss: 0.574041 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9596, -0.6860,  1.4216, -0.8878]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9489, -0.7095,  1.3986, -0.8959]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9383, -0.7169,  1.3980, -0.8955]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9342, -0.7059,  1.4186, -0.8903]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9338, -0.7134,  1.4089, -0.8996]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9320, -0.7182,  1.4011, -0.9037]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9239, -0.7126,  1.4077, -0.8955]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9181, -0.6967,  1.4269, -0.8846]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9110, -0.6861,  1.4406, -0.8774]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9058, -0.6857,  1.4411, -0.8800]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9036, -0.7143,  1.4006, -0.9081]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8942, -0.7259,  1.3856, -0.9209]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8808, -0.7233,  1.3918, -0.9176]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8717, -0.7212,  1.3959, -0.9163]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8564, -0.7191,  1.4027, -0.9109]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8449, -0.7190,  1.4052, -0.9113]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8507, -0.7168,  1.4113, -0.9108]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8556, -0.7132,  1.4202, -0.9087]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8714, -0.7116,  1.4263, -0.9106]], dtype=torch.float64,
       requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.910000. Loss: 0.263279. Time: 18.870383
Validate after epoch 38 with seed 297566
Val Accuracy: 0.870000, Val Loss: 0.489039 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8981, -0.7001,  1.4466, -0.8976]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9112, -0.6874,  1.4682, -0.8761]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9182, -0.6726,  1.4894, -0.8568]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9236, -0.6724,  1.4902, -0.8506]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9299, -0.6748,  1.4921, -0.8514]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9352, -0.6737,  1.4979, -0.8508]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9319, -0.6737,  1.5015, -0.8483]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9174, -0.6723,  1.5041, -0.8469]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9064, -0.6692,  1.5068, -0.8470]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8938, -0.6639,  1.5080, -0.8476]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8854, -0.6597,  1.5102, -0.8456]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8854, -0.6572,  1.5112, -0.8430]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8986, -0.6598,  1.5117, -0.8391]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9078, -0.6605,  1.5145, -0.8314]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9099, -0.6589,  1.5193, -0.8123]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9059, -0.6593,  1.5197, -0.7908]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9006, -0.6570,  1.5216, -0.7686]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8950, -0.6560,  1.5233, -0.7568]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8895, -0.6570,  1.5243, -0.7540]], dtype=torch.float64,
       requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.890000. Loss: 0.377108. Time: 18.771623
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.930000, Val Loss: 0.239378 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8933, -0.6571,  1.5206, -0.7604]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8959, -0.6511,  1.5228, -0.7585]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8898, -0.6393,  1.5166, -0.7532]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8966, -0.6271,  1.5117, -0.7457]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9062, -0.6171,  1.5103, -0.7449]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9096, -0.6090,  1.5107, -0.7483]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9119, -0.6058,  1.5133, -0.7604]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9128, -0.6044,  1.5130, -0.7645]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9142, -0.6032,  1.5114, -0.7638]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9167, -0.6010,  1.5069, -0.7658]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9092, -0.5966,  1.4967, -0.7765]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8982, -0.5905,  1.4838, -0.8060]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8838, -0.5850,  1.4762, -0.8321]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8702, -0.5803,  1.4711, -0.8497]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8885, -0.5813,  1.4680, -0.8534]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9201, -0.5813,  1.4693, -0.8488]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9446, -0.5801,  1.4796, -0.8280]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9559, -0.5784,  1.4860, -0.8174]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9644, -0.5776,  1.4930, -0.8083]], dtype=torch.float64,
       requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.875000. Loss: 0.370196. Time: 18.836404
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.920000, Val Loss: 0.418757 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9624, -0.5735,  1.5016, -0.8107]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9561, -0.5689,  1.4957, -0.8126]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9415, -0.5630,  1.4891, -0.8134]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9308, -0.5604,  1.4878, -0.8082]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9261, -0.5597,  1.4897, -0.8062]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9002, -0.5564,  1.4908, -0.8125]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8868, -0.5547,  1.4913, -0.8179]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8744, -0.5529,  1.4921, -0.8252]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8672, -0.5530,  1.4924, -0.8305]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8739, -0.5412,  1.4960, -0.8314]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8710, -0.5084,  1.5053, -0.8454]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8793, -0.4967,  1.5077, -0.8505]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8853, -0.4922,  1.5087, -0.8418]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8927, -0.4869,  1.5101, -0.8374]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9032, -0.4819,  1.5122, -0.8368]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9053, -0.4757,  1.5157, -0.8416]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9082, -0.4774,  1.5122, -0.8367]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9012, -0.4751,  1.5090, -0.8310]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8961, -0.4748,  1.5066, -0.8282]], dtype=torch.float64,
       requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.895000. Loss: 0.329140. Time: 18.687278
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.880000, Val Loss: 0.427212 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8870, -0.4988,  1.4942, -0.8128]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8778, -0.5093,  1.4921, -0.8092]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8777, -0.5190,  1.4867, -0.8023]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8795, -0.5216,  1.4835, -0.8002]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8944, -0.5154,  1.4808, -0.8033]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9069, -0.5083,  1.4824, -0.8130]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9150, -0.5098,  1.4823, -0.8168]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9205, -0.5109,  1.4812, -0.8201]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9325, -0.5057,  1.4817, -0.8272]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9379, -0.4988,  1.4819, -0.8338]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9267, -0.5096,  1.4800, -0.8173]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8910, -0.5282,  1.4753, -0.7922]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8915, -0.5426,  1.4717, -0.7619]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9055, -0.5421,  1.4706, -0.7435]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9165, -0.5413,  1.4715, -0.7413]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9316, -0.5390,  1.4718, -0.7507]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9488, -0.5335,  1.4709, -0.7507]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9623, -0.5293,  1.4684, -0.7575]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9629, -0.5240,  1.4667, -0.7644]], dtype=torch.float64,
       requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.885000. Loss: 0.408268. Time: 18.405371
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.870000, Val Loss: 0.372471 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9520, -0.5111,  1.4562, -0.7873]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9356, -0.5123,  1.4524, -0.7887]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9179, -0.5182,  1.4505, -0.7806]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8990, -0.5174,  1.4494, -0.7691]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8822, -0.5138,  1.4496, -0.7648]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8814, -0.5102,  1.4518, -0.7598]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8852, -0.5141,  1.4530, -0.7527]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8788, -0.5048,  1.4564, -0.7586]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8723, -0.4934,  1.4574, -0.7674]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8655, -0.4749,  1.4614, -0.7853]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8569, -0.4596,  1.4682, -0.8024]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8616, -0.4634,  1.4668, -0.8100]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8672, -0.4650,  1.4682, -0.8155]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8862, -0.4693,  1.4694, -0.8153]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9203, -0.4899,  1.4647, -0.8026]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9200, -0.4910,  1.4675, -0.8007]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9142, -0.4943,  1.4677, -0.7982]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9194, -0.5008,  1.4687, -0.7950]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9330, -0.5139,  1.4731, -0.7845]], dtype=torch.float64,
       requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.875000. Loss: 0.378286. Time: 19.095273
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.880000, Val Loss: 0.480992 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9611, -0.5402,  1.4815, -0.7595]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9661, -0.5446,  1.4807, -0.7497]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9551, -0.5464,  1.4798, -0.7439]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9483, -0.5465,  1.4789, -0.7425]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9473, -0.5493,  1.4756, -0.7376]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9474, -0.5489,  1.4742, -0.7371]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9456, -0.5468,  1.4714, -0.7411]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9272, -0.5501,  1.4706, -0.7229]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9228, -0.5522,  1.4748, -0.7019]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9203, -0.5516,  1.4792, -0.7033]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9119, -0.5501,  1.4812, -0.7131]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9054, -0.5551,  1.4827, -0.7183]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9045, -0.5607,  1.4841, -0.7223]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9083, -0.5621,  1.4802, -0.7209]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9171, -0.5686,  1.4825, -0.7128]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9227, -0.5767,  1.4855, -0.7035]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9208, -0.5826,  1.4868, -0.6996]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9171, -0.5875,  1.4866, -0.7023]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9167, -0.5922,  1.4817, -0.7206]], dtype=torch.float64,
       requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.885000. Loss: 0.357033. Time: 18.999127
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.910000, Val Loss: 0.377220 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9133, -0.5894,  1.4510, -0.8047]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9037, -0.5862,  1.4404, -0.8260]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8930, -0.5829,  1.4396, -0.8329]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8705, -0.5810,  1.4430, -0.8281]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8566, -0.5799,  1.4457, -0.8261]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8599, -0.5827,  1.4441, -0.8316]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8627, -0.5834,  1.4409, -0.8429]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8629, -0.5850,  1.4387, -0.8497]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8655, -0.5909,  1.4423, -0.8388]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8679, -0.5996,  1.4463, -0.8243]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8663, -0.6060,  1.4559, -0.7972]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8688, -0.6114,  1.4653, -0.7759]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8715, -0.6153,  1.4709, -0.7652]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8823, -0.6199,  1.4744, -0.7608]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8973, -0.6253,  1.4726, -0.7720]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9052, -0.6278,  1.4692, -0.7864]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9180, -0.6264,  1.4626, -0.7946]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9266, -0.6275,  1.4576, -0.7981]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9287, -0.6270,  1.4580, -0.7996]], dtype=torch.float64,
       requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.910000. Loss: 0.399794. Time: 18.371413
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.890000, Val Loss: 0.384861 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9450, -0.6475,  1.4099, -0.8321]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9506, -0.6393,  1.4162, -0.8282]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9567, -0.6348,  1.4212, -0.8239]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9717, -0.6429,  1.4132, -0.8240]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9846, -0.6515,  1.4060, -0.8248]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9900, -0.6489,  1.4188, -0.8205]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9887, -0.6338,  1.4463, -0.8113]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0069, -0.6145,  1.4714, -0.7949]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0115, -0.6001,  1.4852, -0.7866]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0272, -0.6120,  1.4631, -0.7996]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0444, -0.6411,  1.4261, -0.8207]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0490, -0.6595,  1.4027, -0.8297]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0349, -0.6576,  1.3970, -0.8258]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0300, -0.6456,  1.4024, -0.8193]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0426, -0.6379,  1.4041, -0.8170]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0473, -0.6297,  1.4108, -0.8137]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0497, -0.6232,  1.4176, -0.8133]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0637, -0.6022,  1.4399, -0.8027]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0676, -0.5793,  1.4624, -0.7911]], dtype=torch.float64,
       requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.875000. Loss: 0.408212. Time: 18.946423
Validate after epoch 46 with seed 91566
Val Accuracy: 0.860000, Val Loss: 0.405206 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0537, -0.5513,  1.4964, -0.7683]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0538, -0.5351,  1.5170, -0.7451]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0570, -0.5218,  1.5321, -0.7335]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0962, -0.5209,  1.5299, -0.7530]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1416, -0.5227,  1.5282, -0.7726]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1811, -0.5212,  1.5321, -0.7835]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2262, -0.5207,  1.5384, -0.7647]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2614, -0.5274,  1.5289, -0.7595]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2824, -0.5357,  1.5186, -0.7564]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2941, -0.5387,  1.5159, -0.7559]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2989, -0.5565,  1.5024, -0.7626]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2918, -0.5793,  1.4798, -0.7747]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2946, -0.5944,  1.4479, -0.7750]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2934, -0.5892,  1.4382, -0.7712]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2898, -0.5869,  1.4314, -0.7715]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2861, -0.5906,  1.4223, -0.7744]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2812, -0.5922,  1.4167, -0.7794]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2729, -0.5720,  1.4290, -0.7794]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2636, -0.5415,  1.4506, -0.7733]], dtype=torch.float64,
       requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.860000. Loss: 0.425804. Time: 19.094867
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.910000, Val Loss: 0.350136 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2488, -0.5086,  1.4777, -0.7713]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2338, -0.5265,  1.4631, -0.7814]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2184, -0.5441,  1.4483, -0.7903]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.2068, -0.5463,  1.4488, -0.7956]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1957, -0.5723,  1.4199, -0.8140]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1893, -0.5982,  1.3932, -0.8313]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1869, -0.6040,  1.3863, -0.8396]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1782, -0.5883,  1.3994, -0.8377]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1770, -0.5706,  1.4141, -0.8329]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1681, -0.5736,  1.4117, -0.8274]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1531, -0.5641,  1.4198, -0.8186]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1327, -0.5607,  1.4202, -0.8129]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1411, -0.5650,  1.4197, -0.8136]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1527, -0.5817,  1.4062, -0.8220]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1568, -0.5978,  1.3896, -0.8320]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1426, -0.5860,  1.3999, -0.8267]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1307, -0.5581,  1.4273, -0.8098]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1180, -0.5370,  1.4481, -0.7996]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.1074, -0.5252,  1.4590, -0.7960]], dtype=torch.float64,
       requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.920000. Loss: 0.283632. Time: 18.670210
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.870000, Val Loss: 0.456687 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0876, -0.4965,  1.4883, -0.7833]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0717, -0.4844,  1.5014, -0.7795]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0542, -0.4770,  1.5109, -0.7815]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0354, -0.4706,  1.5188, -0.7732]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0241, -0.4649,  1.5251, -0.7687]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0155, -0.4574,  1.5298, -0.7774]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0049, -0.4531,  1.5330, -0.7842]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9935, -0.4502,  1.5357, -0.7892]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9852, -0.4475,  1.5380, -0.7953]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9851, -0.4510,  1.5341, -0.7897]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9864, -0.4553,  1.5315, -0.7845]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9770, -0.4524,  1.5341, -0.7869]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9632, -0.4431,  1.5404, -0.7911]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9663, -0.4626,  1.5332, -0.7765]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9600, -0.4991,  1.5200, -0.7482]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9359, -0.5284,  1.5123, -0.7250]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9301, -0.5482,  1.5070, -0.7069]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9310, -0.5587,  1.5025, -0.6967]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9333, -0.5642,  1.5006, -0.6929]], dtype=torch.float64,
       requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.930000. Loss: 0.271499. Time: 19.194283
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.820000, Val Loss: 0.528074 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9448, -0.5710,  1.4997, -0.6855]], dtype=torch.float64,
       requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9648, -0.5770,  1.4990, -0.6522]], dtype=torch.float64,
       requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9849, -0.5822,  1.4998, -0.6156]], dtype=torch.float64,
       requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0015, -0.5858,  1.4935, -0.6057]], dtype=torch.float64,
       requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0104, -0.6050,  1.4661, -0.6277]], dtype=torch.float64,
       requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0146, -0.6096,  1.4577, -0.6326]], dtype=torch.float64,
       requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0142, -0.6105,  1.4527, -0.6353]], dtype=torch.float64,
       requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0121, -0.6133,  1.4479, -0.6390]], dtype=torch.float64,
       requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0108, -0.6453,  1.4150, -0.6568]], dtype=torch.float64,
       requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0027, -0.6901,  1.3720, -0.6889]], dtype=torch.float64,
       requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0021, -0.7157,  1.3504, -0.7131]], dtype=torch.float64,
       requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0011, -0.7418,  1.3226, -0.7318]], dtype=torch.float64,
       requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9959, -0.7538,  1.3105, -0.7422]], dtype=torch.float64,
       requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-1.0076, -0.8094,  1.2476, -0.7602]], dtype=torch.float64,
       requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9883, -0.7987,  1.2562, -0.7506]], dtype=torch.float64,
       requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9720, -0.7785,  1.2768, -0.7392]], dtype=torch.float64,
       requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9841, -0.7797,  1.2761, -0.7373]], dtype=torch.float64,
       requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9892, -0.7649,  1.2930, -0.7297]], dtype=torch.float64,
       requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9897, -0.7487,  1.3104, -0.7235]], dtype=torch.float64,
       requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.865000. Loss: 0.471742. Time: 19.170403
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.860000, Val Loss: 0.404958 
Training Execution time: 27:53:51.00
Conducting Test
Test Accuracy: 0.882000, Test Loss: 0.388698 
