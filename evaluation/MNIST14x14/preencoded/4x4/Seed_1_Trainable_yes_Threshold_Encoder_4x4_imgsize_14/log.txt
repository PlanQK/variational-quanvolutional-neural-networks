Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 16, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_Threshold_Encoder_4x4_imgsize_14'}
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'Threshold_Encoder', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 16, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_Threshold_Encoder_4x4_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0417, -0.9100, -0.3170, -0.6564, -0.3546, -0.6048, -0.8884,  0.3440,
          0.8352, -0.8032]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 3.9124e-04, -9.5240e-01, -3.4975e-01, -6.5641e-01, -3.1661e-01,
         -6.4676e-01, -8.8839e-01,  3.8549e-01,  8.7656e-01, -8.4692e-01]],
       dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0382, -0.9897, -0.3788, -0.6564, -0.2951, -0.6840, -0.8884,  0.4225,
          0.9133, -0.8815]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0653, -1.0313, -0.3911, -0.6564, -0.2864, -0.7108, -0.8884,  0.4508,
          0.9413, -0.9130]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0932, -1.0670, -0.4115, -0.6564, -0.2961, -0.7372, -0.8884,  0.4738,
          0.9637, -0.9371]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1208, -1.0895, -0.4294, -0.6564, -0.3166, -0.7629, -0.8884,  0.4923,
          0.9817, -0.9594]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1500, -1.1010, -0.4500, -0.6564, -0.3466, -0.7884, -0.8884,  0.5164,
          1.0046, -0.9773]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1770, -1.1133, -0.4699, -0.6564, -0.3782, -0.8105, -0.8884,  0.5354,
          1.0226, -0.9943]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1980, -1.1235, -0.4814, -0.6564, -0.4032, -0.8276, -0.8884,  0.5554,
          1.0414, -1.0102]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2191, -1.1308, -0.4944, -0.6564, -0.4285, -0.8439, -0.8884,  0.5741,
          1.0590, -1.0118]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2441, -1.1473, -0.5133, -0.6564, -0.4594, -0.8623, -0.8884,  0.5955,
          1.0791, -1.0154]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2827, -1.1644, -0.5517, -0.6564, -0.5048, -0.8908, -0.8884,  0.6170,
          1.0994, -1.0204]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3309, -1.1764, -0.5677, -0.6564, -0.5605, -0.9262, -0.8884,  0.6340,
          1.1155, -1.0309]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3804, -1.1846, -0.5894, -0.6564, -0.6170, -0.9625, -0.8884,  0.6557,
          1.1363, -1.0386]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4183, -1.1899, -0.5949, -0.6564, -0.6600, -0.9901, -0.8884,  0.6732,
          1.1531, -1.0385]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4482, -1.2038, -0.5889, -0.6564, -0.6943, -1.0115, -0.8884,  0.6861,
          1.1655, -1.0500]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4685, -1.2271, -0.6061, -0.6564, -0.7171, -1.0264, -0.8884,  0.7096,
          1.1886, -1.0444]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4924, -1.2452, -0.6442, -0.6564, -0.7437, -1.0437, -0.8884,  0.7392,
          1.2180, -1.0290]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5122, -1.2530, -0.6685, -0.6564, -0.7657, -1.0582, -0.8884,  0.7643,
          1.2430, -1.0225]], dtype=torch.float64, requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.390000. Loss: 2.974609. Time: 64.824581
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.530000, Val Loss: 1.587132 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5629, -1.2976, -0.7199, -0.6564, -0.8211, -1.0960, -0.8884,  0.7933,
          1.2722, -1.0452]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5725, -1.3120, -0.7334, -0.6564, -0.8314, -1.1034, -0.8884,  0.7950,
          1.2735, -1.0445]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5750, -1.3294, -0.7389, -0.6564, -0.8340, -1.1055, -0.8884,  0.7944,
          1.2724, -1.0466]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5793, -1.3451, -0.7409, -0.6564, -0.8385, -1.1089, -0.8884,  0.7962,
          1.2741, -1.0264]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5782, -1.3596, -0.7345, -0.6564, -0.8373, -1.1082, -0.8884,  0.7939,
          1.2715, -1.0177]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5532, -1.3820, -0.7238, -0.6564, -0.8104, -1.0891, -0.8884,  0.7925,
          1.2698, -1.0211]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5325, -1.3934, -0.7252, -0.6564, -0.7880, -1.0730, -0.8884,  0.7955,
          1.2730, -1.0323]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5187, -1.3848, -0.7501, -0.6564, -0.7732, -1.0623, -0.8884,  0.7951,
          1.2725, -1.0562]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5083, -1.3651, -0.7777, -0.6564, -0.7621, -1.0542, -0.8884,  0.7953,
          1.2727, -1.0741]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5207, -1.3716, -0.8004, -0.6564, -0.7750, -1.0646, -0.8884,  0.7987,
          1.2763, -1.0989]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5314, -1.3865, -0.8177, -0.6564, -0.7861, -1.0734, -0.8884,  0.7996,
          1.2772, -1.1109]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5352, -1.4086, -0.8383, -0.6564, -0.7900, -1.0767, -0.8884,  0.8100,
          1.2885, -1.1255]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5471, -1.4259, -0.8642, -0.6564, -0.8024, -1.0867, -0.8884,  0.8151,
          1.2940, -1.1447]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5586, -1.4342, -0.8845, -0.6564, -0.8144, -1.0964, -0.8884,  0.8258,
          1.3058, -1.1547]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5644, -1.4354, -0.8935, -0.6564, -0.8204, -1.1012, -0.8884,  0.8303,
          1.3106, -1.1706]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5603, -1.4494, -0.9145, -0.6564, -0.8161, -1.0979, -0.8884,  0.8278,
          1.3075, -1.1917]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.4737, -0.9349, -0.6564, -0.7945, -1.0807, -0.8884,  0.8234,
          1.3023, -1.2141]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5231, -1.4858, -0.9455, -0.6564, -0.7769, -1.0666, -0.8884,  0.8209,
          1.2993, -1.2289]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5098, -1.4971, -0.9588, -0.6564, -0.7630, -1.0553, -0.8884,  0.8229,
          1.3014, -1.2461]], dtype=torch.float64, requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.615000. Loss: 1.674164. Time: 51.165494
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.670000, Val Loss: 1.593119 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5086, -1.5119, -0.9767, -0.6564, -0.7615, -1.0545, -0.8884,  0.8268,
          1.3057, -1.2812]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5171, -1.5243, -0.9771, -0.6564, -0.7702, -1.0621, -0.8884,  0.8174,
          1.2950, -1.3049]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5161, -1.5447, -0.9825, -0.6564, -0.7690, -1.0612, -0.8884,  0.8128,
          1.2899, -1.3254]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5194, -1.5580, -0.9824, -0.6564, -0.7724, -1.0641, -0.8884,  0.8064,
          1.2827, -1.3442]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5183, -1.5596, -0.9866, -0.6564, -0.7713, -1.0633, -0.8884,  0.7988,
          1.2744, -1.3599]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5212, -1.5576, -0.9913, -0.6564, -0.7743, -1.0659, -0.8884,  0.7903,
          1.2653, -1.3660]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5313, -1.5513, -0.9794, -0.6564, -0.7846, -1.0748, -0.8884,  0.7900,
          1.2647, -1.3566]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5376, -1.5557, -0.9664, -0.6564, -0.7911, -1.0803, -0.8884,  0.8143,
          1.2899, -1.3598]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5397, -1.5652, -0.9544, -0.6564, -0.7932, -1.0822, -0.8884,  0.8229,
          1.2982, -1.3531]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5394, -1.5865, -0.9374, -0.6564, -0.7928, -1.0820, -0.8884,  0.8300,
          1.3054, -1.3555]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5342, -1.5913, -0.8971, -0.6564, -0.7874, -1.0774, -0.8884,  0.8319,
          1.3070, -1.3575]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5194, -1.5887, -0.8832, -0.6564, -0.7721, -1.0644, -0.8884,  0.8305,
          1.3051, -1.3574]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5096, -1.5747, -0.8888, -0.6564, -0.7619, -1.0557, -0.8884,  0.8318,
          1.3065, -1.3469]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5199, -1.5607, -0.8986, -0.6564, -0.7723, -1.0651, -0.8884,  0.8387,
          1.3139, -1.3522]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5234, -1.5433, -0.9048, -0.6564, -0.7758, -1.0684, -0.8884,  0.8451,
          1.3208, -1.3560]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5254, -1.5236, -0.9073, -0.6564, -0.7778, -1.0702, -0.8884,  0.8559,
          1.3329, -1.3551]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5342, -1.5140, -0.9087, -0.6564, -0.7867, -1.0782, -0.8884,  0.8662,
          1.3445, -1.3629]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5375, -1.5003, -0.9165, -0.6564, -0.7902, -1.0813, -0.8884,  0.8680,
          1.3461, -1.3690]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5449, -1.4910, -0.9272, -0.6564, -0.7977, -1.0878, -0.8884,  0.8625,
          1.3393, -1.3542]], dtype=torch.float64, requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.680000. Loss: 1.273981. Time: 46.299475
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.710000, Val Loss: 1.314269 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5613, -1.4647, -0.9858, -0.6564, -0.8146, -1.1026, -0.8884,  0.8740,
          1.3521, -1.3131]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5651, -1.4559, -0.9880, -0.6564, -0.8185, -1.1060, -0.8884,  0.8850,
          1.3649, -1.2949]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5656, -1.4548, -0.9762, -0.6564, -0.8191, -1.1066, -0.8884,  0.8904,
          1.3710, -1.2895]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5694, -1.4524, -0.9684, -0.6564, -0.8230, -1.1099, -0.8884,  0.8937,
          1.3747, -1.2889]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5549, -1.4633, -0.9931, -0.6564, -0.8079, -1.0970, -0.8884,  0.8983,
          1.3803, -1.3064]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5461, -1.4772, -1.0208, -0.6564, -0.7986, -1.0891, -0.8884,  0.8998,
          1.3819, -1.3345]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5320, -1.5014, -1.0397, -0.6564, -0.7840, -1.0764, -0.8884,  0.8848,
          1.3620, -1.3513]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5343, -1.5289, -1.0635, -0.6564, -0.7862, -1.0787, -0.8884,  0.8683,
          1.3411, -1.3644]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5256, -1.5422, -1.0751, -0.6564, -0.7773, -1.0709, -0.8884,  0.8576,
          1.3273, -1.3711]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5314, -1.5504, -1.0709, -0.6564, -0.7830, -1.0763, -0.8884,  0.8552,
          1.3235, -1.3798]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5357, -1.5555, -1.0494, -0.6564, -0.7874, -1.0803, -0.8884,  0.8497,
          1.3169, -1.3811]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.5580, -1.0380, -0.6564, -0.7916, -1.0842, -0.8884,  0.8505,
          1.3172, -1.3903]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5585, -1.5664, -1.0417, -0.6564, -0.8107, -1.1014, -0.8884,  0.8612,
          1.3283, -1.4075]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5725, -1.5893, -1.0488, -0.6564, -0.8251, -1.1143, -0.8884,  0.8687,
          1.3361, -1.4253]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5758, -1.6034, -1.0573, -0.6564, -0.8283, -1.1174, -0.8884,  0.8762,
          1.3441, -1.4330]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5720, -1.6134, -1.0560, -0.6564, -0.8243, -1.1140, -0.8884,  0.8847,
          1.3535, -1.4331]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5708, -1.6154, -1.0547, -0.6564, -0.8230, -1.1130, -0.8884,  0.8913,
          1.3609, -1.4256]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5748, -1.6103, -1.0706, -0.6564, -0.8271, -1.1167, -0.8884,  0.9008,
          1.3718, -1.4201]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5809, -1.6060, -1.0777, -0.6564, -0.8334, -1.1223, -0.8884,  0.9062,
          1.3778, -1.4055]], dtype=torch.float64, requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.700000. Loss: 1.553914. Time: 64.577763
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.660000, Val Loss: 1.564473 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5776, -1.5873, -1.0681, -0.6564, -0.8299, -1.1193, -0.8884,  0.9061,
          1.3770, -1.3635]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5814, -1.5861, -1.0470, -0.6564, -0.8339, -1.1228, -0.8884,  0.8975,
          1.3662, -1.3412]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5917, -1.5830, -1.0343, -0.6564, -0.8446, -1.1321, -0.8884,  0.8931,
          1.3605, -1.3270]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6040, -1.5767, -1.0222, -0.6564, -0.8575, -1.1433, -0.8884,  0.8972,
          1.3650, -1.3232]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6171, -1.5824, -1.0080, -0.6564, -0.8712, -1.1552, -0.8884,  0.9054,
          1.3743, -1.3341]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6509, -1.5792, -0.9947, -0.6564, -0.9067, -1.1856, -0.8884,  0.9125,
          1.3826, -1.3409]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6652, -1.5702, -0.9941, -0.6564, -0.9216, -1.1987, -0.8884,  0.9259,
          1.3990, -1.3434]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6746, -1.5492, -1.0006, -0.6564, -0.9315, -1.2074, -0.8884,  0.9430,
          1.4209, -1.3458]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6660, -1.5358, -1.0022, -0.6564, -0.9220, -1.1999, -0.8884,  0.9559,
          1.4375, -1.3472]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6607, -1.5326, -1.0139, -0.6564, -0.9164, -1.1953, -0.8884,  0.9658,
          1.4510, -1.3524]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6380, -1.5285, -1.0185, -0.6564, -0.8922, -1.1749, -0.8884,  0.9718,
          1.4590, -1.3664]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6217, -1.5252, -1.0184, -0.6564, -0.8749, -1.1603, -0.8884,  0.9757,
          1.4644, -1.3671]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5973, -1.5167, -1.0293, -0.6564, -0.8493, -1.1381, -0.8884,  0.9818,
          1.4742, -1.3479]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5542, -1.5166, -1.0456, -0.6564, -0.8045, -1.0982, -0.8884,  0.9834,
          1.4759, -1.3063]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5028, -1.5204, -1.0625, -0.6564, -0.7518, -1.0500, -0.8884,  0.9740,
          1.4555, -1.2968]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4597, -1.5080, -1.0712, -0.6564, -0.7080, -1.0091, -0.8884,  0.9692,
          1.4445, -1.3018]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4315, -1.4976, -1.0665, -0.6564, -0.6794, -0.9822, -0.8884,  0.9674,
          1.4395, -1.3310]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4173, -1.5091, -1.0855, -0.6564, -0.6648, -0.9688, -0.8884,  0.9597,
          1.4266, -1.3663]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4329, -1.5249, -1.1055, -0.6564, -0.6786, -0.9856, -0.8884,  0.9568,
          1.4213, -1.4010]], dtype=torch.float64, requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.640000. Loss: 2.047621. Time: 46.308712
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.540000, Val Loss: 2.202708 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5089, -1.5363, -1.1127, -0.6564, -0.7514, -1.0634, -0.8884,  0.9569,
          1.4196, -1.4355]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5829, -1.5331, -1.0976, -0.6564, -0.8244, -1.1375, -0.8884,  0.9598,
          1.4230, -1.4340]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6176, -1.5252, -1.0797, -0.6564, -0.8577, -1.1729, -0.8884,  0.9560,
          1.4175, -1.4277]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6382, -1.5188, -1.0710, -0.6564, -0.8775, -1.1939, -0.8884,  0.9536,
          1.4140, -1.4153]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6500, -1.5210, -1.0613, -0.6564, -0.8888, -1.2060, -0.8884,  0.9515,
          1.4110, -1.4066]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6338, -1.5280, -1.0582, -0.6564, -0.8699, -1.1917, -0.8884,  0.9535,
          1.4133, -1.4052]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5951, -1.5251, -1.0520, -0.6564, -0.8268, -1.1560, -0.8884,  0.9537,
          1.4134, -1.4136]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5600, -1.5294, -1.0484, -0.6564, -0.7882, -1.1231, -0.8884,  0.9572,
          1.4177, -1.4230]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5489, -1.5463, -1.0549, -0.6564, -0.7756, -1.1132, -0.8884,  0.9633,
          1.4256, -1.4424]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5476, -1.5758, -1.0649, -0.6564, -0.7738, -1.1125, -0.8884,  0.9683,
          1.4319, -1.4463]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5562, -1.6079, -1.0929, -0.6564, -0.7826, -1.1212, -0.8884,  0.9793,
          1.4470, -1.4698]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5523, -1.6337, -1.1143, -0.6564, -0.7782, -1.1176, -0.8884,  0.9913,
          1.4634, -1.4909]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5372, -1.6474, -1.1264, -0.6564, -0.7621, -1.1030, -0.8884,  1.0080,
          1.4885, -1.4957]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5311, -1.6356, -1.1223, -0.6564, -0.7555, -1.0972, -0.8884,  1.0164,
          1.5003, -1.4941]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5381, -1.6215, -1.1158, -0.6564, -0.7627, -1.1043, -0.8884,  1.0223,
          1.5095, -1.4831]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5383, -1.6102, -1.1073, -0.6564, -0.7628, -1.1046, -0.8884,  1.0237,
          1.5090, -1.4710]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5188, -1.5972, -1.1188, -0.6564, -0.7423, -1.0854, -0.8884,  1.0254,
          1.5109, -1.4461]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5266, -1.5700, -1.1339, -0.6564, -0.7501, -1.0934, -0.8884,  1.0300,
          1.5217, -1.4167]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5355, -1.5547, -1.1466, -0.6564, -0.7592, -1.1025, -0.8884,  1.0330,
          1.5289, -1.4017]], dtype=torch.float64, requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.645000. Loss: 1.878192. Time: 60.964374
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.750000, Val Loss: 1.033475 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5476, -1.5480, -1.1828, -0.6564, -0.7716, -1.1146, -0.8884,  1.0414,
          1.5560, -1.3802]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5431, -1.5564, -1.1752, -0.6564, -0.7669, -1.1103, -0.8884,  1.0428,
          1.5549, -1.3748]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5461, -1.5700, -1.1509, -0.6564, -0.7699, -1.1133, -0.8884,  1.0424,
          1.5421, -1.3858]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5488, -1.5691, -1.1292, -0.6564, -0.7727, -1.1161, -0.8884,  1.0394,
          1.5197, -1.3999]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5616, -1.5736, -1.1122, -0.6564, -0.7860, -1.1287, -0.8884,  1.0332,
          1.4944, -1.3977]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5546, -1.5663, -1.1114, -0.6564, -0.7786, -1.1219, -0.8884,  1.0242,
          1.4677, -1.4051]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5451, -1.5485, -1.1128, -0.6564, -0.7686, -1.1127, -0.8884,  1.0144,
          1.4451, -1.4084]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5335, -1.5282, -1.1210, -0.6564, -0.7564, -1.1012, -0.8884,  1.0040,
          1.4259, -1.4022]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5294, -1.5098, -1.1255, -0.6564, -0.7520, -1.0972, -0.8884,  0.9826,
          1.3973, -1.3913]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5217, -1.4926, -1.1489, -0.6564, -0.7440, -1.0896, -0.8884,  0.9657,
          1.3757, -1.3816]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5212, -1.4753, -1.1682, -0.6564, -0.7433, -1.0893, -0.8884,  0.9602,
          1.3671, -1.3689]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5508, -1.4678, -1.1798, -0.6564, -0.7734, -1.1192, -0.8884,  0.9504,
          1.3561, -1.3494]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5753, -1.4521, -1.1988, -0.6564, -0.7983, -1.1438, -0.8884,  0.9298,
          1.3370, -1.3248]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5893, -1.4528, -1.2064, -0.6564, -0.8126, -1.1579, -0.8884,  0.9147,
          1.3233, -1.3073]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5976, -1.4576, -1.2192, -0.6564, -0.8211, -1.1662, -0.8884,  0.9224,
          1.3284, -1.3109]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6024, -1.4582, -1.2274, -0.6564, -0.8259, -1.1710, -0.8884,  0.9258,
          1.3305, -1.3115]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5959, -1.4733, -1.1910, -0.6564, -0.8189, -1.1649, -0.8884,  0.9282,
          1.3320, -1.3207]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5793, -1.4908, -1.1579, -0.6564, -0.8010, -1.1489, -0.8884,  0.9220,
          1.3267, -1.3239]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5627, -1.4983, -1.1309, -0.6564, -0.7833, -1.1329, -0.8884,  0.9104,
          1.3171, -1.3147]], dtype=torch.float64, requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.660000. Loss: 1.497276. Time: 50.444547
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.830000, Val Loss: 0.955226 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5526, -1.5095, -1.0922, -0.6564, -0.7724, -1.1232, -0.8884,  0.8986,
          1.3071, -1.2969]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5350, -1.5115, -1.0928, -0.6564, -0.7539, -1.1058, -0.8884,  0.9064,
          1.3130, -1.3035]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5226, -1.5011, -1.0846, -0.6564, -0.7409, -1.0936, -0.8884,  0.9006,
          1.3082, -1.3090]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5283, -1.5012, -1.0566, -0.6564, -0.7466, -1.0994, -0.8884,  0.9068,
          1.3130, -1.3206]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5374, -1.5026, -1.0420, -0.6564, -0.7559, -1.1087, -0.8884,  0.9222,
          1.3252, -1.3313]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5477, -1.4977, -1.0331, -0.6564, -0.7664, -1.1191, -0.8884,  0.9347,
          1.3353, -1.3449]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5530, -1.4953, -1.0149, -0.6564, -0.7719, -1.1245, -0.8884,  0.9449,
          1.3436, -1.3496]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5567, -1.4879, -1.0100, -0.6564, -0.7757, -1.1282, -0.8884,  0.9592,
          1.3555, -1.3539]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5564, -1.4740, -1.0129, -0.6564, -0.7753, -1.1280, -0.8884,  0.9706,
          1.3652, -1.3511]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5621, -1.4641, -1.0043, -0.6564, -0.7812, -1.1336, -0.8884,  0.9716,
          1.3657, -1.3477]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5551, -1.4595, -0.9990, -0.6564, -0.7738, -1.1267, -0.8884,  0.9837,
          1.3763, -1.3458]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5485, -1.4573, -1.0041, -0.6564, -0.7669, -1.1203, -0.8884,  0.9934,
          1.3848, -1.3547]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5410, -1.4571, -1.0081, -0.6564, -0.7590, -1.1128, -0.8884,  0.9850,
          1.3765, -1.3620]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5421, -1.4588, -1.0260, -0.6564, -0.7602, -1.1140, -0.8884,  0.9768,
          1.3684, -1.3679]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5439, -1.4643, -1.0581, -0.6564, -0.7619, -1.1158, -0.8884,  0.9897,
          1.3797, -1.3689]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5358, -1.4778, -1.0735, -0.6564, -0.7534, -1.1077, -0.8884,  1.0115,
          1.3996, -1.3726]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5458, -1.5038, -1.0770, -0.6564, -0.7638, -1.1178, -0.8884,  1.0325,
          1.4193, -1.3773]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5621, -1.5146, -1.0696, -0.6564, -0.7807, -1.1341, -0.8884,  1.0391,
          1.4247, -1.3765]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5793, -1.5106, -1.0660, -0.6564, -0.7986, -1.1512, -0.8884,  1.0350,
          1.4191, -1.3801]], dtype=torch.float64, requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.740000. Loss: 1.356691. Time: 52.427977
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.690000, Val Loss: 1.824764 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6078, -1.4879, -1.0941, -0.6564, -0.8285, -1.1794, -0.8884,  1.0457,
          1.4290, -1.3967]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6097, -1.4820, -1.1105, -0.6564, -0.8304, -1.1814, -0.8884,  1.0447,
          1.4275, -1.4039]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6060, -1.4785, -1.1092, -0.6564, -0.8263, -1.1779, -0.8884,  1.0455,
          1.4280, -1.3998]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5935, -1.4788, -1.1067, -0.6564, -0.8128, -1.1659, -0.8884,  1.0507,
          1.4336, -1.3827]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5783, -1.4783, -1.1048, -0.6564, -0.7965, -1.1511, -0.8884,  1.0535,
          1.4364, -1.3555]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5641, -1.4827, -1.0908, -0.6564, -0.7813, -1.1373, -0.8884,  1.0520,
          1.4345, -1.3447]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5401, -1.4878, -1.0708, -0.6564, -0.7560, -1.1137, -0.8884,  1.0512,
          1.4333, -1.3365]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5225, -1.4991, -1.0613, -0.6564, -0.7374, -1.0963, -0.8884,  1.0553,
          1.4378, -1.3413]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5184, -1.5070, -1.0590, -0.6564, -0.7330, -1.0925, -0.8884,  1.0573,
          1.4400, -1.3367]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5245, -1.5128, -1.0729, -0.6564, -0.7390, -1.0988, -0.8884,  1.0621,
          1.4456, -1.3449]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.5172, -1.0944, -0.6564, -0.7548, -1.1146, -0.8884,  1.0770,
          1.4633, -1.3504]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5594, -1.5173, -1.1063, -0.6564, -0.7749, -1.1343, -0.8884,  1.0887,
          1.4776, -1.3580]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5782, -1.5089, -1.1081, -0.6564, -0.7944, -1.1532, -0.8884,  1.0960,
          1.4865, -1.3645]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5834, -1.4933, -1.1172, -0.6564, -0.7996, -1.1585, -0.8884,  1.1003,
          1.4916, -1.3736]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5840, -1.4845, -1.1342, -0.6564, -0.8001, -1.1592, -0.8884,  1.1038,
          1.4963, -1.3775]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5683, -1.4964, -1.1464, -0.6564, -0.7832, -1.1439, -0.8884,  1.1038,
          1.4952, -1.3808]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5530, -1.5119, -1.1596, -0.6564, -0.7669, -1.1289, -0.8884,  1.0967,
          1.4822, -1.3807]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5214, -1.5426, -1.1749, -0.6564, -0.7336, -1.0975, -0.8884,  1.0822,
          1.4582, -1.3801]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5019, -1.5780, -1.1772, -0.6564, -0.7132, -1.0782, -0.8884,  1.0813,
          1.4530, -1.3902]], dtype=torch.float64, requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.710000. Loss: 1.595630. Time: 63.672618
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.690000, Val Loss: 1.908738 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5254, -1.6129, -1.1860, -0.6564, -0.7363, -1.1030, -0.8884,  1.0984,
          1.4691, -1.3983]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5545, -1.6335, -1.1900, -0.6564, -0.7660, -1.1329, -0.8884,  1.1008,
          1.4708, -1.4182]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5780, -1.6478, -1.1895, -0.6564, -0.7902, -1.1567, -0.8884,  1.1021,
          1.4715, -1.4354]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5929, -1.6566, -1.1730, -0.6564, -0.8055, -1.1719, -0.8884,  1.1009,
          1.4693, -1.4595]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6058, -1.6432, -1.1986, -0.6564, -0.8191, -1.1849, -0.8884,  1.0989,
          1.4661, -1.4852]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6159, -1.6248, -1.2271, -0.6564, -0.8297, -1.1949, -0.8884,  1.1024,
          1.4701, -1.5136]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6208, -1.6185, -1.2513, -0.6564, -0.8347, -1.1998, -0.8884,  1.1075,
          1.4766, -1.5285]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6204, -1.6042, -1.2683, -0.6564, -0.8342, -1.1995, -0.8884,  1.1120,
          1.4822, -1.5404]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6223, -1.5972, -1.2834, -0.6564, -0.8362, -1.2014, -0.8884,  1.1175,
          1.4900, -1.5508]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6251, -1.5842, -1.2971, -0.6564, -0.8392, -1.2042, -0.8884,  1.1177,
          1.4895, -1.5705]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6175, -1.5727, -1.3118, -0.6564, -0.8309, -1.1969, -0.8884,  1.1226,
          1.4967, -1.5835]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6109, -1.5579, -1.3300, -0.6564, -0.8236, -1.1906, -0.8884,  1.1399,
          1.5270, -1.5931]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6175, -1.5332, -1.3386, -0.6564, -0.8307, -1.1970, -0.8884,  1.1575,
          1.5585, -1.5953]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6235, -1.5259, -1.3338, -0.6564, -0.8372, -1.2029, -0.8884,  1.1671,
          1.5736, -1.5945]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6261, -1.5266, -1.3274, -0.6564, -0.8400, -1.2055, -0.8884,  1.1729,
          1.5851, -1.5928]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6358, -1.5377, -1.3259, -0.6564, -0.8505, -1.2148, -0.8884,  1.1769,
          1.5886, -1.6001]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6498, -1.5541, -1.3167, -0.6564, -0.8658, -1.2284, -0.8884,  1.1793,
          1.5903, -1.6120]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6666, -1.5614, -1.3035, -0.6564, -0.8841, -1.2445, -0.8884,  1.1807,
          1.5916, -1.6329]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6786, -1.5639, -1.2997, -0.6564, -0.8973, -1.2561, -0.8884,  1.1817,
          1.5916, -1.6562]], dtype=torch.float64, requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.740000. Loss: 1.698038. Time: 55.762033
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.690000, Val Loss: 1.765287 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6656, -1.5627, -1.2758, -0.6564, -0.8828, -1.2440, -0.8884,  1.1859,
          1.5710, -1.6613]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6602, -1.5478, -1.2427, -0.6564, -0.8767, -1.2389, -0.8884,  1.1873,
          1.5526, -1.6393]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6229, -1.5472, -1.2263, -0.6564, -0.8361, -1.2033, -0.8884,  1.1887,
          1.5434, -1.6390]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5893, -1.5582, -1.2275, -0.6564, -0.7996, -1.1709, -0.8884,  1.1895,
          1.5377, -1.6525]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5561, -1.5544, -1.2247, -0.6564, -0.7639, -1.1385, -0.8884,  1.1856,
          1.5220, -1.6511]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5251, -1.5375, -1.2148, -0.6564, -0.7310, -1.1080, -0.8884,  1.1797,
          1.5038, -1.6347]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5070, -1.5192, -1.2115, -0.6564, -0.7118, -1.0902, -0.8884,  1.1739,
          1.4896, -1.6156]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4886, -1.4985, -1.2391, -0.6564, -0.6926, -1.0717, -0.8884,  1.1670,
          1.4765, -1.5827]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4687, -1.4964, -1.2566, -0.6564, -0.6722, -1.0512, -0.8884,  1.1515,
          1.4560, -1.5635]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4608, -1.5020, -1.2589, -0.6564, -0.6639, -1.0433, -0.8884,  1.1368,
          1.4385, -1.5448]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4801, -1.4966, -1.2438, -0.6564, -0.6826, -1.0642, -0.8884,  1.1231,
          1.4237, -1.5280]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4929, -1.4879, -1.2282, -0.6564, -0.6949, -1.0780, -0.8884,  1.1052,
          1.4068, -1.4959]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5129, -1.4872, -1.2072, -0.6564, -0.7148, -1.0991, -0.8884,  1.1130,
          1.4110, -1.4723]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5360, -1.4867, -1.1941, -0.6564, -0.7381, -1.1233, -0.8884,  1.1187,
          1.4142, -1.4528]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5493, -1.5127, -1.1640, -0.6564, -0.7514, -1.1373, -0.8884,  1.1121,
          1.4083, -1.4301]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5506, -1.5367, -1.1390, -0.6564, -0.7525, -1.1389, -0.8884,  1.1103,
          1.4064, -1.4111]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5444, -1.5515, -1.1267, -0.6564, -0.7457, -1.1328, -0.8884,  1.1125,
          1.4078, -1.4000]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5275, -1.5618, -1.1266, -0.6564, -0.7279, -1.1158, -0.8884,  1.1249,
          1.4171, -1.3887]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5250, -1.5768, -1.1066, -0.6564, -0.7250, -1.1134, -0.8884,  1.1356,
          1.4251, -1.3808]], dtype=torch.float64, requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.720000. Loss: 1.464112. Time: 48.020582
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.780000, Val Loss: 1.022363 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5249, -1.6181, -1.0753, -0.6564, -0.7247, -1.1135, -0.8884,  1.1474,
          1.4341, -1.3838]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5273, -1.6234, -1.0713, -0.6564, -0.7271, -1.1161, -0.8884,  1.1544,
          1.4397, -1.3935]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5377, -1.6334, -1.0733, -0.6564, -0.7379, -1.1268, -0.8884,  1.1681,
          1.4513, -1.3958]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5562, -1.6217, -1.0757, -0.6564, -0.7571, -1.1456, -0.8884,  1.1703,
          1.4526, -1.3963]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5672, -1.6082, -1.0864, -0.6564, -0.7685, -1.1570, -0.8884,  1.1710,
          1.4527, -1.3870]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5643, -1.6018, -1.0829, -0.6564, -0.7653, -1.1542, -0.8884,  1.1697,
          1.4512, -1.3778]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5615, -1.6029, -1.0640, -0.6564, -0.7621, -1.1515, -0.8884,  1.1735,
          1.4544, -1.3719]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5635, -1.5968, -1.0517, -0.6564, -0.7641, -1.1536, -0.8884,  1.1802,
          1.4603, -1.3789]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5550, -1.5935, -1.0599, -0.6564, -0.7550, -1.1451, -0.8884,  1.1920,
          1.4714, -1.3892]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5435, -1.5827, -1.0719, -0.6564, -0.7429, -1.1336, -0.8884,  1.2054,
          1.4845, -1.3872]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5342, -1.5747, -1.0478, -0.6564, -0.7331, -1.1242, -0.8884,  1.2138,
          1.4925, -1.3921]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5170, -1.5686, -1.0314, -0.6564, -0.7152, -1.1067, -0.8884,  1.2138,
          1.4910, -1.3912]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5091, -1.5654, -1.0171, -0.6564, -0.7068, -1.0988, -0.8884,  1.2125,
          1.4885, -1.3996]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5075, -1.5684, -1.0206, -0.6564, -0.7050, -1.0973, -0.8884,  1.2060,
          1.4804, -1.4120]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4998, -1.5718, -1.0249, -0.6564, -0.6971, -1.0894, -0.8884,  1.2021,
          1.4755, -1.4217]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4965, -1.5879, -1.0267, -0.6564, -0.6937, -1.0861, -0.8884,  1.2028,
          1.4756, -1.4219]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4982, -1.5876, -1.0252, -0.6564, -0.6953, -1.0879, -0.8884,  1.1992,
          1.4715, -1.4056]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4936, -1.5823, -1.0348, -0.6564, -0.6906, -1.0832, -0.8884,  1.2016,
          1.4736, -1.3911]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4933, -1.5721, -1.0407, -0.6564, -0.6903, -1.0829, -0.8884,  1.2027,
          1.4746, -1.3756]], dtype=torch.float64, requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.720000. Loss: 1.602761. Time: 59.184899
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.850000, Val Loss: 0.783126 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5246, -1.5379, -1.0717, -0.6564, -0.7219, -1.1156, -0.8884,  1.2065,
          1.4780, -1.3915]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5381, -1.5344, -1.0742, -0.6564, -0.7356, -1.1297, -0.8884,  1.2078,
          1.4792, -1.3946]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5530, -1.5362, -1.0804, -0.6564, -0.7509, -1.1450, -0.8884,  1.2126,
          1.4840, -1.3923]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5657, -1.5328, -1.0790, -0.6564, -0.7640, -1.1579, -0.8884,  1.2186,
          1.4903, -1.3992]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6117, -1.5334, -1.0751, -0.6564, -0.8126, -1.2041, -0.8884,  1.2197,
          1.4910, -1.3988]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6414, -1.5523, -1.0542, -0.6564, -0.8439, -1.2341, -0.8884,  1.2054,
          1.4742, -1.4002]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6366, -1.5774, -1.0423, -0.6564, -0.8378, -1.2301, -0.8884,  1.2038,
          1.4704, -1.4151]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6289, -1.5951, -1.0343, -0.6564, -0.8288, -1.2231, -0.8884,  1.2066,
          1.4718, -1.4291]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6219, -1.6050, -1.0295, -0.6564, -0.8209, -1.2166, -0.8884,  1.2143,
          1.4786, -1.4557]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6137, -1.6153, -1.0325, -0.6564, -0.8116, -1.2087, -0.8884,  1.2184,
          1.4819, -1.4863]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5805, -1.6203, -1.0279, -0.6564, -0.7755, -1.1761, -0.8884,  1.2197,
          1.4827, -1.4997]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5469, -1.6066, -1.0266, -0.6564, -0.7393, -1.1430, -0.8884,  1.2244,
          1.4873, -1.4927]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5173, -1.6062, -1.0485, -0.6564, -0.7076, -1.1135, -0.8884,  1.2341,
          1.4977, -1.4888]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4945, -1.5998, -1.0786, -0.6564, -0.6833, -1.0907, -0.8884,  1.2426,
          1.5065, -1.5048]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5051, -1.5801, -1.0987, -0.6564, -0.6935, -1.1026, -0.8884,  1.2454,
          1.5089, -1.5091]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5295, -1.5543, -1.1118, -0.6564, -0.7179, -1.1286, -0.8884,  1.2454,
          1.5080, -1.5094]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5272, -1.5403, -1.1365, -0.6564, -0.7148, -1.1267, -0.8884,  1.2396,
          1.4993, -1.5098]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5138, -1.5326, -1.1613, -0.6564, -0.7005, -1.1133, -0.8884,  1.2333,
          1.4907, -1.5058]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5095, -1.5235, -1.1662, -0.6564, -0.6957, -1.1091, -0.8884,  1.2251,
          1.4808, -1.4910]], dtype=torch.float64, requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.690000. Loss: 2.064516. Time: 59.035586
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.790000, Val Loss: 1.264461 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5299, -1.5218, -1.1275, -0.6564, -0.7165, -1.1307, -0.8884,  1.2103,
          1.4634, -1.4814]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5352, -1.5098, -1.1207, -0.6564, -0.7217, -1.1363, -0.8884,  1.2048,
          1.4576, -1.4935]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5322, -1.4972, -1.1170, -0.6564, -0.7184, -1.1333, -0.8884,  1.1913,
          1.4454, -1.5184]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5304, -1.4928, -1.1058, -0.6564, -0.7164, -1.1316, -0.8884,  1.1761,
          1.4323, -1.5225]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5290, -1.5054, -1.1174, -0.6564, -0.7149, -1.1302, -0.8884,  1.1702,
          1.4269, -1.5309]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5351, -1.5208, -1.1446, -0.6564, -0.7213, -1.1365, -0.8884,  1.1750,
          1.4298, -1.5383]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5327, -1.5287, -1.1543, -0.6564, -0.7187, -1.1342, -0.8884,  1.1647,
          1.4216, -1.5430]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5597, -1.5556, -1.1291, -0.6564, -0.7468, -1.1618, -0.8884,  1.1722,
          1.4267, -1.5236]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5846, -1.5861, -1.1108, -0.6564, -0.7729, -1.1871, -0.8884,  1.1760,
          1.4292, -1.5049]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6135, -1.6128, -1.0971, -0.6564, -0.8036, -1.2163, -0.8884,  1.1832,
          1.4345, -1.5017]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6240, -1.6267, -1.1039, -0.6564, -0.8144, -1.2270, -0.8884,  1.1857,
          1.4362, -1.5089]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6305, -1.6350, -1.1102, -0.6564, -0.8212, -1.2337, -0.8884,  1.1860,
          1.4363, -1.5144]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6326, -1.6462, -1.1179, -0.6564, -0.8233, -1.2360, -0.8884,  1.1925,
          1.4412, -1.5243]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6320, -1.6528, -1.1300, -0.6564, -0.8225, -1.2355, -0.8884,  1.2032,
          1.4496, -1.5392]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6213, -1.6533, -1.1526, -0.6564, -0.8106, -1.2252, -0.8884,  1.2106,
          1.4553, -1.5476]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6133, -1.6490, -1.1615, -0.6564, -0.8017, -1.2174, -0.8884,  1.2190,
          1.4619, -1.5484]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6116, -1.6548, -1.1602, -0.6564, -0.7998, -1.2159, -0.8884,  1.2257,
          1.4675, -1.5535]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6001, -1.6519, -1.1689, -0.6564, -0.7872, -1.2046, -0.8884,  1.2279,
          1.4691, -1.5570]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5888, -1.6451, -1.1708, -0.6564, -0.7748, -1.1935, -0.8884,  1.2296,
          1.4705, -1.5542]], dtype=torch.float64, requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.765000. Loss: 1.476274. Time: 55.504714
Validate after epoch 14 with seed 964979
Val Accuracy: 0.810000, Val Loss: 1.234712 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5854, -1.6366, -1.1711, -0.6564, -0.7710, -1.1903, -0.8884,  1.2297,
          1.4703, -1.5571]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5819, -1.6321, -1.1856, -0.6564, -0.7671, -1.1869, -0.8884,  1.2356,
          1.4755, -1.5582]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5846, -1.6232, -1.1813, -0.6564, -0.7701, -1.1897, -0.8884,  1.2363,
          1.4760, -1.5622]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5782, -1.6141, -1.1743, -0.6564, -0.7632, -1.1833, -0.8884,  1.2321,
          1.4718, -1.5626]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5719, -1.6079, -1.1719, -0.6564, -0.7564, -1.1770, -0.8884,  1.2297,
          1.4695, -1.5635]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5572, -1.5893, -1.1711, -0.6564, -0.7406, -1.1622, -0.8884,  1.2246,
          1.4647, -1.5618]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5486, -1.5751, -1.1720, -0.6564, -0.7314, -1.1536, -0.8884,  1.2169,
          1.4578, -1.5669]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5455, -1.5622, -1.1642, -0.6564, -0.7281, -1.1506, -0.8884,  1.2151,
          1.4559, -1.5743]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5546, -1.5691, -1.1493, -0.6564, -0.7375, -1.1599, -0.8884,  1.2320,
          1.4700, -1.5726]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5677, -1.5786, -1.1362, -0.6564, -0.7512, -1.1733, -0.8884,  1.2441,
          1.4798, -1.5560]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5718, -1.5889, -1.1180, -0.6564, -0.7555, -1.1775, -0.8884,  1.2440,
          1.4786, -1.5500]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5665, -1.5806, -1.1141, -0.6564, -0.7497, -1.1723, -0.8884,  1.2386,
          1.4728, -1.5400]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5592, -1.5687, -1.1154, -0.6564, -0.7419, -1.1650, -0.8884,  1.2325,
          1.4667, -1.5346]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5624, -1.5594, -1.1166, -0.6564, -0.7453, -1.1684, -0.8884,  1.2328,
          1.4665, -1.5353]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5839, -1.5686, -1.1052, -0.6564, -0.7680, -1.1900, -0.8884,  1.2300,
          1.4636, -1.5187]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6053, -1.5779, -1.0774, -0.6564, -0.7907, -1.2116, -0.8884,  1.2248,
          1.4590, -1.5041]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6020, -1.5617, -1.0810, -0.6564, -0.7868, -1.2087, -0.8884,  1.2225,
          1.4564, -1.4852]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5858, -1.5372, -1.0853, -0.6564, -0.7691, -1.1928, -0.8884,  1.2247,
          1.4578, -1.4717]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5668, -1.5102, -1.0876, -0.6564, -0.7486, -1.1741, -0.8884,  1.2230,
          1.4561, -1.4587]], dtype=torch.float64, requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.815000. Loss: 1.288080. Time: 55.702594
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.780000, Val Loss: 1.954879 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5296, -1.4646, -1.0840, -0.6564, -0.7089, -1.1367, -0.8884,  1.2156,
          1.4497, -1.4312]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5004, -1.4562, -1.0897, -0.6564, -0.6781, -1.1069, -0.8884,  1.2182,
          1.4516, -1.4197]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4820, -1.4562, -1.0981, -0.6564, -0.6588, -1.0882, -0.8884,  1.2255,
          1.4574, -1.4150]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4738, -1.4611, -1.1109, -0.6564, -0.6500, -1.0800, -0.8884,  1.2475,
          1.4757, -1.4080]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4577, -1.4719, -1.1287, -0.6564, -0.6336, -1.0630, -0.8884,  1.2693,
          1.4947, -1.4050]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4535, -1.4909, -1.1388, -0.6564, -0.6291, -1.0589, -0.8884,  1.2908,
          1.5143, -1.4043]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4558, -1.5069, -1.1514, -0.6564, -0.6311, -1.0616, -0.8884,  1.2995,
          1.5204, -1.3845]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4828, -1.5214, -1.1589, -0.6564, -0.6578, -1.0909, -0.8884,  1.2998,
          1.5168, -1.3540]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5190, -1.5352, -1.1478, -0.6564, -0.6938, -1.1298, -0.8884,  1.2999,
          1.5145, -1.3403]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5537, -1.5430, -1.1589, -0.6564, -0.7289, -1.1665, -0.8884,  1.2962,
          1.5082, -1.3316]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5747, -1.5472, -1.1800, -0.6564, -0.7502, -1.1888, -0.8884,  1.2967,
          1.5077, -1.3087]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6010, -1.5232, -1.2068, -0.6564, -0.7778, -1.2159, -0.8884,  1.2955,
          1.5054, -1.2875]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6210, -1.5035, -1.2240, -0.6564, -0.7990, -1.2363, -0.8884,  1.2973,
          1.5069, -1.2749]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6351, -1.4861, -1.2298, -0.6564, -0.8140, -1.2506, -0.8884,  1.2985,
          1.5080, -1.2668]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6529, -1.4783, -1.2073, -0.6564, -0.8335, -1.2682, -0.8884,  1.2931,
          1.5015, -1.2867]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6642, -1.4757, -1.1867, -0.6564, -0.8459, -1.2795, -0.8884,  1.2891,
          1.4967, -1.3230]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6679, -1.4754, -1.1759, -0.6564, -0.8498, -1.2833, -0.8884,  1.2842,
          1.4913, -1.3442]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6230, -1.4789, -1.1605, -0.6564, -0.7994, -1.2400, -0.8884,  1.2699,
          1.4771, -1.3530]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5910, -1.4832, -1.1567, -0.6564, -0.7635, -1.2093, -0.8884,  1.2521,
          1.4607, -1.3662]], dtype=torch.float64, requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.740000. Loss: 1.670041. Time: 52.219260
Validate after epoch 16 with seed 840036
Val Accuracy: 0.710000, Val Loss: 2.006980 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5583, -1.4904, -1.1638, -0.6564, -0.7270, -1.1778, -0.8884,  1.2218,
          1.4345, -1.3972]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5552, -1.4860, -1.1615, -0.6564, -0.7233, -1.1750, -0.8884,  1.2031,
          1.4203, -1.3968]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5617, -1.4858, -1.1527, -0.6564, -0.7300, -1.1819, -0.8884,  1.2197,
          1.4306, -1.3955]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5854, -1.4857, -1.1436, -0.6564, -0.7550, -1.2063, -0.8884,  1.2518,
          1.4518, -1.3999]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5955, -1.4916, -1.1300, -0.6564, -0.7656, -1.2169, -0.8884,  1.2623,
          1.4579, -1.4102]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5948, -1.5065, -1.1319, -0.6564, -0.7646, -1.2165, -0.8884,  1.2548,
          1.4511, -1.4267]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5835, -1.5243, -1.1479, -0.6564, -0.7522, -1.2054, -0.8884,  1.2542,
          1.4498, -1.4473]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5552, -1.5324, -1.1623, -0.6564, -0.7215, -1.1770, -0.8884,  1.2578,
          1.4520, -1.4569]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5387, -1.5480, -1.1687, -0.6564, -0.7036, -1.1605, -0.8884,  1.2683,
          1.4595, -1.4569]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5281, -1.5798, -1.1813, -0.6564, -0.6922, -1.1499, -0.8884,  1.2748,
          1.4640, -1.4377]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5201, -1.6178, -1.1936, -0.6564, -0.6836, -1.1418, -0.8884,  1.2750,
          1.4638, -1.4217]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5039, -1.6661, -1.2011, -0.6564, -0.6666, -1.1251, -0.8884,  1.2720,
          1.4613, -1.4115]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5075, -1.6816, -1.1733, -0.6564, -0.6700, -1.1291, -0.8884,  1.2574,
          1.4500, -1.4062]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5145, -1.6863, -1.1331, -0.6564, -0.6771, -1.1367, -0.8884,  1.2413,
          1.4376, -1.4066]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5255, -1.6690, -1.1020, -0.6564, -0.6883, -1.1484, -0.8884,  1.2465,
          1.4407, -1.4099]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5403, -1.6351, -1.0859, -0.6564, -0.7036, -1.1639, -0.8884,  1.2455,
          1.4395, -1.4043]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5513, -1.6142, -1.0771, -0.6564, -0.7150, -1.1756, -0.8884,  1.2435,
          1.4379, -1.4012]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5592, -1.5999, -1.0689, -0.6564, -0.7232, -1.1838, -0.8884,  1.2427,
          1.4372, -1.4048]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5585, -1.5877, -1.0753, -0.6564, -0.7223, -1.1832, -0.8884,  1.2257,
          1.4252, -1.4170]], dtype=torch.float64, requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.710000. Loss: 2.093180. Time: 57.373954
Validate after epoch 17 with seed 180463
Val Accuracy: 0.650000, Val Loss: 2.026450 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5425, -1.5831, -1.0797, -0.6564, -0.7050, -1.1670, -0.8884,  1.1981,
          1.4061, -1.4377]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5456, -1.5889, -1.0784, -0.6564, -0.7082, -1.1703, -0.8884,  1.1938,
          1.4030, -1.4378]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5401, -1.5788, -1.1028, -0.6564, -0.7023, -1.1647, -0.8884,  1.1904,
          1.4006, -1.4353]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5254, -1.5481, -1.1130, -0.6564, -0.6869, -1.1495, -0.8884,  1.1811,
          1.3945, -1.4392]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5182, -1.5262, -1.1273, -0.6564, -0.6793, -1.1422, -0.8884,  1.1730,
          1.3892, -1.4416]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5241, -1.5020, -1.1369, -0.6564, -0.6852, -1.1484, -0.8884,  1.1864,
          1.3977, -1.4468]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5448, -1.4716, -1.1673, -0.6564, -0.7067, -1.1702, -0.8884,  1.2136,
          1.4153, -1.4556]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5661, -1.4582, -1.1804, -0.6564, -0.7289, -1.1923, -0.8884,  1.2244,
          1.4221, -1.4636]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5766, -1.4650, -1.1681, -0.6564, -0.7398, -1.2033, -0.8884,  1.2376,
          1.4309, -1.4538]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5891, -1.4664, -1.1589, -0.6564, -0.7530, -1.2162, -0.8884,  1.2545,
          1.4424, -1.4359]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5821, -1.4873, -1.1415, -0.6564, -0.7452, -1.2093, -0.8884,  1.2554,
          1.4426, -1.4082]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5733, -1.5162, -1.1320, -0.6564, -0.7356, -1.2006, -0.8884,  1.2484,
          1.4372, -1.3956]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5539, -1.5451, -1.1306, -0.6564, -0.7147, -1.1810, -0.8884,  1.2443,
          1.4341, -1.3911]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5208, -1.5616, -1.1275, -0.6564, -0.6793, -1.1472, -0.8884,  1.2312,
          1.4245, -1.3966]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4934, -1.5629, -1.1372, -0.6564, -0.6503, -1.1190, -0.8884,  1.2241,
          1.4193, -1.4050]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4754, -1.5545, -1.1396, -0.6564, -0.6314, -1.1005, -0.8884,  1.2071,
          1.4076, -1.4144]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4659, -1.5578, -1.1311, -0.6564, -0.6213, -1.0908, -0.8884,  1.1837,
          1.3917, -1.4070]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4722, -1.5580, -1.1269, -0.6564, -0.6272, -1.0980, -0.8884,  1.1684,
          1.3813, -1.4072]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4626, -1.5964, -1.1464, -0.6564, -0.6172, -1.0879, -0.8884,  1.1457,
          1.3663, -1.4292]], dtype=torch.float64, requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.705000. Loss: 1.774701. Time: 70.307363
Validate after epoch 18 with seed 575883
Val Accuracy: 0.600000, Val Loss: 2.954231 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4839, -1.6532, -1.1160, -0.6564, -0.6381, -1.1116, -0.8884,  1.1264,
          1.3534, -1.4466]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5114, -1.6577, -1.0983, -0.6564, -0.6656, -1.1414, -0.8884,  1.1254,
          1.3526, -1.4369]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5457, -1.6471, -1.0830, -0.6564, -0.7008, -1.1780, -0.8884,  1.1320,
          1.3567, -1.4339]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5939, -1.6309, -1.0815, -0.6564, -0.7512, -1.2282, -0.8884,  1.1544,
          1.3709, -1.4297]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6231, -1.6327, -1.0871, -0.6564, -0.7817, -1.2589, -0.8884,  1.1791,
          1.3867, -1.4212]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6388, -1.6346, -1.0950, -0.6564, -0.7979, -1.2754, -0.8884,  1.2153,
          1.4103, -1.4001]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6495, -1.6332, -1.0998, -0.6564, -0.8091, -1.2866, -0.8884,  1.2408,
          1.4272, -1.3863]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6532, -1.6232, -1.1068, -0.6564, -0.8127, -1.2906, -0.8884,  1.2601,
          1.4400, -1.3744]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6407, -1.6027, -1.1079, -0.6564, -0.7982, -1.2788, -0.8884,  1.2906,
          1.4617, -1.3798]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6364, -1.5888, -1.1081, -0.6564, -0.7931, -1.2748, -0.8884,  1.3085,
          1.4744, -1.3843]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6189, -1.5823, -1.1047, -0.6564, -0.7732, -1.2576, -0.8884,  1.3145,
          1.4781, -1.3862]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6018, -1.6050, -1.1029, -0.6564, -0.7539, -1.2409, -0.8884,  1.3217,
          1.4833, -1.3900]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6088, -1.5988, -1.1129, -0.6564, -0.7614, -1.2482, -0.8884,  1.3384,
          1.4974, -1.3925]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6087, -1.6016, -1.1124, -0.6564, -0.7611, -1.2482, -0.8884,  1.3497,
          1.5070, -1.3962]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6032, -1.6060, -1.1039, -0.6564, -0.7549, -1.2429, -0.8884,  1.3545,
          1.5107, -1.3977]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6071, -1.6094, -1.0983, -0.6564, -0.7591, -1.2468, -0.8884,  1.3561,
          1.5115, -1.3935]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6150, -1.5969, -1.0931, -0.6564, -0.7679, -1.2549, -0.8884,  1.3592,
          1.5142, -1.3888]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6142, -1.5782, -1.0827, -0.6564, -0.7669, -1.2541, -0.8884,  1.3595,
          1.5140, -1.3690]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6022, -1.5756, -1.0711, -0.6564, -0.7535, -1.2422, -0.8884,  1.3614,
          1.5159, -1.3613]], dtype=torch.float64, requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.815000. Loss: 1.301448. Time: 53.026671
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.780000, Val Loss: 1.325252 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6013, -1.5742, -1.0556, -0.6564, -0.7522, -1.2415, -0.8884,  1.3710,
          1.5269, -1.3490]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5971, -1.5777, -1.0548, -0.6564, -0.7475, -1.2375, -0.8884,  1.3759,
          1.5325, -1.3368]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5932, -1.5758, -1.0539, -0.6564, -0.7431, -1.2337, -0.8884,  1.3802,
          1.5381, -1.3320]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5930, -1.5706, -1.0681, -0.6564, -0.7427, -1.2336, -0.8884,  1.3847,
          1.5448, -1.3327]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5949, -1.5541, -1.0924, -0.6564, -0.7447, -1.2356, -0.8884,  1.3903,
          1.5549, -1.3419]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6023, -1.5199, -1.1218, -0.6564, -0.7527, -1.2431, -0.8884,  1.3950,
          1.5659, -1.3620]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6027, -1.5064, -1.1370, -0.6564, -0.7532, -1.2436, -0.8884,  1.3974,
          1.5665, -1.4075]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5955, -1.4928, -1.1467, -0.6564, -0.7453, -1.2364, -0.8884,  1.3993,
          1.5715, -1.4694]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5676, -1.4918, -1.1487, -0.6564, -0.7149, -1.2083, -0.8884,  1.4004,
          1.5717, -1.5127]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5374, -1.4896, -1.1440, -0.6564, -0.6821, -1.1778, -0.8884,  1.4010,
          1.5746, -1.5405]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5326, -1.4811, -1.1416, -0.6564, -0.6765, -1.1735, -0.8884,  1.4016,
          1.5746, -1.5678]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5487, -1.4896, -1.1436, -0.6564, -0.6929, -1.1907, -0.8884,  1.4027,
          1.5695, -1.5979]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5515, -1.4993, -1.1616, -0.6564, -0.6955, -1.1941, -0.8884,  1.4035,
          1.5725, -1.6202]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5581, -1.5008, -1.1698, -0.6564, -0.7022, -1.2011, -0.8884,  1.4042,
          1.5730, -1.6374]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5672, -1.4986, -1.1785, -0.6564, -0.7117, -1.2107, -0.8884,  1.4048,
          1.5686, -1.6555]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5802, -1.5012, -1.2000, -0.6564, -0.7256, -1.2242, -0.8884,  1.4052,
          1.5635, -1.6740]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5926, -1.5148, -1.2177, -0.6564, -0.7389, -1.2369, -0.8884,  1.4048,
          1.5570, -1.6838]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6075, -1.5522, -1.2275, -0.6564, -0.7549, -1.2522, -0.8884,  1.4029,
          1.5467, -1.6881]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5937, -1.5893, -1.2409, -0.6564, -0.7395, -1.2385, -0.8884,  1.4032,
          1.5430, -1.6627]], dtype=torch.float64, requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.720000. Loss: 2.099227. Time: 48.790767
Validate after epoch 20 with seed 822616
Val Accuracy: 0.760000, Val Loss: 1.550239 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5550, -1.6067, -1.2464, -0.6564, -0.6971, -1.1997, -0.8884,  1.4016,
          1.5359, -1.6299]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5208, -1.5744, -1.2617, -0.6564, -0.6605, -1.1645, -0.8884,  1.3974,
          1.5289, -1.6015]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4838, -1.5392, -1.2808, -0.6564, -0.6213, -1.1262, -0.8884,  1.3873,
          1.5153, -1.5715]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4577, -1.5138, -1.3055, -0.6564, -0.5939, -1.0990, -0.8884,  1.3760,
          1.5015, -1.5534]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4393, -1.4954, -1.3237, -0.6564, -0.5746, -1.0797, -0.8884,  1.3656,
          1.4902, -1.5406]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4410, -1.4864, -1.3261, -0.6564, -0.5756, -1.0825, -0.8884,  1.3561,
          1.4810, -1.5348]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4336, -1.4754, -1.3211, -0.6564, -0.5678, -1.0747, -0.8884,  1.3410,
          1.4686, -1.5348]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4530, -1.4777, -1.3083, -0.6564, -0.5865, -1.0969, -0.8884,  1.3307,
          1.4604, -1.5361]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4751, -1.4848, -1.3168, -0.6564, -0.6082, -1.1217, -0.8884,  1.3319,
          1.4603, -1.5426]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5055, -1.5096, -1.3056, -0.6564, -0.6386, -1.1554, -0.8884,  1.3327,
          1.4603, -1.5311]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5109, -1.5214, -1.3050, -0.6564, -0.6434, -1.1620, -0.8884,  1.3293,
          1.4578, -1.5073]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5038, -1.5397, -1.3118, -0.6564, -0.6354, -1.1549, -0.8884,  1.3135,
          1.4473, -1.4810]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5007, -1.5545, -1.3162, -0.6564, -0.6318, -1.1519, -0.8884,  1.2982,
          1.4373, -1.4578]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4987, -1.5644, -1.3174, -0.6564, -0.6295, -1.1499, -0.8884,  1.2856,
          1.4292, -1.4412]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5037, -1.5660, -1.3047, -0.6564, -0.6346, -1.1554, -0.8884,  1.2747,
          1.4223, -1.4327]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5098, -1.5465, -1.3041, -0.6564, -0.6409, -1.1620, -0.8884,  1.2909,
          1.4322, -1.4187]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5086, -1.5347, -1.2943, -0.6564, -0.6396, -1.1608, -0.8884,  1.3050,
          1.4409, -1.3996]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5006, -1.5387, -1.2729, -0.6564, -0.6311, -1.1524, -0.8884,  1.3229,
          1.4522, -1.3835]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5016, -1.5303, -1.2596, -0.6564, -0.6321, -1.1535, -0.8884,  1.3290,
          1.4559, -1.3721]], dtype=torch.float64, requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.735000. Loss: 1.580662. Time: 52.158166
Validate after epoch 21 with seed 519531
Val Accuracy: 0.820000, Val Loss: 0.931620 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5158, -1.4977, -1.2046, -0.6564, -0.6469, -1.1688, -0.8884,  1.3307,
          1.4567, -1.3518]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5187, -1.4843, -1.1965, -0.6564, -0.6498, -1.1719, -0.8884,  1.3333,
          1.4584, -1.3462]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5168, -1.4741, -1.1986, -0.6564, -0.6479, -1.1700, -0.8884,  1.3321,
          1.4575, -1.3463]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5190, -1.4672, -1.2005, -0.6564, -0.6501, -1.1722, -0.8884,  1.3287,
          1.4552, -1.3495]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5279, -1.4660, -1.1976, -0.6564, -0.6595, -1.1817, -0.8884,  1.3328,
          1.4579, -1.3615]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5341, -1.4735, -1.2016, -0.6564, -0.6661, -1.1883, -0.8884,  1.3401,
          1.4626, -1.3749]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5378, -1.4812, -1.2015, -0.6564, -0.6700, -1.1922, -0.8884,  1.3299,
          1.4557, -1.3982]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5341, -1.4933, -1.2207, -0.6564, -0.6660, -1.1884, -0.8884,  1.3202,
          1.4492, -1.4249]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5326, -1.5073, -1.2251, -0.6564, -0.6643, -1.1869, -0.8884,  1.3158,
          1.4461, -1.4571]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5385, -1.5204, -1.2155, -0.6564, -0.6706, -1.1931, -0.8884,  1.2952,
          1.4327, -1.4765]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5504, -1.5387, -1.2066, -0.6564, -0.6833, -1.2055, -0.8884,  1.2755,
          1.4197, -1.4793]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5488, -1.5641, -1.1992, -0.6564, -0.6815, -1.2040, -0.8884,  1.2570,
          1.4078, -1.4772]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5440, -1.5922, -1.1853, -0.6564, -0.6762, -1.1990, -0.8884,  1.2323,
          1.3920, -1.4888]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5636, -1.6134, -1.1772, -0.6564, -0.6972, -1.2194, -0.8884,  1.2119,
          1.3791, -1.5022]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5875, -1.6097, -1.1829, -0.6564, -0.7230, -1.2441, -0.8884,  1.2160,
          1.3813, -1.4842]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5961, -1.6101, -1.1860, -0.6564, -0.7322, -1.2531, -0.8884,  1.2261,
          1.3875, -1.4670]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5984, -1.6085, -1.1828, -0.6564, -0.7345, -1.2556, -0.8884,  1.2289,
          1.3891, -1.4500]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5857, -1.6068, -1.1708, -0.6564, -0.7203, -1.2431, -0.8884,  1.2309,
          1.3903, -1.4243]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5837, -1.6106, -1.1622, -0.6564, -0.7178, -1.2411, -0.8884,  1.2341,
          1.3922, -1.4049]], dtype=torch.float64, requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.780000. Loss: 1.637284. Time: 54.437589
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.690000, Val Loss: 2.141984 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5790, -1.6109, -1.1284, -0.6564, -0.7125, -1.2366, -0.8884,  1.2889,
          1.4270, -1.4071]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5801, -1.6163, -1.1246, -0.6564, -0.7137, -1.2378, -0.8884,  1.3083,
          1.4394, -1.4060]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5788, -1.6190, -1.1279, -0.6564, -0.7122, -1.2364, -0.8884,  1.3294,
          1.4532, -1.4003]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5688, -1.6213, -1.1325, -0.6564, -0.7013, -1.2264, -0.8884,  1.3447,
          1.4633, -1.3951]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5537, -1.6049, -1.1418, -0.6564, -0.6847, -1.2110, -0.8884,  1.3589,
          1.4728, -1.3980]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5451, -1.5950, -1.1547, -0.6564, -0.6753, -1.2023, -0.8884,  1.3702,
          1.4806, -1.3977]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5268, -1.5856, -1.1577, -0.6564, -0.6556, -1.1834, -0.8884,  1.3700,
          1.4800, -1.4196]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5027, -1.5637, -1.1354, -0.6564, -0.6298, -1.1584, -0.8884,  1.3653,
          1.4762, -1.4369]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4971, -1.5465, -1.1130, -0.6564, -0.6235, -1.1529, -0.8884,  1.3719,
          1.4808, -1.4332]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4986, -1.5272, -1.1052, -0.6564, -0.6247, -1.1549, -0.8884,  1.3842,
          1.4896, -1.4225]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5074, -1.5163, -1.1056, -0.6564, -0.6337, -1.1645, -0.8884,  1.3949,
          1.4975, -1.4172]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5058, -1.5118, -1.1088, -0.6564, -0.6319, -1.1629, -0.8884,  1.3971,
          1.4988, -1.4171]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5068, -1.5154, -1.1159, -0.6564, -0.6328, -1.1641, -0.8884,  1.3969,
          1.4983, -1.4161]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5254, -1.5210, -1.1135, -0.6564, -0.6524, -1.1839, -0.8884,  1.3929,
          1.4950, -1.4154]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5520, -1.5343, -1.1150, -0.6564, -0.6803, -1.2120, -0.8884,  1.3835,
          1.4875, -1.4100]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5645, -1.5502, -1.1246, -0.6564, -0.6934, -1.2253, -0.8884,  1.3804,
          1.4849, -1.3999]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5699, -1.5616, -1.1216, -0.6564, -0.6989, -1.2312, -0.8884,  1.3807,
          1.4849, -1.3995]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5847, -1.5682, -1.1306, -0.6564, -0.7150, -1.2465, -0.8884,  1.3884,
          1.4905, -1.4202]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5989, -1.5730, -1.1344, -0.6564, -0.7305, -1.2610, -0.8884,  1.3945,
          1.4950, -1.4299]], dtype=torch.float64, requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.790000. Loss: 1.490227. Time: 69.874456
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.810000, Val Loss: 1.556887 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6244, -1.5794, -1.1400, -0.6564, -0.7586, -1.2869, -0.8884,  1.4264,
          1.5200, -1.4200]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6350, -1.5866, -1.1402, -0.6564, -0.7704, -1.2975, -0.8884,  1.4351,
          1.5267, -1.4221]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6366, -1.5734, -1.1656, -0.6564, -0.7721, -1.2992, -0.8884,  1.4443,
          1.5348, -1.4373]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6319, -1.5626, -1.1849, -0.6564, -0.7666, -1.2947, -0.8884,  1.4499,
          1.5398, -1.4435]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6229, -1.5589, -1.1944, -0.6564, -0.7564, -1.2859, -0.8884,  1.4505,
          1.5391, -1.4461]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6064, -1.5516, -1.1851, -0.6564, -0.7377, -1.2697, -0.8884,  1.4483,
          1.5353, -1.4426]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5910, -1.5579, -1.1711, -0.6564, -0.7203, -1.2544, -0.8884,  1.4478,
          1.5340, -1.4451]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5706, -1.5615, -1.1546, -0.6564, -0.6976, -1.2340, -0.8884,  1.4487,
          1.5345, -1.4449]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5485, -1.5511, -1.1500, -0.6564, -0.6731, -1.2117, -0.8884,  1.4473,
          1.5326, -1.4504]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5309, -1.5421, -1.1516, -0.6564, -0.6537, -1.1938, -0.8884,  1.4479,
          1.5330, -1.4490]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5202, -1.5436, -1.1453, -0.6564, -0.6420, -1.1830, -0.8884,  1.4476,
          1.5325, -1.4498]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5167, -1.5472, -1.1213, -0.6564, -0.6380, -1.1795, -0.8884,  1.4427,
          1.5271, -1.4574]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5204, -1.5441, -1.1087, -0.6564, -0.6418, -1.1836, -0.8884,  1.4393,
          1.5234, -1.4532]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5311, -1.5343, -1.1085, -0.6564, -0.6531, -1.1951, -0.8884,  1.4297,
          1.5141, -1.4365]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5440, -1.5350, -1.1112, -0.6564, -0.6667, -1.2087, -0.8884,  1.4276,
          1.5116, -1.4192]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5421, -1.5370, -1.1158, -0.6564, -0.6646, -1.2069, -0.8884,  1.4252,
          1.5091, -1.4169]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5277, -1.5371, -1.1161, -0.6564, -0.6490, -1.1921, -0.8884,  1.4244,
          1.5081, -1.4167]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5161, -1.5465, -1.1198, -0.6564, -0.6363, -1.1800, -0.8884,  1.4242,
          1.5077, -1.4092]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5083, -1.5706, -1.1288, -0.6564, -0.6279, -1.1719, -0.8884,  1.4336,
          1.5149, -1.4051]], dtype=torch.float64, requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.800000. Loss: 1.449446. Time: 46.285724
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.690000, Val Loss: 2.487394 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5027, -1.6039, -1.1496, -0.6564, -0.6218, -1.1661, -0.8884,  1.4559,
          1.5331, -1.4144]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5112, -1.6166, -1.1588, -0.6564, -0.6307, -1.1753, -0.8884,  1.4678,
          1.5437, -1.4146]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5174, -1.6350, -1.1685, -0.6564, -0.6372, -1.1820, -0.8884,  1.4739,
          1.5487, -1.4193]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5303, -1.6536, -1.1687, -0.6564, -0.6507, -1.1957, -0.8884,  1.4773,
          1.5514, -1.4176]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5425, -1.6527, -1.1568, -0.6564, -0.6636, -1.2087, -0.8884,  1.4785,
          1.5516, -1.4142]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5459, -1.6465, -1.1445, -0.6564, -0.6673, -1.2124, -0.8884,  1.4800,
          1.5530, -1.4116]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5510, -1.6319, -1.1349, -0.6564, -0.6726, -1.2177, -0.8884,  1.4819,
          1.5555, -1.4057]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5595, -1.6071, -1.1264, -0.6564, -0.6818, -1.2266, -0.8884,  1.4848,
          1.5602, -1.3837]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5631, -1.5679, -1.1184, -0.6564, -0.6856, -1.2304, -0.8884,  1.4869,
          1.5641, -1.3617]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5512, -1.4949, -1.1170, -0.6564, -0.6726, -1.2182, -0.8884,  1.4871,
          1.5613, -1.3551]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5414, -1.4716, -1.1086, -0.6564, -0.6618, -1.2082, -0.8884,  1.4864,
          1.5568, -1.3552]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5372, -1.4756, -1.0995, -0.6564, -0.6572, -1.2040, -0.8884,  1.4865,
          1.5549, -1.3480]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5326, -1.4769, -1.1000, -0.6564, -0.6521, -1.1992, -0.8884,  1.4874,
          1.5551, -1.3397]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5250, -1.4822, -1.1115, -0.6564, -0.6439, -1.1914, -0.8884,  1.4894,
          1.5578, -1.3260]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5396, -1.4798, -1.1197, -0.6564, -0.6594, -1.2068, -0.8884,  1.4902,
          1.5585, -1.3120]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5609, -1.5087, -1.1129, -0.6564, -0.6824, -1.2292, -0.8884,  1.4905,
          1.5585, -1.3105]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5790, -1.5474, -1.1102, -0.6564, -0.7018, -1.2480, -0.8884,  1.4903,
          1.5579, -1.3104]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5908, -1.5769, -1.1200, -0.6564, -0.7146, -1.2603, -0.8884,  1.4901,
          1.5572, -1.3148]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5945, -1.6039, -1.1130, -0.6564, -0.7185, -1.2643, -0.8884,  1.4916,
          1.5599, -1.3264]], dtype=torch.float64, requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.750000. Loss: 1.704783. Time: 46.289612
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.710000, Val Loss: 2.576025 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5969, -1.6176, -1.1013, -0.6564, -0.7209, -1.2669, -0.8884,  1.4914,
          1.5583, -1.3689]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5990, -1.6234, -1.1136, -0.6564, -0.7232, -1.2691, -0.8884,  1.4909,
          1.5565, -1.3843]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6007, -1.6265, -1.1171, -0.6564, -0.7250, -1.2708, -0.8884,  1.4918,
          1.5575, -1.3970]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6057, -1.6216, -1.0999, -0.6564, -0.7306, -1.2759, -0.8884,  1.4916,
          1.5568, -1.4075]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6018, -1.6170, -1.0869, -0.6564, -0.7261, -1.2720, -0.8884,  1.4909,
          1.5549, -1.4088]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5919, -1.6163, -1.0890, -0.6564, -0.7151, -1.2621, -0.8884,  1.4908,
          1.5543, -1.4081]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5797, -1.6087, -1.1035, -0.6564, -0.7014, -1.2499, -0.8884,  1.4901,
          1.5530, -1.4230]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5740, -1.5935, -1.1085, -0.6564, -0.6950, -1.2443, -0.8884,  1.4900,
          1.5527, -1.4320]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5660, -1.5960, -1.1118, -0.6564, -0.6860, -1.2361, -0.8884,  1.4910,
          1.5541, -1.4507]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5522, -1.5917, -1.1180, -0.6564, -0.6709, -1.2220, -0.8884,  1.4898,
          1.5519, -1.4634]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5405, -1.5903, -1.1250, -0.6564, -0.6581, -1.2101, -0.8884,  1.4881,
          1.5492, -1.4790]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5271, -1.5809, -1.1452, -0.6564, -0.6435, -1.1963, -0.8884,  1.4835,
          1.5432, -1.4825]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5156, -1.5644, -1.1718, -0.6564, -0.6311, -1.1843, -0.8884,  1.4794,
          1.5380, -1.4801]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5070, -1.5441, -1.1903, -0.6564, -0.6218, -1.1754, -0.8884,  1.4756,
          1.5336, -1.4880]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4963, -1.5376, -1.1811, -0.6564, -0.6103, -1.1640, -0.8884,  1.4755,
          1.5329, -1.4912]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4858, -1.5301, -1.1685, -0.6564, -0.5992, -1.1528, -0.8884,  1.4782,
          1.5348, -1.4942]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4791, -1.5136, -1.1631, -0.6564, -0.5921, -1.1457, -0.8884,  1.4784,
          1.5346, -1.4876]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4835, -1.5055, -1.1399, -0.6564, -0.5965, -1.1506, -0.8884,  1.4825,
          1.5379, -1.4885]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4884, -1.5074, -1.1080, -0.6564, -0.6016, -1.1561, -0.8884,  1.4879,
          1.5426, -1.4936]], dtype=torch.float64, requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.795000. Loss: 1.446205. Time: 46.326344
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.760000, Val Loss: 1.260545 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5058, -1.5261, -1.0681, -0.6564, -0.6196, -1.1751, -0.8884,  1.5000,
          1.5538, -1.5258]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5206, -1.5339, -1.0712, -0.6564, -0.6350, -1.1910, -0.8884,  1.5023,
          1.5556, -1.5412]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5332, -1.5352, -1.0746, -0.6564, -0.6483, -1.2046, -0.8884,  1.5040,
          1.5571, -1.5358]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5503, -1.5245, -1.0778, -0.6564, -0.6664, -1.2226, -0.8884,  1.5052,
          1.5584, -1.5147]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5629, -1.5138, -1.0821, -0.6564, -0.6798, -1.2359, -0.8884,  1.5064,
          1.5600, -1.5053]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5731, -1.5107, -1.0802, -0.6564, -0.6907, -1.2466, -0.8884,  1.5067,
          1.5599, -1.4875]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5711, -1.5203, -1.0688, -0.6564, -0.6883, -1.2448, -0.8884,  1.5063,
          1.5587, -1.4702]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5716, -1.5296, -1.0672, -0.6564, -0.6888, -1.2455, -0.8884,  1.5044,
          1.5548, -1.4463]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5687, -1.5330, -1.0897, -0.6564, -0.6854, -1.2426, -0.8884,  1.5051,
          1.5550, -1.4251]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5580, -1.5372, -1.1026, -0.6564, -0.6737, -1.2318, -0.8884,  1.5056,
          1.5553, -1.4175]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5516, -1.5437, -1.1038, -0.6564, -0.6666, -1.2252, -0.8884,  1.5052,
          1.5543, -1.4183]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5476, -1.5374, -1.1021, -0.6564, -0.6622, -1.2212, -0.8884,  1.5053,
          1.5542, -1.4181]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5410, -1.5331, -1.0948, -0.6564, -0.6550, -1.2144, -0.8884,  1.5060,
          1.5549, -1.4212]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5422, -1.5373, -1.0723, -0.6564, -0.6562, -1.2157, -0.8884,  1.5079,
          1.5574, -1.4219]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5376, -1.5528, -1.0563, -0.6564, -0.6512, -1.2110, -0.8884,  1.5074,
          1.5563, -1.4311]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5462, -1.5644, -1.0389, -0.6564, -0.6604, -1.2200, -0.8884,  1.5041,
          1.5514, -1.4727]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5549, -1.5883, -1.0275, -0.6564, -0.6698, -1.2291, -0.8884,  1.4957,
          1.5412, -1.5021]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5550, -1.6026, -1.0195, -0.6564, -0.6698, -1.2292, -0.8884,  1.4894,
          1.5339, -1.5036]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5242, -1.6011, -1.0102, -0.6564, -0.6364, -1.1974, -0.8884,  1.4875,
          1.5309, -1.5162]], dtype=torch.float64, requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.750000. Loss: 1.491799. Time: 52.396503
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.780000, Val Loss: 2.043603 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4893, -1.6006, -0.9933, -0.6564, -0.5984, -1.1618, -0.8884,  1.4843,
          1.5271, -1.5296]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4863, -1.5927, -0.9904, -0.6564, -0.5949, -1.1590, -0.8884,  1.4798,
          1.5238, -1.5191]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4896, -1.5888, -0.9865, -0.6564, -0.5981, -1.1629, -0.8884,  1.4758,
          1.5209, -1.5202]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4867, -1.5878, -0.9714, -0.6564, -0.5948, -1.1599, -0.8884,  1.4715,
          1.5181, -1.5210]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4821, -1.5935, -0.9575, -0.6564, -0.5900, -1.1552, -0.8884,  1.4677,
          1.5155, -1.5186]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4802, -1.5974, -0.9512, -0.6564, -0.5879, -1.1532, -0.8884,  1.4646,
          1.5135, -1.5174]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4863, -1.6042, -0.9470, -0.6564, -0.5942, -1.1599, -0.8884,  1.4632,
          1.5126, -1.5137]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5002, -1.6035, -0.9421, -0.6564, -0.6086, -1.1750, -0.8884,  1.4596,
          1.5103, -1.5159]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5289, -1.5930, -0.9548, -0.6564, -0.6385, -1.2059, -0.8884,  1.4621,
          1.5119, -1.5328]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5414, -1.5955, -0.9593, -0.6564, -0.6514, -1.2196, -0.8884,  1.4705,
          1.5170, -1.5432]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5502, -1.6068, -0.9645, -0.6564, -0.6605, -1.2290, -0.8884,  1.4723,
          1.5181, -1.5445]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5584, -1.6327, -0.9738, -0.6564, -0.6692, -1.2378, -0.8884,  1.4735,
          1.5188, -1.5397]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5621, -1.6514, -0.9883, -0.6564, -0.6731, -1.2418, -0.8884,  1.4746,
          1.5194, -1.5411]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5611, -1.6662, -1.0130, -0.6564, -0.6719, -1.2409, -0.8884,  1.4719,
          1.5177, -1.5482]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5662, -1.6565, -1.0414, -0.6564, -0.6774, -1.2462, -0.8884,  1.4648,
          1.5133, -1.5522]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5551, -1.6545, -1.0740, -0.6564, -0.6651, -1.2348, -0.8884,  1.4640,
          1.5127, -1.5765]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5351, -1.6454, -1.0825, -0.6564, -0.6432, -1.2143, -0.8884,  1.4681,
          1.5153, -1.5869]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5251, -1.6269, -1.0997, -0.6564, -0.6322, -1.2042, -0.8884,  1.4691,
          1.5158, -1.6053]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5233, -1.6248, -1.1303, -0.6564, -0.6301, -1.2025, -0.8884,  1.4726,
          1.5180, -1.5937]], dtype=torch.float64, requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.805000. Loss: 1.470760. Time: 54.538541
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.820000, Val Loss: 1.372054 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5157, -1.6041, -1.1254, -0.6564, -0.6218, -1.1947, -0.8884,  1.4730,
          1.5181, -1.5696]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5028, -1.5987, -1.1155, -0.6564, -0.6079, -1.1810, -0.8884,  1.4609,
          1.5105, -1.5538]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4831, -1.5874, -1.1056, -0.6564, -0.5870, -1.1600, -0.8884,  1.4480,
          1.5025, -1.5421]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4891, -1.5765, -1.1102, -0.6564, -0.5930, -1.1669, -0.8884,  1.4430,
          1.4993, -1.5622]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5030, -1.5665, -1.1163, -0.6564, -0.6073, -1.1821, -0.8884,  1.4430,
          1.4992, -1.5774]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5138, -1.5569, -1.1149, -0.6564, -0.6185, -1.1940, -0.8884,  1.4359,
          1.4948, -1.5786]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5130, -1.5322, -1.1178, -0.6564, -0.6175, -1.1934, -0.8884,  1.4302,
          1.4913, -1.5469]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5137, -1.5160, -1.1225, -0.6564, -0.6180, -1.1942, -0.8884,  1.4278,
          1.4899, -1.5494]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5361, -1.5086, -1.1372, -0.6564, -0.6419, -1.2181, -0.8884,  1.4229,
          1.4869, -1.5439]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5580, -1.5090, -1.1474, -0.6564, -0.6652, -1.2412, -0.8884,  1.4130,
          1.4809, -1.5339]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5761, -1.5173, -1.1475, -0.6564, -0.6847, -1.2602, -0.8884,  1.3925,
          1.4686, -1.5388]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5866, -1.5302, -1.1441, -0.6564, -0.6960, -1.2712, -0.8884,  1.3812,
          1.4617, -1.5408]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5918, -1.5500, -1.1317, -0.6564, -0.7014, -1.2767, -0.8884,  1.3867,
          1.4650, -1.5471]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5920, -1.5602, -1.1238, -0.6564, -0.7015, -1.2770, -0.8884,  1.3895,
          1.4667, -1.5372]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5850, -1.5542, -1.1210, -0.6564, -0.6935, -1.2701, -0.8884,  1.3797,
          1.4607, -1.5199]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5804, -1.5522, -1.1172, -0.6564, -0.6883, -1.2655, -0.8884,  1.3686,
          1.4540, -1.5109]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5822, -1.5575, -1.1208, -0.6564, -0.6903, -1.2675, -0.8884,  1.3494,
          1.4424, -1.5062]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5685, -1.5687, -1.1252, -0.6564, -0.6750, -1.2537, -0.8884,  1.3475,
          1.4412, -1.5045]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5440, -1.5779, -1.1288, -0.6564, -0.6478, -1.2288, -0.8884,  1.3651,
          1.4519, -1.4870]], dtype=torch.float64, requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.790000. Loss: 1.293167. Time: 56.794030
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.800000, Val Loss: 1.382250 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5234, -1.5712, -1.1443, -0.6564, -0.6249, -1.2079, -0.8884,  1.3887,
          1.4663, -1.4874]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4971, -1.5610, -1.1587, -0.6564, -0.5965, -1.1806, -0.8884,  1.3855,
          1.4642, -1.4805]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4763, -1.5591, -1.1691, -0.6564, -0.5741, -1.1587, -0.8884,  1.3895,
          1.4667, -1.4751]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4673, -1.5473, -1.1708, -0.6564, -0.5643, -1.1495, -0.8884,  1.3810,
          1.4614, -1.4859]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4785, -1.5379, -1.1707, -0.6564, -0.5755, -1.1623, -0.8884,  1.3814,
          1.4616, -1.5021]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4905, -1.5359, -1.1695, -0.6564, -0.5875, -1.1758, -0.8884,  1.3726,
          1.4561, -1.4999]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4937, -1.5464, -1.1538, -0.6564, -0.5906, -1.1797, -0.8884,  1.3771,
          1.4590, -1.4958]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5069, -1.5662, -1.1390, -0.6564, -0.6043, -1.1942, -0.8884,  1.3749,
          1.4575, -1.4926]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5152, -1.5764, -1.1295, -0.6564, -0.6130, -1.2032, -0.8884,  1.3833,
          1.4628, -1.4899]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5254, -1.5966, -1.1187, -0.6564, -0.6237, -1.2142, -0.8884,  1.3955,
          1.4705, -1.4947]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5439, -1.6302, -1.0984, -0.6564, -0.6435, -1.2338, -0.8884,  1.3966,
          1.4711, -1.5054]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5477, -1.6558, -1.0583, -0.6564, -0.6474, -1.2380, -0.8884,  1.3889,
          1.4661, -1.5090]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5298, -1.6595, -1.0478, -0.6564, -0.6276, -1.2196, -0.8884,  1.3919,
          1.4680, -1.5076]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4992, -1.6491, -1.0465, -0.6564, -0.5942, -1.1880, -0.8884,  1.3844,
          1.4631, -1.5032]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4795, -1.6358, -1.0486, -0.6564, -0.5729, -1.1677, -0.8884,  1.3760,
          1.4576, -1.4905]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4751, -1.6375, -1.0638, -0.6564, -0.5677, -1.1635, -0.8884,  1.3774,
          1.4585, -1.4893]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4588, -1.6302, -1.0598, -0.6564, -0.5504, -1.1460, -0.8884,  1.3638,
          1.4497, -1.5017]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4368, -1.6225, -1.0520, -0.6564, -0.5275, -1.1219, -0.8884,  1.3413,
          1.4351, -1.5069]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4460, -1.6094, -1.0534, -0.6564, -0.5362, -1.1329, -0.8884,  1.3350,
          1.4310, -1.5001]], dtype=torch.float64, requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.740000. Loss: 2.145920. Time: 60.468814
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.710000, Val Loss: 1.750254 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5008, -1.5750, -1.0575, -0.6564, -0.5917, -1.1950, -0.8884,  1.3072,
          1.4130, -1.4917]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5195, -1.5717, -1.0617, -0.6564, -0.6108, -1.2159, -0.8884,  1.3043,
          1.4111, -1.4899]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5271, -1.5657, -1.0651, -0.6564, -0.6184, -1.2246, -0.8884,  1.3121,
          1.4161, -1.4907]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5255, -1.5464, -1.0615, -0.6564, -0.6162, -1.2234, -0.8884,  1.3342,
          1.4304, -1.5063]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5250, -1.5356, -1.0580, -0.6564, -0.6153, -1.2232, -0.8884,  1.3473,
          1.4388, -1.5152]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5156, -1.5420, -1.0615, -0.6564, -0.6049, -1.2134, -0.8884,  1.3765,
          1.4580, -1.5268]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5058, -1.5433, -1.0706, -0.6564, -0.5941, -1.2032, -0.8884,  1.4006,
          1.4739, -1.5406]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5162, -1.5409, -1.0614, -0.6564, -0.6052, -1.2144, -0.8884,  1.4321,
          1.4952, -1.5463]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5365, -1.5409, -1.0562, -0.6564, -0.6271, -1.2362, -0.8884,  1.4546,
          1.5104, -1.5457]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5408, -1.5306, -1.0613, -0.6564, -0.6315, -1.2410, -0.8884,  1.4733,
          1.5235, -1.5400]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5406, -1.5232, -1.0483, -0.6564, -0.6312, -1.2411, -0.8884,  1.4845,
          1.5312, -1.5306]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5391, -1.5108, -1.0409, -0.6564, -0.6293, -1.2397, -0.8884,  1.4920,
          1.5365, -1.5239]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5481, -1.5104, -1.0320, -0.6564, -0.6392, -1.2491, -0.8884,  1.4981,
          1.5412, -1.5113]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5676, -1.5127, -1.0334, -0.6564, -0.6607, -1.2694, -0.8884,  1.5038,
          1.5458, -1.5005]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5761, -1.5172, -1.0457, -0.6564, -0.6700, -1.2782, -0.8884,  1.5055,
          1.5468, -1.4915]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5829, -1.5106, -1.0608, -0.6564, -0.6775, -1.2853, -0.8884,  1.5024,
          1.5431, -1.5225]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5733, -1.5146, -1.0721, -0.6564, -0.6664, -1.2758, -0.8884,  1.5017,
          1.5419, -1.5377]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5410, -1.5369, -1.0764, -0.6564, -0.6301, -1.2431, -0.8884,  1.4987,
          1.5388, -1.5552]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5152, -1.5497, -1.0851, -0.6564, -0.6013, -1.2170, -0.8884,  1.4978,
          1.5377, -1.5678]], dtype=torch.float64, requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.815000. Loss: 1.798854. Time: 69.005828
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.780000, Val Loss: 1.355001 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4852, -1.5517, -1.1162, -0.6564, -0.5680, -1.1861, -0.8884,  1.4969,
          1.5367, -1.5698]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4706, -1.5488, -1.1341, -0.6564, -0.5519, -1.1707, -0.8884,  1.4892,
          1.5300, -1.5458]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4653, -1.5301, -1.1595, -0.6564, -0.5460, -1.1654, -0.8884,  1.4883,
          1.5290, -1.5059]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4697, -1.5134, -1.1772, -0.6564, -0.5504, -1.1707, -0.8884,  1.4874,
          1.5280, -1.4792]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4733, -1.5130, -1.1811, -0.6564, -0.5540, -1.1748, -0.8884,  1.4909,
          1.5304, -1.4653]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4902, -1.5139, -1.1832, -0.6564, -0.5718, -1.1935, -0.8884,  1.4998,
          1.5372, -1.4540]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5244, -1.5206, -1.1656, -0.6564, -0.6082, -1.2307, -0.8884,  1.5037,
          1.5399, -1.4423]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5428, -1.5101, -1.1495, -0.6564, -0.6274, -1.2509, -0.8884,  1.4976,
          1.5346, -1.4140]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5400, -1.5101, -1.1345, -0.6564, -0.6237, -1.2486, -0.8884,  1.4923,
          1.5300, -1.3977]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.5064, -1.1230, -0.6564, -0.6233, -1.2490, -0.8884,  1.4867,
          1.5254, -1.3882]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5448, -1.5042, -1.1132, -0.6564, -0.6285, -1.2543, -0.8884,  1.4805,
          1.5206, -1.3775]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5510, -1.5063, -1.1039, -0.6564, -0.6353, -1.2609, -0.8884,  1.4759,
          1.5171, -1.3680]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5627, -1.5233, -1.1033, -0.6564, -0.6482, -1.2730, -0.8884,  1.4789,
          1.5189, -1.3615]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5745, -1.5364, -1.1021, -0.6564, -0.6614, -1.2853, -0.8884,  1.4757,
          1.5166, -1.3530]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5774, -1.5478, -1.1072, -0.6564, -0.6645, -1.2883, -0.8884,  1.4627,
          1.5076, -1.3479]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5593, -1.5702, -1.0930, -0.6564, -0.6439, -1.2702, -0.8884,  1.4424,
          1.4938, -1.3325]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5517, -1.5878, -1.0781, -0.6564, -0.6352, -1.2626, -0.8884,  1.4270,
          1.4835, -1.3178]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5571, -1.6048, -1.0656, -0.6564, -0.6410, -1.2683, -0.8884,  1.4376,
          1.4901, -1.3100]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5500, -1.6194, -1.0644, -0.6564, -0.6330, -1.2612, -0.8884,  1.4534,
          1.5001, -1.3086]], dtype=torch.float64, requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.765000. Loss: 1.591280. Time: 53.343727
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.710000, Val Loss: 2.793743 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5387, -1.6255, -1.0652, -0.6564, -0.6203, -1.2498, -0.8884,  1.4544,
          1.5005, -1.3149]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5276, -1.6111, -1.0693, -0.6564, -0.6079, -1.2383, -0.8884,  1.4384,
          1.4900, -1.3123]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5184, -1.6130, -1.0755, -0.6564, -0.5977, -1.2288, -0.8884,  1.4284,
          1.4835, -1.3001]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5116, -1.6165, -1.0849, -0.6564, -0.5902, -1.2218, -0.8884,  1.4238,
          1.4804, -1.3042]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5014, -1.6325, -1.1289, -0.6564, -0.5790, -1.2110, -0.8884,  1.4304,
          1.4846, -1.3356]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5034, -1.6330, -1.1594, -0.6564, -0.5811, -1.2133, -0.8884,  1.4210,
          1.4785, -1.3676]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5077, -1.6216, -1.1703, -0.6564, -0.5857, -1.2180, -0.8884,  1.4101,
          1.4714, -1.3822]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5081, -1.5915, -1.2058, -0.6564, -0.5860, -1.2184, -0.8884,  1.4168,
          1.4757, -1.3948]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5066, -1.5723, -1.2342, -0.6564, -0.5844, -1.2169, -0.8884,  1.4339,
          1.4868, -1.4137]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5089, -1.5487, -1.2492, -0.6564, -0.5868, -1.2194, -0.8884,  1.4556,
          1.5009, -1.4368]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5130, -1.5225, -1.2581, -0.6564, -0.5913, -1.2238, -0.8884,  1.4664,
          1.5078, -1.4547]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5073, -1.5147, -1.2675, -0.6564, -0.5851, -1.2178, -0.8884,  1.4752,
          1.5135, -1.4765]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5060, -1.5132, -1.2502, -0.6564, -0.5836, -1.2165, -0.8884,  1.4741,
          1.5127, -1.4782]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5172, -1.5088, -1.2337, -0.6564, -0.5956, -1.2285, -0.8884,  1.4703,
          1.5101, -1.4727]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5293, -1.5039, -1.2218, -0.6564, -0.6087, -1.2413, -0.8884,  1.4712,
          1.5107, -1.4675]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5396, -1.5075, -1.2101, -0.6564, -0.6199, -1.2523, -0.8884,  1.4719,
          1.5111, -1.4574]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5424, -1.5130, -1.2044, -0.6564, -0.6228, -1.2553, -0.8884,  1.4764,
          1.5141, -1.4434]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5453, -1.5216, -1.2018, -0.6564, -0.6259, -1.2585, -0.8884,  1.4796,
          1.5162, -1.4297]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5352, -1.5422, -1.2065, -0.6564, -0.6147, -1.2481, -0.8884,  1.4774,
          1.5147, -1.4238]], dtype=torch.float64, requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.800000. Loss: 1.747315. Time: 54.253980
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.790000, Val Loss: 1.771354 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5379, -1.5430, -1.2206, -0.6564, -0.6175, -1.2511, -0.8884,  1.4676,
          1.5081, -1.4254]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5344, -1.5324, -1.2450, -0.6564, -0.6137, -1.2475, -0.8884,  1.4682,
          1.5085, -1.4202]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5303, -1.5267, -1.2621, -0.6564, -0.6091, -1.2432, -0.8884,  1.4725,
          1.5113, -1.4150]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5248, -1.5407, -1.2519, -0.6564, -0.6031, -1.2375, -0.8884,  1.4682,
          1.5085, -1.4187]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5299, -1.5696, -1.2237, -0.6564, -0.6086, -1.2429, -0.8884,  1.4644,
          1.5058, -1.4159]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5382, -1.5945, -1.2090, -0.6564, -0.6176, -1.2517, -0.8884,  1.4589,
          1.5022, -1.4244]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5432, -1.6024, -1.1918, -0.6564, -0.6230, -1.2569, -0.8884,  1.4575,
          1.5012, -1.4275]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5425, -1.5977, -1.1727, -0.6564, -0.6222, -1.2563, -0.8884,  1.4531,
          1.4983, -1.4299]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5310, -1.5882, -1.1693, -0.6564, -0.6094, -1.2445, -0.8884,  1.4699,
          1.5094, -1.4412]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5367, -1.5853, -1.1632, -0.6564, -0.6156, -1.2506, -0.8884,  1.4816,
          1.5171, -1.4422]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5390, -1.5909, -1.1653, -0.6564, -0.6180, -1.2530, -0.8884,  1.4816,
          1.5170, -1.4418]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5399, -1.5942, -1.1666, -0.6564, -0.6189, -1.2540, -0.8884,  1.4808,
          1.5164, -1.4427]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5382, -1.5951, -1.1686, -0.6564, -0.6170, -1.2523, -0.8884,  1.4752,
          1.5126, -1.4465]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5346, -1.5976, -1.1777, -0.6564, -0.6131, -1.2486, -0.8884,  1.4713,
          1.5099, -1.4516]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5302, -1.5920, -1.1845, -0.6564, -0.6082, -1.2440, -0.8884,  1.4641,
          1.5051, -1.4610]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5256, -1.5887, -1.1953, -0.6564, -0.6032, -1.2392, -0.8884,  1.4612,
          1.5031, -1.4880]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5165, -1.5869, -1.2068, -0.6564, -0.5933, -1.2297, -0.8884,  1.4550,
          1.4990, -1.5031]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5164, -1.5719, -1.2182, -0.6564, -0.5931, -1.2296, -0.8884,  1.4537,
          1.4981, -1.5044]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5258, -1.5427, -1.2158, -0.6564, -0.6033, -1.2397, -0.8884,  1.4517,
          1.4968, -1.4897]], dtype=torch.float64, requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.805000. Loss: 1.412341. Time: 54.372770
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.830000, Val Loss: 0.958337 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5420, -1.4833, -1.2079, -0.6564, -0.6207, -1.2567, -0.8884,  1.4637,
          1.5046, -1.4784]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5459, -1.4614, -1.1961, -0.6564, -0.6250, -1.2608, -0.8884,  1.4764,
          1.5131, -1.4760]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5480, -1.4608, -1.1966, -0.6564, -0.6273, -1.2631, -0.8884,  1.4790,
          1.5148, -1.4791]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5527, -1.4532, -1.2051, -0.6564, -0.6324, -1.2680, -0.8884,  1.4779,
          1.5140, -1.4954]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5552, -1.4564, -1.2140, -0.6564, -0.6351, -1.2706, -0.8884,  1.4780,
          1.5140, -1.5121]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5592, -1.4736, -1.2045, -0.6564, -0.6396, -1.2748, -0.8884,  1.4800,
          1.5153, -1.5187]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5589, -1.4711, -1.1946, -0.6564, -0.6392, -1.2745, -0.8884,  1.4847,
          1.5185, -1.5134]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5610, -1.4677, -1.1759, -0.6564, -0.6415, -1.2766, -0.8884,  1.4855,
          1.5190, -1.5048]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5602, -1.4738, -1.1632, -0.6564, -0.6406, -1.2759, -0.8884,  1.4843,
          1.5181, -1.4955]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5620, -1.4736, -1.1503, -0.6564, -0.6425, -1.2777, -0.8884,  1.4821,
          1.5166, -1.4877]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5650, -1.5023, -1.1488, -0.6564, -0.6459, -1.2808, -0.8884,  1.4853,
          1.5188, -1.4660]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5613, -1.5349, -1.1492, -0.6564, -0.6417, -1.2771, -0.8884,  1.4770,
          1.5132, -1.4366]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5512, -1.5529, -1.1476, -0.6564, -0.6304, -1.2668, -0.8884,  1.4615,
          1.5027, -1.4126]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5482, -1.5760, -1.1469, -0.6564, -0.6271, -1.2638, -0.8884,  1.4453,
          1.4918, -1.4137]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5480, -1.5968, -1.1452, -0.6564, -0.6268, -1.2636, -0.8884,  1.4327,
          1.4833, -1.4235]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5514, -1.6196, -1.1444, -0.6564, -0.6305, -1.2672, -0.8884,  1.4218,
          1.4761, -1.4356]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5647, -1.6303, -1.1255, -0.6564, -0.6451, -1.2809, -0.8884,  1.4156,
          1.4720, -1.4449]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5701, -1.6364, -1.1120, -0.6564, -0.6511, -1.2866, -0.8884,  1.4071,
          1.4664, -1.4471]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5711, -1.6503, -1.0995, -0.6564, -0.6521, -1.2876, -0.8884,  1.3977,
          1.4602, -1.4541]], dtype=torch.float64, requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.810000. Loss: 1.301119. Time: 66.308633
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.740000, Val Loss: 2.045976 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5840, -1.6795, -1.0902, -0.6564, -0.6664, -1.3007, -0.8884,  1.4040,
          1.4643, -1.4598]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5865, -1.6774, -1.0943, -0.6564, -0.6692, -1.3033, -0.8884,  1.4080,
          1.4670, -1.4604]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5762, -1.6837, -1.1104, -0.6564, -0.6575, -1.2930, -0.8884,  1.4144,
          1.4711, -1.4649]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5611, -1.6796, -1.1214, -0.6564, -0.6406, -1.2780, -0.8884,  1.4171,
          1.4729, -1.4712]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5394, -1.6472, -1.1257, -0.6564, -0.6164, -1.2559, -0.8884,  1.4124,
          1.4698, -1.4772]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5253, -1.6494, -1.1295, -0.6564, -0.6007, -1.2417, -0.8884,  1.4020,
          1.4630, -1.4876]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5213, -1.6572, -1.1316, -0.6564, -0.5961, -1.2378, -0.8884,  1.3967,
          1.4595, -1.4904]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5158, -1.6668, -1.1286, -0.6564, -0.5901, -1.2323, -0.8884,  1.3803,
          1.4486, -1.4803]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5046, -1.6792, -1.1197, -0.6564, -0.5778, -1.2205, -0.8884,  1.3713,
          1.4427, -1.4698]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4932, -1.6737, -1.1049, -0.6564, -0.5656, -1.2085, -0.8884,  1.3668,
          1.4397, -1.4599]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4885, -1.6593, -1.0924, -0.6564, -0.5604, -1.2036, -0.8884,  1.3934,
          1.4575, -1.4576]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4897, -1.6511, -1.0852, -0.6564, -0.5616, -1.2050, -0.8884,  1.4205,
          1.4756, -1.4492]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4935, -1.6490, -1.0795, -0.6564, -0.5656, -1.2092, -0.8884,  1.4388,
          1.4879, -1.4469]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5011, -1.6495, -1.0696, -0.6564, -0.5736, -1.2175, -0.8884,  1.4471,
          1.4935, -1.4473]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5170, -1.6619, -1.0709, -0.6564, -0.5904, -1.2346, -0.8884,  1.4513,
          1.4963, -1.4613]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5230, -1.6814, -1.0729, -0.6564, -0.5967, -1.2411, -0.8884,  1.4517,
          1.4965, -1.4708]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5200, -1.6910, -1.0869, -0.6564, -0.5935, -1.2382, -0.8884,  1.4545,
          1.4984, -1.4666]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5281, -1.6764, -1.1135, -0.6564, -0.6020, -1.2467, -0.8884,  1.4680,
          1.5077, -1.4558]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5570, -1.6351, -1.1425, -0.6564, -0.6332, -1.2771, -0.8884,  1.4998,
          1.5301, -1.4581]], dtype=torch.float64, requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.840000. Loss: 1.351585. Time: 60.904712
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.840000, Val Loss: 1.042570 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5938, -1.5574, -1.1909, -0.6564, -0.6732, -1.3156, -0.8884,  1.5491,
          1.5663, -1.4463]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6002, -1.5450, -1.1949, -0.6564, -0.6801, -1.3224, -0.8884,  1.5611,
          1.5759, -1.4494]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6053, -1.5252, -1.1933, -0.6564, -0.6856, -1.3277, -0.8884,  1.5687,
          1.5820, -1.4560]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6024, -1.4931, -1.1830, -0.6564, -0.6821, -1.3249, -0.8884,  1.5739,
          1.5854, -1.4607]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6051, -1.4710, -1.1884, -0.6564, -0.6851, -1.3278, -0.8884,  1.5774,
          1.5875, -1.4697]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6072, -1.4577, -1.1935, -0.6564, -0.6874, -1.3299, -0.8884,  1.5799,
          1.5888, -1.4757]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6019, -1.4584, -1.1947, -0.6564, -0.6813, -1.3247, -0.8884,  1.5819,
          1.5896, -1.4813]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5868, -1.4701, -1.2037, -0.6564, -0.6642, -1.3098, -0.8884,  1.5830,
          1.5901, -1.4855]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5727, -1.4834, -1.2150, -0.6564, -0.6481, -1.2958, -0.8884,  1.5838,
          1.5905, -1.4782]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5603, -1.5029, -1.2226, -0.6564, -0.6340, -1.2834, -0.8884,  1.5819,
          1.5900, -1.4641]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5496, -1.5259, -1.2333, -0.6564, -0.6220, -1.2726, -0.8884,  1.5815,
          1.5899, -1.4491]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5296, -1.5533, -1.2492, -0.6564, -0.5998, -1.2521, -0.8884,  1.5818,
          1.5899, -1.4323]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5170, -1.5682, -1.2569, -0.6564, -0.5859, -1.2392, -0.8884,  1.5820,
          1.5900, -1.4173]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5106, -1.5814, -1.2634, -0.6564, -0.5787, -1.2327, -0.8884,  1.5819,
          1.5899, -1.4011]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5060, -1.5774, -1.2686, -0.6564, -0.5736, -1.2279, -0.8884,  1.5796,
          1.5894, -1.3936]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5086, -1.5652, -1.2737, -0.6564, -0.5763, -1.2309, -0.8884,  1.5774,
          1.5888, -1.3905]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5124, -1.5442, -1.2763, -0.6564, -0.5803, -1.2351, -0.8884,  1.5760,
          1.5884, -1.3917]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5133, -1.5334, -1.2789, -0.6564, -0.5813, -1.2361, -0.8884,  1.5763,
          1.5884, -1.3882]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5072, -1.5386, -1.2773, -0.6564, -0.5747, -1.2297, -0.8884,  1.5769,
          1.5883, -1.3821]], dtype=torch.float64, requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.850000. Loss: 1.037480. Time: 57.474753
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.770000, Val Loss: 1.652433 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5074, -1.5743, -1.2767, -0.6564, -0.5746, -1.2302, -0.8884,  1.5761,
          1.5881, -1.3803]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5161, -1.5928, -1.2739, -0.6564, -0.5839, -1.2397, -0.8884,  1.5778,
          1.5882, -1.4010]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5233, -1.6075, -1.2734, -0.6564, -0.5915, -1.2474, -0.8884,  1.5802,
          1.5885, -1.4211]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5274, -1.6260, -1.2693, -0.6564, -0.5958, -1.2519, -0.8884,  1.5817,
          1.5887, -1.4388]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5251, -1.6258, -1.2672, -0.6564, -0.5932, -1.2495, -0.8884,  1.5847,
          1.5894, -1.4323]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5284, -1.6251, -1.2675, -0.6564, -0.5967, -1.2531, -0.8884,  1.5855,
          1.5895, -1.4262]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5406, -1.6215, -1.2699, -0.6564, -0.6099, -1.2660, -0.8884,  1.5839,
          1.5887, -1.4242]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5510, -1.6171, -1.2711, -0.6564, -0.6212, -1.2769, -0.8884,  1.5844,
          1.5888, -1.4171]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5581, -1.6162, -1.2663, -0.6564, -0.6289, -1.2844, -0.8884,  1.5848,
          1.5888, -1.4125]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5598, -1.6070, -1.2635, -0.6564, -0.6307, -1.2863, -0.8884,  1.5855,
          1.5890, -1.4229]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5541, -1.5945, -1.2723, -0.6564, -0.6244, -1.2806, -0.8884,  1.5875,
          1.5896, -1.4273]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5297, -1.5803, -1.2764, -0.6564, -0.5974, -1.2554, -0.8884,  1.5865,
          1.5892, -1.4221]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4842, -1.5584, -1.2993, -0.6564, -0.5477, -1.2081, -0.8884,  1.5890,
          1.5900, -1.4200]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4569, -1.5417, -1.3118, -0.6564, -0.5178, -1.1797, -0.8884,  1.5913,
          1.5909, -1.4220]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4485, -1.5197, -1.3112, -0.6564, -0.5082, -1.1717, -0.8884,  1.5941,
          1.5920, -1.4238]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4415, -1.5096, -1.3103, -0.6564, -0.5004, -1.1646, -0.8884,  1.5961,
          1.5928, -1.4252]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4470, -1.5206, -1.3034, -0.6564, -0.5056, -1.1715, -0.8884,  1.5953,
          1.5923, -1.4281]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4476, -1.5313, -1.2848, -0.6564, -0.5059, -1.1726, -0.8884,  1.5961,
          1.5926, -1.4244]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4320, -1.5526, -1.2523, -0.6564, -0.4895, -1.1552, -0.8884,  1.5954,
          1.5922, -1.4201]], dtype=torch.float64, requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.805000. Loss: 1.598531. Time: 51.433621
Validate after epoch 38 with seed 297566
Val Accuracy: 0.730000, Val Loss: 2.090190 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4544, -1.5756, -1.2475, -0.6564, -0.5120, -1.1815, -0.8884,  1.5918,
          1.5903, -1.4264]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4850, -1.5853, -1.2464, -0.6564, -0.5433, -1.2165, -0.8884,  1.5872,
          1.5880, -1.4304]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5028, -1.6049, -1.2337, -0.6564, -0.5616, -1.2369, -0.8884,  1.5843,
          1.5865, -1.4217]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5268, -1.6087, -1.2398, -0.6564, -0.5870, -1.2634, -0.8884,  1.5805,
          1.5848, -1.4216]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5383, -1.6082, -1.2342, -0.6564, -0.5990, -1.2763, -0.8884,  1.5780,
          1.5838, -1.4210]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5483, -1.6196, -1.2373, -0.6564, -0.6097, -1.2872, -0.8884,  1.5754,
          1.5828, -1.4158]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5523, -1.6315, -1.2251, -0.6564, -0.6138, -1.2917, -0.8884,  1.5768,
          1.5828, -1.4071]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5571, -1.6254, -1.2273, -0.6564, -0.6190, -1.2969, -0.8884,  1.5778,
          1.5827, -1.4162]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5604, -1.6253, -1.2220, -0.6564, -0.6226, -1.3004, -0.8884,  1.5807,
          1.5833, -1.4328]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5774, -1.6298, -1.2150, -0.6564, -0.6418, -1.3179, -0.8884,  1.5819,
          1.5835, -1.4504]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5905, -1.6354, -1.2094, -0.6564, -0.6564, -1.3314, -0.8884,  1.5829,
          1.5836, -1.4623]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5722, -1.6353, -1.2092, -0.6564, -0.6353, -1.3133, -0.8884,  1.5838,
          1.5839, -1.4675]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5452, -1.6315, -1.2132, -0.6564, -0.6045, -1.2862, -0.8884,  1.5832,
          1.5835, -1.4836]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5220, -1.6279, -1.2161, -0.6564, -0.5782, -1.2627, -0.8884,  1.5830,
          1.5834, -1.5016]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4907, -1.6176, -1.2164, -0.6564, -0.5433, -1.2300, -0.8884,  1.5833,
          1.5835, -1.5060]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4572, -1.6065, -1.2239, -0.6564, -0.5065, -1.1945, -0.8884,  1.5783,
          1.5814, -1.4884]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4425, -1.5954, -1.2333, -0.6564, -0.4901, -1.1792, -0.8884,  1.5732,
          1.5793, -1.4807]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4569, -1.5861, -1.2342, -0.6564, -0.5045, -1.1967, -0.8884,  1.5719,
          1.5783, -1.4746]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4826, -1.5756, -1.2393, -0.6564, -0.5313, -1.2265, -0.8884,  1.5732,
          1.5779, -1.4621]], dtype=torch.float64, requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.760000. Loss: 1.827450. Time: 59.752650
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.830000, Val Loss: 1.354091 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5222, -1.5709, -1.2526, -0.6564, -0.5730, -1.2715, -0.8884,  1.5760,
          1.5776, -1.4879]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5321, -1.5633, -1.2543, -0.6564, -0.5835, -1.2827, -0.8884,  1.5778,
          1.5779, -1.4867]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5475, -1.5639, -1.2516, -0.6564, -0.6003, -1.2993, -0.8884,  1.5794,
          1.5784, -1.4846]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5579, -1.5652, -1.2491, -0.6564, -0.6118, -1.3106, -0.8884,  1.5804,
          1.5786, -1.4826]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5567, -1.5683, -1.2470, -0.6564, -0.6102, -1.3096, -0.8884,  1.5816,
          1.5792, -1.4875]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5541, -1.5634, -1.2333, -0.6564, -0.6071, -1.3072, -0.8884,  1.5838,
          1.5803, -1.5036]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5732, -1.5601, -1.2069, -0.6564, -0.6285, -1.3271, -0.8884,  1.5875,
          1.5824, -1.5125]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5825, -1.5556, -1.1881, -0.6564, -0.6390, -1.3369, -0.8884,  1.5897,
          1.5836, -1.5162]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5949, -1.5809, -1.1843, -0.6564, -0.6532, -1.3497, -0.8884,  1.5894,
          1.5833, -1.5143]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6084, -1.5967, -1.1900, -0.6564, -0.6687, -1.3634, -0.8884,  1.5887,
          1.5828, -1.5257]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6184, -1.5995, -1.1932, -0.6564, -0.6802, -1.3736, -0.8884,  1.5889,
          1.5829, -1.5371]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5977, -1.5858, -1.1868, -0.6564, -0.6557, -1.3532, -0.8884,  1.5907,
          1.5841, -1.5389]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5443, -1.5666, -1.1864, -0.6564, -0.5939, -1.3001, -0.8884,  1.5920,
          1.5849, -1.5140]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5163, -1.5413, -1.1963, -0.6564, -0.5613, -1.2727, -0.8884,  1.5945,
          1.5865, -1.4890]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5047, -1.5164, -1.2151, -0.6564, -0.5475, -1.2618, -0.8884,  1.5964,
          1.5877, -1.4607]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5025, -1.4898, -1.2330, -0.6564, -0.5443, -1.2605, -0.8884,  1.5966,
          1.5878, -1.4270]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4875, -1.4758, -1.2511, -0.6564, -0.5276, -1.2448, -0.8884,  1.5978,
          1.5887, -1.3973]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5067, -1.4556, -1.2207, -0.6564, -0.5480, -1.2665, -0.8884,  1.6052,
          1.5935, -1.3620]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5172, -1.4470, -1.2015, -0.6564, -0.5592, -1.2784, -0.8884,  1.6110,
          1.5973, -1.3409]], dtype=torch.float64, requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.795000. Loss: 1.214706. Time: 58.909697
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.790000, Val Loss: 1.976486 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5046, -1.4615, -1.1813, -0.6564, -0.5448, -1.2655, -0.8884,  1.6108,
          1.5972, -1.3188]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4989, -1.4711, -1.1783, -0.6564, -0.5383, -1.2595, -0.8884,  1.6131,
          1.5987, -1.3228]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5046, -1.4835, -1.1789, -0.6564, -0.5445, -1.2659, -0.8884,  1.6129,
          1.5986, -1.3310]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5142, -1.5119, -1.1805, -0.6564, -0.5549, -1.2764, -0.8884,  1.6150,
          1.6000, -1.3488]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5416, -1.5344, -1.1870, -0.6564, -0.5851, -1.3061, -0.8884,  1.6212,
          1.6040, -1.3608]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5601, -1.5481, -1.1934, -0.6564, -0.6053, -1.3259, -0.8884,  1.6242,
          1.6060, -1.3684]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5671, -1.5714, -1.1884, -0.6564, -0.6129, -1.3337, -0.8884,  1.6366,
          1.6142, -1.3691]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5684, -1.5818, -1.1889, -0.6564, -0.6140, -1.3353, -0.8884,  1.6423,
          1.6180, -1.3708]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5689, -1.5878, -1.1898, -0.6564, -0.6145, -1.3361, -0.8884,  1.6451,
          1.6199, -1.3722]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5511, -1.5843, -1.1808, -0.6564, -0.5941, -1.3179, -0.8884,  1.6493,
          1.6227, -1.3753]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5456, -1.5781, -1.1928, -0.6564, -0.5876, -1.3125, -0.8884,  1.6565,
          1.6275, -1.3721]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5538, -1.5769, -1.2047, -0.6564, -0.5966, -1.3212, -0.8884,  1.6650,
          1.6332, -1.3802]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5482, -1.5824, -1.2157, -0.6564, -0.5902, -1.3156, -0.8884,  1.6659,
          1.6338, -1.3770]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5434, -1.5853, -1.2235, -0.6564, -0.5848, -1.3107, -0.8884,  1.6675,
          1.6348, -1.3759]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5339, -1.5861, -1.2328, -0.6564, -0.5741, -1.3009, -0.8884,  1.6718,
          1.6377, -1.3798]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5008, -1.5826, -1.2330, -0.6564, -0.5372, -1.2658, -0.8884,  1.6847,
          1.6463, -1.3861]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4782, -1.5733, -1.2331, -0.6564, -0.5120, -1.2421, -0.8884,  1.6931,
          1.6519, -1.3869]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4672, -1.5674, -1.2303, -0.6564, -0.4997, -1.2307, -0.8884,  1.7001,
          1.6565, -1.3835]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4608, -1.5639, -1.2265, -0.6564, -0.4925, -1.2241, -0.8884,  1.7057,
          1.6603, -1.3785]], dtype=torch.float64, requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.830000. Loss: 1.261841. Time: 58.761008
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.820000, Val Loss: 1.491122 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4575, -1.5740, -1.2094, -0.6564, -0.4886, -1.2210, -0.8884,  1.7152,
          1.6666, -1.3756]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4658, -1.5878, -1.2001, -0.6564, -0.4972, -1.2305, -0.8884,  1.6879,
          1.6481, -1.3800]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4756, -1.6082, -1.1984, -0.6564, -0.5076, -1.2419, -0.8884,  1.6685,
          1.6350, -1.3803]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4918, -1.6364, -1.2071, -0.6564, -0.5249, -1.2602, -0.8884,  1.6517,
          1.6235, -1.3699]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4989, -1.6657, -1.2212, -0.6564, -0.5324, -1.2684, -0.8884,  1.6501,
          1.6225, -1.3759]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5023, -1.6851, -1.2283, -0.6564, -0.5359, -1.2722, -0.8884,  1.6517,
          1.6237, -1.3831]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5038, -1.6988, -1.2318, -0.6564, -0.5374, -1.2740, -0.8884,  1.6613,
          1.6303, -1.3974]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5028, -1.7029, -1.2332, -0.6564, -0.5362, -1.2730, -0.8884,  1.6693,
          1.6359, -1.4052]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5014, -1.7023, -1.2313, -0.6564, -0.5347, -1.2716, -0.8884,  1.6706,
          1.6368, -1.4101]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4988, -1.6888, -1.2232, -0.6564, -0.5319, -1.2688, -0.8884,  1.6685,
          1.6354, -1.4280]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4925, -1.6821, -1.2146, -0.6564, -0.5249, -1.2618, -0.8884,  1.6633,
          1.6319, -1.4421]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4902, -1.6717, -1.2263, -0.6564, -0.5224, -1.2594, -0.8884,  1.6632,
          1.6318, -1.4545]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4952, -1.6690, -1.2407, -0.6564, -0.5277, -1.2649, -0.8884,  1.6646,
          1.6328, -1.4672]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4986, -1.6724, -1.2441, -0.6564, -0.5315, -1.2687, -0.8884,  1.6663,
          1.6339, -1.4817]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5061, -1.6531, -1.2284, -0.6564, -0.5396, -1.2769, -0.8884,  1.6632,
          1.6319, -1.5057]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5045, -1.6294, -1.2097, -0.6564, -0.5379, -1.2753, -0.8884,  1.6640,
          1.6324, -1.5360]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5064, -1.6262, -1.1745, -0.6564, -0.5399, -1.2775, -0.8884,  1.6718,
          1.6378, -1.5602]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5071, -1.6262, -1.1495, -0.6564, -0.5406, -1.2782, -0.8884,  1.6835,
          1.6458, -1.5729]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5039, -1.6270, -1.1484, -0.6564, -0.5371, -1.2747, -0.8884,  1.6923,
          1.6519, -1.5681]], dtype=torch.float64, requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.820000. Loss: 1.582968. Time: 49.021996
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.760000, Val Loss: 1.940468 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4944, -1.6221, -1.1549, -0.6564, -0.5267, -1.2645, -0.8884,  1.6968,
          1.6551, -1.5479]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4931, -1.6268, -1.1574, -0.6564, -0.5252, -1.2630, -0.8884,  1.6877,
          1.6488, -1.5525]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4866, -1.6368, -1.1560, -0.6564, -0.5181, -1.2559, -0.8884,  1.6847,
          1.6468, -1.5629]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4793, -1.6498, -1.1449, -0.6564, -0.5101, -1.2479, -0.8884,  1.6960,
          1.6548, -1.5724]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4738, -1.6449, -1.1473, -0.6564, -0.5041, -1.2418, -0.8884,  1.7099,
          1.6645, -1.5746]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4791, -1.6378, -1.1605, -0.6564, -0.5098, -1.2479, -0.8884,  1.7132,
          1.6668, -1.5654]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4771, -1.6246, -1.1645, -0.6564, -0.5076, -1.2457, -0.8884,  1.7187,
          1.6707, -1.5664]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4749, -1.6181, -1.1594, -0.6564, -0.5052, -1.2433, -0.8884,  1.7238,
          1.6742, -1.5623]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4755, -1.6148, -1.1643, -0.6564, -0.5057, -1.2440, -0.8884,  1.7328,
          1.6805, -1.5343]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4735, -1.5919, -1.1744, -0.6564, -0.5036, -1.2418, -0.8884,  1.7483,
          1.6914, -1.5111]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4742, -1.5666, -1.1786, -0.6564, -0.5043, -1.2426, -0.8884,  1.7696,
          1.7062, -1.5022]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4833, -1.5341, -1.1763, -0.6564, -0.5140, -1.2528, -0.8884,  1.7982,
          1.7262, -1.4925]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4982, -1.5088, -1.1699, -0.6564, -0.5301, -1.2694, -0.8884,  1.8093,
          1.7339, -1.4729]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5144, -1.4971, -1.1681, -0.6564, -0.5475, -1.2872, -0.8884,  1.7911,
          1.7209, -1.4592]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5322, -1.4774, -1.1649, -0.6564, -0.5671, -1.3067, -0.8884,  1.7851,
          1.7167, -1.4545]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5619, -1.4828, -1.1674, -0.6564, -0.5999, -1.3383, -0.8884,  1.7700,
          1.7056, -1.4490]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5803, -1.4863, -1.1671, -0.6564, -0.6203, -1.3580, -0.8884,  1.7620,
          1.6998, -1.4446]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5820, -1.4983, -1.1624, -0.6564, -0.6217, -1.3603, -0.8884,  1.7626,
          1.7003, -1.4450]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5743, -1.5143, -1.1637, -0.6564, -0.6125, -1.3528, -0.8884,  1.7194,
          1.6674, -1.4455]], dtype=torch.float64, requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.810000. Loss: 1.714977. Time: 59.310645
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.770000, Val Loss: 1.651565 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5391, -1.5861, -1.1840, -0.6564, -0.5717, -1.3172, -0.8884,  1.6600,
          1.6217, -1.4605]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5277, -1.6175, -1.1862, -0.6564, -0.5586, -1.3056, -0.8884,  1.6361,
          1.6020, -1.4611]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5228, -1.6508, -1.1811, -0.6564, -0.5530, -1.3007, -0.8884,  1.6191,
          1.5871, -1.4656]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5137, -1.6755, -1.1619, -0.6564, -0.5427, -1.2911, -0.8884,  1.6093,
          1.5802, -1.4600]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4921, -1.6868, -1.1580, -0.6564, -0.5185, -1.2681, -0.8884,  1.6075,
          1.5839, -1.4422]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4882, -1.6819, -1.1581, -0.6564, -0.5140, -1.2642, -0.8884,  1.6069,
          1.5877, -1.4185]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4892, -1.6691, -1.1603, -0.6564, -0.5149, -1.2657, -0.8884,  1.6044,
          1.5876, -1.4043]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4818, -1.6750, -1.1496, -0.6564, -0.5067, -1.2576, -0.8884,  1.6018,
          1.5865, -1.3897]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4637, -1.6800, -1.1427, -0.6564, -0.4869, -1.2375, -0.8884,  1.5993,
          1.5848, -1.3853]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4444, -1.6797, -1.1391, -0.6564, -0.4660, -1.2159, -0.8884,  1.5968,
          1.5829, -1.3875]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4312, -1.6775, -1.1352, -0.6564, -0.4518, -1.2011, -0.8884,  1.5956,
          1.5820, -1.3984]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4256, -1.6625, -1.1312, -0.6564, -0.4457, -1.1950, -0.8884,  1.5926,
          1.5788, -1.4294]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4267, -1.6324, -1.1275, -0.6564, -0.4466, -1.1967, -0.8884,  1.5886,
          1.5741, -1.4499]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4312, -1.6215, -1.1326, -0.6564, -0.4512, -1.2022, -0.8884,  1.5862,
          1.5710, -1.4656]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4504, -1.6088, -1.1515, -0.6564, -0.4712, -1.2250, -0.8884,  1.5846,
          1.5688, -1.4644]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4601, -1.5925, -1.1672, -0.6564, -0.4813, -1.2366, -0.8884,  1.5836,
          1.5677, -1.4619]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4728, -1.5474, -1.1916, -0.6564, -0.4947, -1.2513, -0.8884,  1.5825,
          1.5680, -1.4647]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4904, -1.5216, -1.2048, -0.6564, -0.5136, -1.2713, -0.8884,  1.5821,
          1.5678, -1.4765]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5049, -1.5139, -1.2088, -0.6564, -0.5292, -1.2877, -0.8884,  1.5813,
          1.5686, -1.4856]], dtype=torch.float64, requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.725000. Loss: 1.997878. Time: 65.000331
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.790000, Val Loss: 1.396545 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5602, -1.4502, -1.1998, -0.6564, -0.5901, -1.3482, -0.8884,  1.5810,
          1.5680, -1.4314]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5724, -1.4101, -1.2012, -0.6564, -0.6035, -1.3616, -0.8884,  1.5804,
          1.5687, -1.4314]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5803, -1.3861, -1.2042, -0.6564, -0.6121, -1.3702, -0.8884,  1.5799,
          1.5694, -1.4387]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5793, -1.4171, -1.2052, -0.6564, -0.6105, -1.3696, -0.8884,  1.5796,
          1.5700, -1.4471]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5845, -1.4420, -1.2028, -0.6564, -0.6165, -1.3752, -0.8884,  1.5794,
          1.5703, -1.4503]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5915, -1.4725, -1.1835, -0.6564, -0.6245, -1.3824, -0.8884,  1.5792,
          1.5714, -1.4360]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5658, -1.5067, -1.1630, -0.6564, -0.5944, -1.3566, -0.8884,  1.5792,
          1.5732, -1.4231]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5335, -1.5341, -1.1454, -0.6564, -0.5569, -1.3239, -0.8884,  1.5796,
          1.5750, -1.4124]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5075, -1.5454, -1.1364, -0.6564, -0.5270, -1.2971, -0.8884,  1.5793,
          1.5756, -1.4038]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4579, -1.5899, -1.1618, -0.6564, -0.4716, -1.2440, -0.8884,  1.5782,
          1.5751, -1.3928]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4289, -1.6293, -1.1868, -0.6564, -0.4391, -1.2133, -0.8884,  1.5779,
          1.5751, -1.3993]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4130, -1.6538, -1.1985, -0.6564, -0.4212, -1.1966, -0.8884,  1.5778,
          1.5752, -1.4100]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4061, -1.6681, -1.1833, -0.6564, -0.4132, -1.1899, -0.8884,  1.5793,
          1.5765, -1.4280]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4166, -1.6758, -1.1473, -0.6564, -0.4237, -1.2039, -0.8884,  1.5809,
          1.5778, -1.4523]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4348, -1.6671, -1.1204, -0.6564, -0.4424, -1.2266, -0.8884,  1.5812,
          1.5781, -1.4833]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4564, -1.6414, -1.1078, -0.6564, -0.4651, -1.2528, -0.8884,  1.5812,
          1.5781, -1.5058]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4751, -1.6326, -1.1022, -0.6564, -0.4849, -1.2752, -0.8884,  1.5824,
          1.5790, -1.5312]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4905, -1.6364, -1.0978, -0.6564, -0.5014, -1.2934, -0.8884,  1.5841,
          1.5803, -1.5523]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4998, -1.6383, -1.0932, -0.6564, -0.5115, -1.3044, -0.8884,  1.5853,
          1.5812, -1.5675]], dtype=torch.float64, requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.780000. Loss: 1.796379. Time: 55.230715
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.770000, Val Loss: 1.770424 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5242, -1.6408, -1.1140, -0.6564, -0.5386, -1.3318, -0.8884,  1.5842,
          1.5804, -1.5916]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5365, -1.6524, -1.1147, -0.6564, -0.5524, -1.3454, -0.8884,  1.5842,
          1.5804, -1.6076]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5488, -1.6358, -1.1191, -0.6564, -0.5664, -1.3589, -0.8884,  1.5852,
          1.5811, -1.6061]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5569, -1.6260, -1.1291, -0.6564, -0.5756, -1.3676, -0.8884,  1.5830,
          1.5795, -1.6183]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5723, -1.6163, -1.1383, -0.6564, -0.5934, -1.3840, -0.8884,  1.5788,
          1.5766, -1.6184]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5803, -1.5990, -1.1475, -0.6564, -0.6027, -1.3926, -0.8884,  1.5760,
          1.5745, -1.6264]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5696, -1.5835, -1.1654, -0.6564, -0.5898, -1.3818, -0.8884,  1.5746,
          1.5736, -1.6488]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5768, -1.5574, -1.1662, -0.6564, -0.5982, -1.3894, -0.8884,  1.5741,
          1.5732, -1.6449]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6011, -1.5147, -1.1907, -0.6564, -0.6266, -1.4144, -0.8884,  1.5733,
          1.5726, -1.6433]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6243, -1.4831, -1.2088, -0.6564, -0.6539, -1.4382, -0.8884,  1.5727,
          1.5722, -1.6387]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6357, -1.4625, -1.2094, -0.6564, -0.6672, -1.4499, -0.8884,  1.5725,
          1.5721, -1.6303]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6175, -1.4584, -1.1887, -0.6564, -0.6448, -1.4325, -0.8884,  1.5725,
          1.5721, -1.6243]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5824, -1.4411, -1.1562, -0.6564, -0.6024, -1.3983, -0.8884,  1.5726,
          1.5722, -1.6003]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5504, -1.4398, -1.1390, -0.6564, -0.5643, -1.3664, -0.8884,  1.5725,
          1.5721, -1.5836]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5092, -1.4665, -1.1324, -0.6564, -0.5161, -1.3240, -0.8884,  1.5723,
          1.5719, -1.5741]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4798, -1.4762, -1.1242, -0.6564, -0.4818, -1.2936, -0.8884,  1.5721,
          1.5718, -1.5632]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4658, -1.4746, -1.1297, -0.6564, -0.4654, -1.2796, -0.8884,  1.5718,
          1.5716, -1.5578]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4625, -1.4712, -1.1420, -0.6564, -0.4611, -1.2772, -0.8884,  1.5717,
          1.5715, -1.5456]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4404, -1.4943, -1.1439, -0.6564, -0.4365, -1.2522, -0.8884,  1.5719,
          1.5717, -1.5129]], dtype=torch.float64, requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.775000. Loss: 1.707114. Time: 51.419896
Validate after epoch 46 with seed 91566
Val Accuracy: 0.750000, Val Loss: 1.706217 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4103, -1.5378, -1.1574, -0.6564, -0.4033, -1.2177, -0.8884,  1.5719,
          1.5716, -1.4523]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3801, -1.5370, -1.1506, -0.6564, -0.3713, -1.1809, -0.8884,  1.5721,
          1.5717, -1.4362]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3444, -1.5560, -1.1359, -0.6564, -0.3338, -1.1368, -0.8884,  1.5722,
          1.5719, -1.4207]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3390, -1.5758, -1.1289, -0.6564, -0.3272, -1.1322, -0.8884,  1.5722,
          1.5718, -1.4032]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3284, -1.5928, -1.1180, -0.6564, -0.3161, -1.1194, -0.8884,  1.5722,
          1.5718, -1.3944]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3314, -1.6058, -1.1056, -0.6564, -0.3185, -1.1247, -0.8884,  1.5721,
          1.5717, -1.4004]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3575, -1.6169, -1.1073, -0.6564, -0.3442, -1.1615, -0.8884,  1.5718,
          1.5715, -1.4292]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4024, -1.6214, -1.0985, -0.6564, -0.3896, -1.2208, -0.8884,  1.5716,
          1.5714, -1.4410]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4535, -1.6311, -1.0921, -0.6564, -0.4424, -1.2859, -0.8884,  1.5715,
          1.5713, -1.4509]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4949, -1.6402, -1.0967, -0.6564, -0.4862, -1.3369, -0.8884,  1.5715,
          1.5713, -1.4495]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5238, -1.6503, -1.1014, -0.6564, -0.5169, -1.3722, -0.8884,  1.5714,
          1.5713, -1.4591]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5363, -1.6456, -1.0929, -0.6564, -0.5295, -1.3881, -0.8884,  1.5713,
          1.5712, -1.4701]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5415, -1.6337, -1.1043, -0.6564, -0.5343, -1.3952, -0.8884,  1.5712,
          1.5711, -1.4788]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5486, -1.6193, -1.1205, -0.6564, -0.5420, -1.4037, -0.8884,  1.5711,
          1.5710, -1.4903]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5527, -1.6109, -1.1299, -0.6564, -0.5464, -1.4086, -0.8884,  1.5710,
          1.5710, -1.4942]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5549, -1.6062, -1.1352, -0.6564, -0.5488, -1.4112, -0.8884,  1.5710,
          1.5710, -1.4930]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5741, -1.5767, -1.1365, -0.6564, -0.5718, -1.4312, -0.8884,  1.5710,
          1.5710, -1.4780]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5941, -1.5499, -1.1293, -0.6564, -0.5958, -1.4519, -0.8884,  1.5711,
          1.5710, -1.4648]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5999, -1.5334, -1.1123, -0.6564, -0.6024, -1.4581, -0.8884,  1.5711,
          1.5711, -1.4622]], dtype=torch.float64, requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.785000. Loss: 1.755666. Time: 46.325969
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.850000, Val Loss: 1.122291 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5781, -1.5650, -1.1003, -0.6564, -0.5751, -1.4375, -0.8884,  1.5712,
          1.5711, -1.4405]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5994, -1.5769, -1.1007, -0.6564, -0.6006, -1.4592, -0.8884,  1.5712,
          1.5711, -1.4428]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6135, -1.5846, -1.1035, -0.6564, -0.6175, -1.4738, -0.8884,  1.5711,
          1.5710, -1.4578]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5878, -1.5959, -1.1021, -0.6564, -0.5859, -1.4490, -0.8884,  1.5711,
          1.5710, -1.4792]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5498, -1.5903, -1.0795, -0.6564, -0.5398, -1.4118, -0.8884,  1.5712,
          1.5711, -1.4830]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5198, -1.5739, -1.0648, -0.6564, -0.5037, -1.3819, -0.8884,  1.5713,
          1.5712, -1.4804]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5072, -1.5637, -1.0623, -0.6564, -0.4883, -1.3700, -0.8884,  1.5714,
          1.5712, -1.4733]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5289, -1.5394, -1.0641, -0.6564, -0.5126, -1.3948, -0.8884,  1.5714,
          1.5712, -1.4580]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5614, -1.5244, -1.0655, -0.6564, -0.5499, -1.4305, -0.8884,  1.5714,
          1.5712, -1.4480]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5736, -1.5194, -1.0647, -0.6564, -0.5634, -1.4444, -0.8884,  1.5715,
          1.5713, -1.4392]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5470, -1.5229, -1.0769, -0.6564, -0.5315, -1.4181, -0.8884,  1.5715,
          1.5713, -1.4353]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5305, -1.5402, -1.0807, -0.6564, -0.5116, -1.4017, -0.8884,  1.5714,
          1.5712, -1.4407]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5401, -1.5408, -1.0862, -0.6564, -0.5221, -1.4127, -0.8884,  1.5714,
          1.5712, -1.4416]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5374, -1.5404, -1.0859, -0.6564, -0.5187, -1.4105, -0.8884,  1.5714,
          1.5712, -1.4485]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5212, -1.5337, -1.0773, -0.6564, -0.4997, -1.3937, -0.8884,  1.5714,
          1.5712, -1.4415]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5134, -1.5276, -1.0764, -0.6564, -0.4904, -1.3857, -0.8884,  1.5714,
          1.5712, -1.4344]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5161, -1.5186, -1.0730, -0.6564, -0.4934, -1.3890, -0.8884,  1.5713,
          1.5712, -1.4204]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5178, -1.5126, -1.0648, -0.6564, -0.4952, -1.3910, -0.8884,  1.5713,
          1.5712, -1.4087]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5179, -1.5056, -1.0566, -0.6564, -0.4953, -1.3913, -0.8884,  1.5713,
          1.5712, -1.3992]], dtype=torch.float64, requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.815000. Loss: 1.676413. Time: 46.161291
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.750000, Val Loss: 2.023575 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5029, -1.5117, -1.0339, -0.6564, -0.4779, -1.3753, -0.8884,  1.5716,
          1.5714, -1.3851]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4942, -1.5273, -1.0305, -0.6564, -0.4679, -1.3658, -0.8884,  1.5718,
          1.5715, -1.3693]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4711, -1.5522, -1.0326, -0.6564, -0.4419, -1.3404, -0.8884,  1.5722,
          1.5718, -1.3462]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4561, -1.5649, -1.0275, -0.6564, -0.4249, -1.3240, -0.8884,  1.5724,
          1.5719, -1.3290]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4584, -1.5768, -1.0282, -0.6564, -0.4269, -1.3274, -0.8884,  1.5721,
          1.5717, -1.3214]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4697, -1.5862, -1.0327, -0.6564, -0.4391, -1.3410, -0.8884,  1.5715,
          1.5713, -1.3250]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4800, -1.5942, -1.0390, -0.6564, -0.4503, -1.3532, -0.8884,  1.5711,
          1.5710, -1.3200]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4872, -1.5959, -1.0387, -0.6564, -0.4580, -1.3616, -0.8884,  1.5708,
          1.5708, -1.3138]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4763, -1.5818, -1.0373, -0.6564, -0.4457, -1.3497, -0.8884,  1.5707,
          1.5707, -1.2854]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4614, -1.5518, -1.0364, -0.6564, -0.4291, -1.3331, -0.8884,  1.5706,
          1.5707, -1.2617]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4482, -1.5381, -1.0355, -0.6564, -0.4144, -1.3182, -0.8884,  1.5706,
          1.5706, -1.2461]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4419, -1.5439, -1.0228, -0.6564, -0.4074, -1.3112, -0.8884,  1.5705,
          1.5706, -1.2421]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4387, -1.5521, -1.0184, -0.6564, -0.4038, -1.3078, -0.8884,  1.5705,
          1.5706, -1.2367]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4438, -1.5388, -1.0154, -0.6564, -0.4092, -1.3140, -0.8884,  1.5704,
          1.5705, -1.2267]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4464, -1.5276, -1.0116, -0.6564, -0.4120, -1.3171, -0.8884,  1.5704,
          1.5705, -1.2187]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4393, -1.5061, -1.0064, -0.6564, -0.4043, -1.3089, -0.8884,  1.5705,
          1.5706, -1.2104]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4298, -1.5056, -1.0008, -0.6564, -0.3939, -1.2978, -0.8884,  1.5705,
          1.5706, -1.2000]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4148, -1.5094, -1.0018, -0.6564, -0.3777, -1.2798, -0.8884,  1.5705,
          1.5706, -1.1986]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4162, -1.5174, -1.0136, -0.6564, -0.3790, -1.2820, -0.8884,  1.5705,
          1.5706, -1.2240]], dtype=torch.float64, requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.805000. Loss: 1.399735. Time: 46.239181
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.770000, Val Loss: 1.701167 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4368, -1.5352, -1.0405, -0.6564, -0.4008, -1.3075, -0.8884,  1.5704,
          1.5705, -1.2555]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4317, -1.5421, -1.0286, -0.6564, -0.3951, -1.3017, -0.8884,  1.5703,
          1.5704, -1.2892]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4284, -1.5490, -1.0183, -0.6564, -0.3915, -1.2980, -0.8884,  1.5702,
          1.5704, -1.3164]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4381, -1.5579, -1.0197, -0.6564, -0.4018, -1.3097, -0.8884,  1.5702,
          1.5703, -1.3370]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4681, -1.5701, -1.0152, -0.6564, -0.4341, -1.3455, -0.8884,  1.5702,
          1.5703, -1.3531]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4837, -1.5782, -1.0097, -0.6564, -0.4506, -1.3641, -0.8884,  1.5702,
          1.5703, -1.3593]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4954, -1.5797, -1.0131, -0.6564, -0.4633, -1.3780, -0.8884,  1.5700,
          1.5703, -1.3640]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4954, -1.5852, -1.0192, -0.6564, -0.4629, -1.3786, -0.8884,  1.5698,
          1.5701, -1.3543]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4883, -1.5837, -1.0249, -0.6564, -0.4547, -1.3712, -0.8884,  1.5697,
          1.5700, -1.3451]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4865, -1.5802, -1.0243, -0.6564, -0.4525, -1.3694, -0.8884,  1.5696,
          1.5699, -1.3361]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4834, -1.5688, -1.0218, -0.6564, -0.4489, -1.3662, -0.8884,  1.5697,
          1.5700, -1.3119]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4848, -1.5638, -1.0193, -0.6564, -0.4504, -1.3678, -0.8884,  1.5698,
          1.5701, -1.3138]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4876, -1.5561, -1.0119, -0.6564, -0.4536, -1.3710, -0.8884,  1.5698,
          1.5701, -1.3154]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4900, -1.5466, -1.0052, -0.6564, -0.4562, -1.3737, -0.8884,  1.5699,
          1.5701, -1.3056]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4937, -1.5496, -1.0216, -0.6564, -0.4604, -1.3779, -0.8884,  1.5701,
          1.5703, -1.3116]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5069, -1.5594, -1.0289, -0.6564, -0.4753, -1.3925, -0.8884,  1.5701,
          1.5703, -1.3178]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5161, -1.5513, -1.0410, -0.6564, -0.4857, -1.4027, -0.8884,  1.5701,
          1.5703, -1.3226]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5203, -1.5357, -1.0412, -0.6564, -0.4904, -1.4073, -0.8884,  1.5701,
          1.5703, -1.3453]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5222, -1.5236, -1.0429, -0.6564, -0.4925, -1.4094, -0.8884,  1.5700,
          1.5703, -1.3661]], dtype=torch.float64, requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.800000. Loss: 1.623684. Time: 46.250142
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.760000, Val Loss: 2.087236 
Training Execution time: 78:50:02.00
Conducting Test
Test Accuracy: 0.776000, Test Loss: 1.864432 
