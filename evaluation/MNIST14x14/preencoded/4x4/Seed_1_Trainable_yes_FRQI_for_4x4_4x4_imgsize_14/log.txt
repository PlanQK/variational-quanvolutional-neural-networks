Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_4x4', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 8, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_FRQI_for_4x4_4x4_imgsize_14'}
Loading MNIST dataset from the PyTorch storage
Loading MNIST dataset into memory
Saving data tensors to disk at ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 1, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_4x4', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 8, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_1_Trainable_yes_FRQI_for_4x4_4x4_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1024, -0.9094, -0.3040, -0.6040, -0.4155, -0.6016, -0.8345,  0.3307,
          0.7648, -0.7789]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0773, -0.9551, -0.2870, -0.5737, -0.4611, -0.6469, -0.8035,  0.3407,
          0.7195, -0.8242]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0403, -0.9969, -0.2566, -0.5699, -0.5031, -0.6894, -0.7895,  0.3722,
          0.6771, -0.8666]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0038, -1.0303, -0.2208, -0.5789, -0.5366, -0.7231, -0.7888,  0.4036,
          0.6433, -0.9004]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0317, -1.0622, -0.1889, -0.6010, -0.5689, -0.7553, -0.8019,  0.4381,
          0.6111, -0.9326]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0685, -1.0890, -0.1567, -0.6351, -0.5961, -0.7829, -0.8282,  0.4775,
          0.5836, -0.9601]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.0968, -1.1099, -0.1282, -0.6691, -0.6173, -0.8021, -0.8524,  0.5189,
          0.5644, -0.9794]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1076, -1.1302, -0.1097, -0.7022, -0.6378, -0.8189, -0.8734,  0.5576,
          0.5475, -0.9962]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1092, -1.1525, -0.0985, -0.7469, -0.6602, -0.8418, -0.9111,  0.5956,
          0.5247, -1.0191]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1087, -1.1681, -0.0968, -0.7949, -0.6759, -0.8568, -0.9518,  0.6393,
          0.5096, -1.0341]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1077, -1.1820, -0.1068, -0.8399, -0.6898, -0.8651, -0.9866,  0.6896,
          0.5013, -1.0424]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1077, -1.1984, -0.1233, -0.8859, -0.7060, -0.8721, -1.0211,  0.7428,
          0.4944, -1.0494]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1117, -1.2125, -0.1423, -0.9337, -0.7198, -0.8782, -1.0588,  0.7960,
          0.4883, -1.0554]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1256, -1.2290, -0.1571, -0.9792, -0.7355, -0.8849, -1.0951,  0.8448,
          0.4815, -1.0622]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1376, -1.2515, -0.1632, -1.0126, -0.7568, -0.8937, -1.1200,  0.8812,
          0.4727, -1.0710]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1356, -1.2716, -0.1656, -1.0516, -0.7755, -0.9016, -1.1481,  0.9238,
          0.4648, -1.0789]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1432, -1.2881, -0.1736, -1.0991, -0.7906, -0.9080, -1.1917,  0.9679,
          0.4584, -1.0853]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1488, -1.3005, -0.1860, -1.1532, -0.8018, -0.9121, -1.2374,  1.0231,
          0.4543, -1.0894]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1425, -1.3092, -0.1932, -1.1958, -0.8096, -0.9122, -1.2614,  1.0746,
          0.4543, -1.0894]], dtype=torch.float64, requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.145000. Loss: 2.565484. Time: 4.108416
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.090000, Val Loss: 2.173609 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1466, -1.3274, -0.1850, -1.2546, -0.8251, -0.9100, -1.2902,  1.1479,
          0.4565, -1.0872]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1574, -1.3359, -0.1633, -1.2951, -0.8320, -0.9126, -1.3353,  1.1798,
          0.4539, -1.0898]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1523, -1.3458, -0.1744, -1.3437, -0.8398, -0.9119, -1.3853,  1.2209,
          0.4546, -1.0891]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1425, -1.3574, -0.1932, -1.3918, -0.8487, -0.9107, -1.4322,  1.2638,
          0.4557, -1.0880]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1313, -1.3640, -0.1895, -1.4376, -0.8538, -0.9086, -1.4735,  1.3089,
          0.4579, -1.0858]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1180, -1.3693, -0.1723, -1.4800, -0.8578, -0.9069, -1.5092,  1.3567,
          0.4596, -1.0841]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1200, -1.3757, -0.1478, -1.5110, -0.8624, -0.9050, -1.5339,  1.3980,
          0.4614, -1.0823]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1258, -1.3876, -0.1336, -1.5338, -0.8706, -0.9055, -1.5517,  1.4258,
          0.4609, -1.0828]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1237, -1.3980, -0.1465, -1.5531, -0.8776, -0.9064, -1.5648,  1.4513,
          0.4600, -1.0837]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1264, -1.4115, -0.1762, -1.5661, -0.8863, -0.9097, -1.5739,  1.4772,
          0.4568, -1.0869]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1446, -1.4245, -0.1945, -1.5729, -0.8944, -0.9132, -1.5788,  1.4933,
          0.4532, -1.0905]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1622, -1.4354, -0.2062, -1.5766, -0.9009, -0.9159, -1.5808,  1.5077,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1762, -1.4417, -0.2179, -1.5776, -0.9047, -0.9166, -1.5808,  1.5205,
          0.4499, -1.0938]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1885, -1.4447, -0.2235, -1.5786, -0.9066, -0.9158, -1.5795,  1.5316,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2071, -1.4502, -0.2323, -1.5806, -0.9095, -0.9156, -1.5782,  1.5395,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2087, -1.4574, -0.2369, -1.5804, -0.9130, -0.9147, -1.5771,  1.5457,
          0.4517, -1.0920]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1933, -1.4670, -0.2336, -1.5767, -0.9174, -0.9141, -1.5756,  1.5509,
          0.4523, -1.0914]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1831, -1.4730, -0.2455, -1.5758, -0.9202, -0.9126, -1.5736,  1.5563,
          0.4538, -1.0899]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1730, -1.4771, -0.2702, -1.5727, -0.9221, -0.9123, -1.5719,  1.5609,
          0.4542, -1.0896]], dtype=torch.float64, requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.300000. Loss: 1.968890. Time: 5.924523
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.410000, Val Loss: 1.811041 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2067, -1.4884, -0.2606, -1.5729, -0.9265, -0.9135, -1.5699,  1.5667,
          0.4529, -1.0908]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2144, -1.4942, -0.2536, -1.5752, -0.9286, -0.9133, -1.5695,  1.5686,
          0.4532, -1.0906]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2219, -1.4979, -0.2561, -1.5801, -0.9299, -0.9126, -1.5694,  1.5698,
          0.4539, -1.0898]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2189, -1.5003, -0.2620, -1.5812, -0.9308, -0.9121, -1.5694,  1.5706,
          0.4543, -1.0894]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2222, -1.4987, -0.2788, -1.5740, -0.9305, -0.9114, -1.5697,  1.5711,
          0.4551, -1.0887]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2302, -1.5036, -0.2990, -1.5665, -0.9319, -0.9121, -1.5701,  1.5714,
          0.4544, -1.0893]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2367, -1.5133, -0.3187, -1.5630, -0.9347, -0.9135, -1.5706,  1.5715,
          0.4530, -1.0908]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2503, -1.5256, -0.3050, -1.5629, -0.9378, -0.9156, -1.5709,  1.5715,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2550, -1.5322, -0.2912, -1.5632, -0.9396, -0.9164, -1.5711,  1.5714,
          0.4500, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2442, -1.5351, -0.2971, -1.5599, -0.9405, -0.9162, -1.5711,  1.5713,
          0.4502, -1.0935]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2209, -1.5355, -0.3045, -1.5556, -0.9409, -0.9156, -1.5711,  1.5712,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1983, -1.5345, -0.3148, -1.5568, -0.9409, -0.9147, -1.5710,  1.5711,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.1919, -1.5354, -0.3310, -1.5635, -0.9412, -0.9145, -1.5709,  1.5710,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2064, -1.5380, -0.3405, -1.5651, -0.9416, -0.9151, -1.5708,  1.5709,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2336, -1.5379, -0.3128, -1.5686, -0.9417, -0.9152, -1.5707,  1.5709,
          0.4513, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2576, -1.5382, -0.2841, -1.5733, -0.9418, -0.9153, -1.5707,  1.5708,
          0.4512, -1.0925]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2571, -1.5387, -0.2908, -1.5707, -0.9419, -0.9151, -1.5707,  1.5708,
          0.4513, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2750, -1.5401, -0.3240, -1.5646, -0.9421, -0.9153, -1.5707,  1.5708,
          0.4512, -1.0926]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2826, -1.5444, -0.3600, -1.5629, -0.9426, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.410000. Loss: 1.760387. Time: 5.977316
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.590000, Val Loss: 1.547127 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2767, -1.5533, -0.4512, -1.5646, -0.9437, -0.9164, -1.5708,  1.5708,
          0.4500, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.2916, -1.5527, -0.4612, -1.5608, -0.9437, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3292, -1.5506, -0.4584, -1.5504, -0.9436, -0.9160, -1.5708,  1.5708,
          0.4505, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3627, -1.5484, -0.4407, -1.5501, -0.9435, -0.9157, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3550, -1.5510, -0.4247, -1.5531, -0.9438, -0.9160, -1.5708,  1.5708,
          0.4505, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3629, -1.5532, -0.4295, -1.5651, -0.9440, -0.9161, -1.5708,  1.5708,
          0.4503, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3901, -1.5590, -0.4591, -1.5867, -0.9445, -0.9164, -1.5708,  1.5708,
          0.4500, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4023, -1.5628, -0.4965, -1.6058, -0.9448, -0.9167, -1.5708,  1.5708,
          0.4498, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4078, -1.5618, -0.5146, -1.6056, -0.9449, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4067, -1.5623, -0.5323, -1.6050, -0.9449, -0.9166, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3888, -1.5650, -0.5473, -1.5930, -0.9451, -0.9166, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3827, -1.5700, -0.5494, -1.5792, -0.9452, -0.9167, -1.5708,  1.5708,
          0.4498, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4050, -1.5747, -0.5362, -1.5644, -0.9454, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4289, -1.5737, -0.5190, -1.5497, -0.9455, -0.9168, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4447, -1.5721, -0.5204, -1.5466, -0.9456, -0.9169, -1.5708,  1.5708,
          0.4495, -1.0942]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4586, -1.5684, -0.5448, -1.5330, -0.9457, -0.9170, -1.5708,  1.5708,
          0.4495, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4669, -1.5670, -0.5651, -1.5333, -0.9458, -0.9170, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4902, -1.5650, -0.5822, -1.5341, -0.9458, -0.9170, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5278, -1.5617, -0.6033, -1.5267, -0.9458, -0.9170, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.525000. Loss: 1.537835. Time: 5.975311
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.550000, Val Loss: 1.505399 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5012, -1.5622, -0.6623, -1.5351, -0.9459, -0.9170, -1.5708,  1.5708,
          0.4495, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4459, -1.5646, -0.6935, -1.5459, -0.9460, -0.9170, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4191, -1.5679, -0.7172, -1.5656, -0.9461, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3980, -1.5687, -0.7418, -1.5697, -0.9462, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0945]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3988, -1.5664, -0.7170, -1.5693, -0.9462, -0.9172, -1.5708,  1.5708,
          0.4492, -1.0945]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4208, -1.5644, -0.6553, -1.5744, -0.9462, -0.9173, -1.5708,  1.5708,
          0.4492, -1.0946]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4400, -1.5675, -0.5899, -1.5728, -0.9464, -0.9175, -1.5708,  1.5708,
          0.4490, -1.0947]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4653, -1.5700, -0.5392, -1.5753, -0.9464, -0.9176, -1.5708,  1.5708,
          0.4489, -1.0949]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4702, -1.5701, -0.5200, -1.5602, -0.9465, -0.9176, -1.5708,  1.5708,
          0.4488, -1.0949]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4695, -1.5701, -0.5233, -1.5442, -0.9465, -0.9177, -1.5708,  1.5708,
          0.4488, -1.0950]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4688, -1.5715, -0.5351, -1.5325, -0.9466, -0.9177, -1.5708,  1.5708,
          0.4487, -1.0950]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4603, -1.5738, -0.5544, -1.5265, -0.9466, -0.9177, -1.5708,  1.5708,
          0.4487, -1.0950]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4433, -1.5726, -0.5789, -1.5458, -0.9466, -0.9178, -1.5708,  1.5708,
          0.4486, -1.0951]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4247, -1.5728, -0.6021, -1.5688, -0.9467, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0951]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4352, -1.5765, -0.6011, -1.5874, -0.9467, -0.9178, -1.5708,  1.5708,
          0.4486, -1.0951]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4498, -1.5767, -0.5987, -1.5875, -0.9467, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0951]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4521, -1.5758, -0.6067, -1.5841, -0.9468, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0952]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4479, -1.5753, -0.6125, -1.5915, -0.9468, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0952]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4557, -1.5783, -0.6182, -1.5852, -0.9468, -0.9178, -1.5708,  1.5708,
          0.4487, -1.0951]], dtype=torch.float64, requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.520000. Loss: 1.495057. Time: 5.961262
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.610000, Val Loss: 1.384818 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4618, -1.5790, -0.6516, -1.5777, -0.9468, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0952]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4591, -1.5771, -0.6664, -1.5541, -0.9469, -0.9181, -1.5708,  1.5708,
          0.4484, -1.0953]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4565, -1.5702, -0.6721, -1.5344, -0.9471, -0.9183, -1.5708,  1.5708,
          0.4482, -1.0955]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4711, -1.5646, -0.6736, -1.5267, -0.9472, -0.9184, -1.5708,  1.5708,
          0.4480, -1.0957]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4795, -1.5638, -0.6614, -1.5258, -0.9474, -0.9186, -1.5708,  1.5708,
          0.4478, -1.0959]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5035, -1.5654, -0.6307, -1.5484, -0.9476, -0.9190, -1.5708,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5168, -1.5687, -0.6129, -1.5773, -0.9477, -0.9192, -1.5708,  1.5708,
          0.4473, -1.0965]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5083, -1.5713, -0.6115, -1.6112, -0.9478, -0.9193, -1.5708,  1.5708,
          0.4472, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4979, -1.5721, -0.6197, -1.6087, -0.9479, -0.9194, -1.5708,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4950, -1.5735, -0.6235, -1.5978, -0.9479, -0.9194, -1.5708,  1.5708,
          0.4470, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5145, -1.5738, -0.6275, -1.5770, -0.9479, -0.9195, -1.5708,  1.5708,
          0.4470, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5232, -1.5699, -0.6225, -1.5798, -0.9480, -0.9195, -1.5708,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5307, -1.5675, -0.6077, -1.5750, -0.9481, -0.9196, -1.5708,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5227, -1.5686, -0.6090, -1.5543, -0.9481, -0.9197, -1.5708,  1.5708,
          0.4467, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4859, -1.5684, -0.6187, -1.5430, -0.9482, -0.9197, -1.5708,  1.5708,
          0.4467, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4446, -1.5691, -0.6230, -1.5492, -0.9482, -0.9197, -1.5708,  1.5708,
          0.4468, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4226, -1.5675, -0.6035, -1.5566, -0.9482, -0.9197, -1.5708,  1.5708,
          0.4468, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4263, -1.5649, -0.5704, -1.5620, -0.9482, -0.9197, -1.5708,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4335, -1.5633, -0.5590, -1.5724, -0.9482, -0.9197, -1.5708,  1.5708,
          0.4468, -1.0970]], dtype=torch.float64, requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.560000. Loss: 1.390431. Time: 5.959215
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.520000, Val Loss: 1.326595 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4228, -1.5686, -0.5499, -1.5666, -0.9484, -0.9198, -1.5708,  1.5708,
          0.4467, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4169, -1.5710, -0.5388, -1.5530, -0.9485, -0.9198, -1.5708,  1.5708,
          0.4467, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4051, -1.5728, -0.5367, -1.5455, -0.9485, -0.9198, -1.5708,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4024, -1.5729, -0.5328, -1.5424, -0.9485, -0.9199, -1.5708,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3979, -1.5729, -0.5391, -1.5505, -0.9486, -0.9199, -1.5708,  1.5708,
          0.4466, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3822, -1.5731, -0.5553, -1.5671, -0.9486, -0.9198, -1.5708,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3525, -1.5721, -0.5784, -1.5707, -0.9486, -0.9198, -1.5708,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3586, -1.5730, -0.5817, -1.5651, -0.9486, -0.9198, -1.5708,  1.5708,
          0.4467, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3673, -1.5720, -0.5730, -1.5607, -0.9487, -0.9198, -1.5708,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3413, -1.5707, -0.6111, -1.5634, -0.9487, -0.9199, -1.5708,  1.5708,
          0.4466, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3214, -1.5683, -0.6258, -1.5721, -0.9487, -0.9199, -1.5708,  1.5708,
          0.4465, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3190, -1.5665, -0.6264, -1.5759, -0.9487, -0.9199, -1.5708,  1.5708,
          0.4465, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3327, -1.5667, -0.6071, -1.5786, -0.9487, -0.9200, -1.5708,  1.5708,
          0.4465, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3444, -1.5665, -0.5940, -1.5699, -0.9487, -0.9200, -1.5708,  1.5708,
          0.4465, -1.0973]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3889, -1.5685, -0.5623, -1.5516, -0.9488, -0.9201, -1.5708,  1.5708,
          0.4463, -1.0974]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4378, -1.5728, -0.5319, -1.5408, -0.9488, -0.9202, -1.5708,  1.5708,
          0.4462, -1.0975]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4660, -1.5746, -0.5190, -1.5338, -0.9489, -0.9204, -1.5708,  1.5708,
          0.4460, -1.0977]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4703, -1.5732, -0.5267, -1.5495, -0.9490, -0.9206, -1.5708,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4527, -1.5725, -0.5479, -1.5633, -0.9491, -0.9208, -1.5708,  1.5708,
          0.4456, -1.0981]], dtype=torch.float64, requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.565000. Loss: 1.413670. Time: 5.953001
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.590000, Val Loss: 1.226853 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4100, -1.5716, -0.6018, -1.5836, -0.9491, -0.9210, -1.5708,  1.5708,
          0.4455, -1.0983]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.3987, -1.5732, -0.6198, -1.5783, -0.9491, -0.9210, -1.5708,  1.5708,
          0.4455, -1.0983]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4031, -1.5754, -0.6201, -1.5860, -0.9491, -0.9210, -1.5708,  1.5708,
          0.4454, -1.0983]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4232, -1.5737, -0.6037, -1.5776, -0.9492, -0.9211, -1.5708,  1.5708,
          0.4454, -1.0984]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4239, -1.5722, -0.6063, -1.5656, -0.9492, -0.9212, -1.5708,  1.5708,
          0.4453, -1.0985]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4173, -1.5698, -0.5969, -1.5703, -0.9492, -0.9213, -1.5708,  1.5708,
          0.4452, -1.0986]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4106, -1.5658, -0.5934, -1.5851, -0.9493, -0.9213, -1.5708,  1.5708,
          0.4451, -1.0986]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4231, -1.5651, -0.5897, -1.5910, -0.9493, -0.9214, -1.5708,  1.5708,
          0.4450, -1.0987]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4399, -1.5676, -0.5792, -1.5779, -0.9494, -0.9216, -1.5708,  1.5708,
          0.4448, -1.0989]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4696, -1.5694, -0.5608, -1.5582, -0.9495, -0.9218, -1.5708,  1.5708,
          0.4447, -1.0991]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4857, -1.5683, -0.5543, -1.5419, -0.9495, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4974, -1.5678, -0.5635, -1.5394, -0.9495, -0.9219, -1.5708,  1.5708,
          0.4445, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4872, -1.5677, -0.5721, -1.5463, -0.9496, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4833, -1.5681, -0.5850, -1.5525, -0.9496, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4832, -1.5683, -0.6003, -1.5626, -0.9496, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4753, -1.5670, -0.6194, -1.5664, -0.9496, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0991]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4643, -1.5665, -0.6309, -1.5621, -0.9496, -0.9219, -1.5708,  1.5708,
          0.4445, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4755, -1.5670, -0.6328, -1.5573, -0.9496, -0.9220, -1.5708,  1.5708,
          0.4445, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4729, -1.5689, -0.6379, -1.5508, -0.9496, -0.9220, -1.5708,  1.5708,
          0.4444, -1.0993]], dtype=torch.float64, requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.595000. Loss: 1.346642. Time: 5.962101
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.630000, Val Loss: 1.326008 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4621, -1.5748, -0.6643, -1.5508, -0.9497, -0.9221, -1.5708,  1.5708,
          0.4444, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4635, -1.5786, -0.6737, -1.5527, -0.9497, -0.9221, -1.5708,  1.5708,
          0.4444, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4709, -1.5794, -0.6708, -1.5447, -0.9497, -0.9222, -1.5708,  1.5708,
          0.4443, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4672, -1.5793, -0.6489, -1.5390, -0.9498, -0.9223, -1.5708,  1.5708,
          0.4441, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4603, -1.5766, -0.6382, -1.5436, -0.9499, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4606, -1.5727, -0.6360, -1.5480, -0.9500, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4655, -1.5678, -0.6423, -1.5565, -0.9501, -0.9232, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4784, -1.5639, -0.6382, -1.5608, -0.9502, -0.9235, -1.5708,  1.5708,
          0.4429, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4947, -1.5635, -0.6473, -1.5456, -0.9503, -0.9237, -1.5708,  1.5708,
          0.4427, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4973, -1.5645, -0.6605, -1.5427, -0.9504, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4982, -1.5661, -0.6665, -1.5486, -0.9505, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4922, -1.5671, -0.6713, -1.5642, -0.9505, -0.9240, -1.5708,  1.5708,
          0.4424, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4900, -1.5664, -0.6687, -1.5765, -0.9505, -0.9241, -1.5708,  1.5708,
          0.4424, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5009, -1.5639, -0.6639, -1.5804, -0.9505, -0.9242, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4979, -1.5627, -0.6664, -1.5723, -0.9505, -0.9242, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4871, -1.5643, -0.6771, -1.5652, -0.9506, -0.9238, -1.5708,  1.5708,
          0.4427, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4743, -1.5670, -0.6833, -1.5557, -0.9507, -0.9235, -1.5708,  1.5708,
          0.4430, -1.1007]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4651, -1.5698, -0.6856, -1.5467, -0.9507, -0.9233, -1.5708,  1.5708,
          0.4432, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4580, -1.5710, -0.6834, -1.5382, -0.9508, -0.9232, -1.5708,  1.5708,
          0.4433, -1.1004]], dtype=torch.float64, requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.615000. Loss: 1.238369. Time: 5.958507
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.560000, Val Loss: 1.139326 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4825, -1.5729, -0.6510, -1.5464, -0.9508, -0.9230, -1.5708,  1.5708,
          0.4435, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5133, -1.5744, -0.6312, -1.5534, -0.9508, -0.9229, -1.5708,  1.5708,
          0.4436, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5385, -1.5745, -0.6203, -1.5715, -0.9509, -0.9229, -1.5708,  1.5708,
          0.4436, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5422, -1.5749, -0.6236, -1.5817, -0.9509, -0.9230, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5345, -1.5777, -0.6420, -1.6091, -0.9508, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5286, -1.5795, -0.6608, -1.6170, -0.9508, -0.9231, -1.5708,  1.5708,
          0.4433, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5398, -1.5796, -0.6790, -1.6273, -0.9508, -0.9231, -1.5708,  1.5708,
          0.4433, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5378, -1.5790, -0.6863, -1.6370, -0.9509, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5398, -1.5788, -0.6902, -1.6481, -0.9509, -0.9228, -1.5708,  1.5708,
          0.4436, -1.1001]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5480, -1.5764, -0.7034, -1.6447, -0.9510, -0.9226, -1.5708,  1.5708,
          0.4438, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5489, -1.5742, -0.7137, -1.6370, -0.9511, -0.9225, -1.5708,  1.5708,
          0.4440, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5364, -1.5712, -0.7251, -1.6207, -0.9511, -0.9224, -1.5708,  1.5708,
          0.4440, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5237, -1.5699, -0.7313, -1.5959, -0.9512, -0.9224, -1.5708,  1.5708,
          0.4440, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5096, -1.5676, -0.7309, -1.5731, -0.9512, -0.9224, -1.5708,  1.5708,
          0.4441, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5168, -1.5668, -0.7195, -1.5665, -0.9512, -0.9225, -1.5708,  1.5708,
          0.4440, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5369, -1.5686, -0.6908, -1.5549, -0.9513, -0.9227, -1.5708,  1.5708,
          0.4438, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5621, -1.5699, -0.6755, -1.5475, -0.9513, -0.9228, -1.5708,  1.5708,
          0.4436, -1.1001]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5658, -1.5705, -0.6767, -1.5395, -0.9513, -0.9229, -1.5708,  1.5708,
          0.4436, -1.1001]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5640, -1.5715, -0.6916, -1.5271, -0.9514, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.635000. Loss: 1.169474. Time: 5.962771
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.690000, Val Loss: 0.996094 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5568, -1.5707, -0.7232, -1.5186, -0.9514, -0.9230, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5430, -1.5689, -0.7417, -1.5148, -0.9514, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5306, -1.5710, -0.7635, -1.5194, -0.9515, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5144, -1.5737, -0.7765, -1.5274, -0.9515, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5042, -1.5753, -0.7736, -1.5290, -0.9515, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4935, -1.5777, -0.7795, -1.5381, -0.9515, -0.9230, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4896, -1.5776, -0.7766, -1.5432, -0.9515, -0.9231, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.4843, -1.5750, -0.7761, -1.5520, -0.9516, -0.9231, -1.5708,  1.5708,
          0.4433, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5031, -1.5708, -0.7929, -1.5493, -0.9517, -0.9232, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5389, -1.5677, -0.7881, -1.5467, -0.9518, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5593, -1.5650, -0.7722, -1.5419, -0.9518, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5746, -1.5642, -0.7495, -1.5314, -0.9519, -0.9234, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5768, -1.5647, -0.7270, -1.5136, -0.9519, -0.9235, -1.5708,  1.5708,
          0.4429, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5842, -1.5651, -0.7395, -1.4879, -0.9520, -0.9235, -1.5708,  1.5708,
          0.4430, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5969, -1.5657, -0.7606, -1.4605, -0.9520, -0.9235, -1.5708,  1.5708,
          0.4430, -1.1007]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6166, -1.5655, -0.7817, -1.4726, -0.9520, -0.9234, -1.5708,  1.5708,
          0.4430, -1.1007]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6253, -1.5646, -0.7968, -1.4969, -0.9520, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6271, -1.5649, -0.8080, -1.5170, -0.9520, -0.9234, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6272, -1.5662, -0.8191, -1.5261, -0.9520, -0.9235, -1.5708,  1.5708,
          0.4429, -1.1008]], dtype=torch.float64, requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.540000. Loss: 1.325024. Time: 5.963384
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.690000, Val Loss: 1.019012 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6453, -1.5724, -0.8031, -1.5273, -0.9522, -0.9237, -1.5708,  1.5708,
          0.4428, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6428, -1.5773, -0.8049, -1.5294, -0.9522, -0.9238, -1.5708,  1.5708,
          0.4427, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6375, -1.5818, -0.8016, -1.5447, -0.9521, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6388, -1.5832, -0.8035, -1.5517, -0.9522, -0.9238, -1.5708,  1.5708,
          0.4427, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6554, -1.5843, -0.8200, -1.5557, -0.9522, -0.9233, -1.5708,  1.5708,
          0.4432, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6605, -1.5826, -0.8364, -1.5550, -0.9524, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6566, -1.5807, -0.8488, -1.5532, -0.9525, -0.9238, -1.5708,  1.5708,
          0.4427, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6683, -1.5811, -0.8574, -1.5392, -0.9525, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6720, -1.5774, -0.8663, -1.5196, -0.9527, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6639, -1.5725, -0.8629, -1.5177, -0.9529, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6502, -1.5691, -0.8797, -1.5088, -0.9530, -0.9238, -1.5708,  1.5708,
          0.4427, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6375, -1.5655, -0.9135, -1.4916, -0.9531, -0.9237, -1.5708,  1.5708,
          0.4428, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6278, -1.5622, -0.9355, -1.4999, -0.9531, -0.9235, -1.5708,  1.5708,
          0.4429, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6477, -1.5619, -0.9438, -1.5090, -0.9532, -0.9235, -1.5708,  1.5708,
          0.4430, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6836, -1.5605, -0.9412, -1.5045, -0.9532, -0.9232, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6921, -1.5608, -0.9401, -1.5219, -0.9532, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6940, -1.5603, -0.9332, -1.5319, -0.9532, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7053, -1.5610, -0.9190, -1.5443, -0.9533, -0.9223, -1.5708,  1.5708,
          0.4441, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7048, -1.5643, -0.9108, -1.5614, -0.9534, -0.9224, -1.5708,  1.5708,
          0.4441, -1.0996]], dtype=torch.float64, requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.605000. Loss: 1.232312. Time: 5.962415
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.660000, Val Loss: 1.044018 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6871, -1.5727, -0.9296, -1.5909, -0.9537, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6775, -1.5762, -0.9442, -1.5991, -0.9538, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6585, -1.5748, -0.9603, -1.5947, -0.9539, -0.9226, -1.5708,  1.5708,
          0.4438, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6292, -1.5722, -0.9699, -1.5951, -0.9540, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5962, -1.5706, -0.9867, -1.5840, -0.9541, -0.9225, -1.5708,  1.5708,
          0.4439, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5702, -1.5709, -1.0186, -1.5785, -0.9542, -0.9225, -1.5708,  1.5708,
          0.4439, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5444, -1.5746, -1.0409, -1.5768, -0.9542, -0.9225, -1.5708,  1.5708,
          0.4439, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5477, -1.5802, -1.0199, -1.5819, -0.9541, -0.9224, -1.5708,  1.5708,
          0.4440, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5484, -1.5838, -0.9805, -1.5766, -0.9541, -0.9222, -1.5708,  1.5708,
          0.4442, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5478, -1.5836, -0.9705, -1.5697, -0.9542, -0.9224, -1.5708,  1.5708,
          0.4441, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5663, -1.5802, -0.9522, -1.5609, -0.9545, -0.9227, -1.5708,  1.5708,
          0.4437, -1.1000]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5871, -1.5746, -0.9355, -1.5521, -0.9548, -0.9234, -1.5708,  1.5708,
          0.4431, -1.1007]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6002, -1.5686, -0.9187, -1.5452, -0.9550, -0.9238, -1.5708,  1.5708,
          0.4426, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5982, -1.5644, -0.9022, -1.5357, -0.9551, -0.9241, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6000, -1.5627, -0.8791, -1.5425, -0.9553, -0.9242, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5963, -1.5610, -0.8660, -1.5530, -0.9553, -0.9242, -1.5708,  1.5708,
          0.4422, -1.1015]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6169, -1.5622, -0.8415, -1.5540, -0.9554, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6415, -1.5664, -0.8155, -1.5453, -0.9556, -0.9250, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6512, -1.5682, -0.7931, -1.5372, -0.9557, -0.9253, -1.5708,  1.5708,
          0.4412, -1.1026]], dtype=torch.float64, requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.640000. Loss: 1.195415. Time: 5.959927
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.700000, Val Loss: 1.002584 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6564, -1.5655, -0.7838, -1.5479, -0.9558, -0.9256, -1.5708,  1.5708,
          0.4409, -1.1029]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6543, -1.5651, -0.7803, -1.5650, -0.9558, -0.9257, -1.5708,  1.5708,
          0.4408, -1.1029]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6393, -1.5669, -0.7890, -1.6091, -0.9559, -0.9254, -1.5708,  1.5708,
          0.4410, -1.1027]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6201, -1.5688, -0.8001, -1.6320, -0.9559, -0.9251, -1.5708,  1.5708,
          0.4413, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6146, -1.5705, -0.8136, -1.6600, -0.9560, -0.9249, -1.5708,  1.5708,
          0.4415, -1.1022]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6160, -1.5719, -0.8175, -1.6697, -0.9560, -0.9248, -1.5708,  1.5708,
          0.4416, -1.1021]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6052, -1.5709, -0.8244, -1.6582, -0.9560, -0.9247, -1.5708,  1.5708,
          0.4417, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5882, -1.5702, -0.8550, -1.6253, -0.9560, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5815, -1.5707, -0.8625, -1.5944, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5729, -1.5693, -0.8533, -1.5752, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5655, -1.5686, -0.8442, -1.5791, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5612, -1.5695, -0.8394, -1.5793, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5796, -1.5706, -0.8308, -1.5748, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6005, -1.5695, -0.8178, -1.5758, -0.9561, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6157, -1.5688, -0.8183, -1.5792, -0.9561, -0.9246, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5952, -1.5695, -0.8380, -1.5858, -0.9561, -0.9245, -1.5708,  1.5708,
          0.4419, -1.1018]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5857, -1.5709, -0.8475, -1.5736, -0.9562, -0.9245, -1.5708,  1.5708,
          0.4420, -1.1018]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5948, -1.5707, -0.8466, -1.5634, -0.9562, -0.9245, -1.5708,  1.5708,
          0.4420, -1.1017]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6159, -1.5694, -0.8363, -1.5599, -0.9562, -0.9245, -1.5708,  1.5708,
          0.4420, -1.1017]], dtype=torch.float64, requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.710000. Loss: 1.025530. Time: 5.959508
Validate after epoch 14 with seed 964979
Val Accuracy: 0.620000, Val Loss: 1.060671 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6157, -1.5687, -0.8203, -1.5494, -0.9562, -0.9245, -1.5708,  1.5708,
          0.4420, -1.1017]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6193, -1.5707, -0.8073, -1.5549, -0.9562, -0.9245, -1.5708,  1.5708,
          0.4419, -1.1018]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6171, -1.5738, -0.7976, -1.5602, -0.9562, -0.9246, -1.5708,  1.5708,
          0.4419, -1.1018]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6199, -1.5766, -0.7946, -1.5575, -0.9562, -0.9248, -1.5708,  1.5708,
          0.4417, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6343, -1.5771, -0.7974, -1.5519, -0.9563, -0.9250, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6471, -1.5759, -0.7978, -1.5239, -0.9563, -0.9255, -1.5708,  1.5708,
          0.4410, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6556, -1.5759, -0.7966, -1.4781, -0.9564, -0.9256, -1.5708,  1.5708,
          0.4408, -1.1029]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6670, -1.5739, -0.8148, -1.4646, -0.9564, -0.9255, -1.5708,  1.5708,
          0.4410, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6564, -1.5735, -0.8414, -1.4574, -0.9564, -0.9253, -1.5708,  1.5708,
          0.4411, -1.1026]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6498, -1.5736, -0.8593, -1.4665, -0.9565, -0.9252, -1.5708,  1.5708,
          0.4412, -1.1025]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6532, -1.5732, -0.8647, -1.4795, -0.9565, -0.9251, -1.5708,  1.5708,
          0.4413, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6630, -1.5710, -0.8595, -1.4975, -0.9565, -0.9251, -1.5708,  1.5708,
          0.4414, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6717, -1.5687, -0.8542, -1.5202, -0.9565, -0.9250, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6632, -1.5648, -0.8609, -1.5414, -0.9565, -0.9249, -1.5708,  1.5708,
          0.4415, -1.1022]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6443, -1.5602, -0.8654, -1.5508, -0.9564, -0.9250, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6204, -1.5584, -0.8645, -1.5588, -0.9565, -0.9250, -1.5708,  1.5708,
          0.4415, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6089, -1.5629, -0.8626, -1.5769, -0.9568, -0.9251, -1.5708,  1.5708,
          0.4413, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6075, -1.5683, -0.8555, -1.5827, -0.9571, -0.9254, -1.5708,  1.5708,
          0.4410, -1.1027]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6065, -1.5714, -0.8518, -1.5840, -0.9573, -0.9256, -1.5708,  1.5708,
          0.4409, -1.1029]], dtype=torch.float64, requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.680000. Loss: 1.022110. Time: 5.972877
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.680000, Val Loss: 0.992003 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6201, -1.5750, -0.8267, -1.5980, -0.9574, -0.9258, -1.5708,  1.5708,
          0.4407, -1.1031]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6283, -1.5764, -0.8301, -1.6001, -0.9575, -0.9259, -1.5708,  1.5708,
          0.4406, -1.1032]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6437, -1.5767, -0.8308, -1.5973, -0.9575, -0.9259, -1.5708,  1.5708,
          0.4405, -1.1032]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6587, -1.5770, -0.8237, -1.5894, -0.9575, -0.9259, -1.5708,  1.5708,
          0.4405, -1.1032]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6672, -1.5790, -0.8193, -1.5978, -0.9575, -0.9262, -1.5708,  1.5708,
          0.4402, -1.1035]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6661, -1.5795, -0.8204, -1.6065, -0.9575, -0.9263, -1.5708,  1.5708,
          0.4402, -1.1036]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6679, -1.5814, -0.8266, -1.6159, -0.9574, -0.9260, -1.5708,  1.5708,
          0.4404, -1.1033]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6626, -1.5823, -0.8287, -1.6085, -0.9574, -0.9255, -1.5708,  1.5708,
          0.4409, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6499, -1.5805, -0.8330, -1.5950, -0.9575, -0.9253, -1.5708,  1.5708,
          0.4411, -1.1026]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6440, -1.5707, -0.8489, -1.5895, -0.9579, -0.9255, -1.5708,  1.5708,
          0.4410, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6428, -1.5602, -0.8599, -1.5741, -0.9582, -0.9255, -1.5708,  1.5708,
          0.4409, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6411, -1.5542, -0.8731, -1.5654, -0.9584, -0.9252, -1.5708,  1.5708,
          0.4412, -1.1025]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6429, -1.5508, -0.8791, -1.5551, -0.9585, -0.9251, -1.5708,  1.5708,
          0.4413, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6485, -1.5468, -0.8870, -1.5455, -0.9584, -0.9251, -1.5708,  1.5708,
          0.4413, -1.1024]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6442, -1.5456, -0.8916, -1.5431, -0.9584, -0.9247, -1.5708,  1.5708,
          0.4418, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6225, -1.5520, -0.8928, -1.5298, -0.9593, -0.9237, -1.5708,  1.5708,
          0.4428, -1.1010]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6070, -1.5590, -0.8870, -1.5199, -0.9601, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5826, -1.5627, -0.8856, -1.5325, -0.9606, -0.9223, -1.5708,  1.5708,
          0.4442, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5519, -1.5632, -0.8829, -1.5548, -0.9608, -0.9221, -1.5708,  1.5708,
          0.4444, -1.0993]], dtype=torch.float64, requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.700000. Loss: 0.979604. Time: 5.960812
Validate after epoch 16 with seed 840036
Val Accuracy: 0.630000, Val Loss: 1.160617 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5598, -1.5739, -0.8478, -1.5575, -0.9613, -0.9223, -1.5708,  1.5708,
          0.4442, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5853, -1.5822, -0.8181, -1.5624, -0.9615, -0.9222, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6015, -1.5921, -0.8132, -1.5819, -0.9613, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5969, -1.5971, -0.8365, -1.6027, -0.9613, -0.9222, -1.5708,  1.5708,
          0.4442, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5983, -1.6014, -0.8404, -1.6154, -0.9612, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5815, -1.6013, -0.8418, -1.6313, -0.9615, -0.9248, -1.5708,  1.5708,
          0.4417, -1.1021]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5409, -1.6054, -0.8558, -1.6163, -0.9611, -0.9256, -1.5708,  1.5708,
          0.4409, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5251, -1.6045, -0.8562, -1.6046, -0.9614, -0.9269, -1.5708,  1.5708,
          0.4395, -1.1042]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5178, -1.5956, -0.8544, -1.5982, -0.9628, -0.9276, -1.5708,  1.5708,
          0.4388, -1.1049]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5054, -1.5729, -0.8550, -1.6031, -0.9658, -0.9271, -1.5708,  1.5708,
          0.4393, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5195, -1.5512, -0.8376, -1.6152, -0.9676, -0.9265, -1.5708,  1.5708,
          0.4400, -1.1038]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5467, -1.5339, -0.8250, -1.6404, -0.9684, -0.9258, -1.5708,  1.5708,
          0.4407, -1.1030]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5720, -1.5209, -0.8102, -1.6709, -0.9684, -0.9249, -1.5708,  1.5708,
          0.4415, -1.1022]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5904, -1.5107, -0.8026, -1.6886, -0.9679, -0.9226, -1.5708,  1.5708,
          0.4438, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5945, -1.5150, -0.7991, -1.6815, -0.9705, -0.9211, -1.5708,  1.5708,
          0.4454, -1.0984]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5915, -1.5237, -0.8011, -1.6661, -0.9738, -0.9193, -1.5708,  1.5708,
          0.4472, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5848, -1.5279, -0.8007, -1.6495, -0.9756, -0.9176, -1.5708,  1.5708,
          0.4488, -1.0949]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5824, -1.5448, -0.7997, -1.6065, -0.9795, -0.9170, -1.5708,  1.5708,
          0.4495, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5783, -1.5821, -0.7849, -1.5829, -0.9853, -0.9176, -1.5708,  1.5708,
          0.4488, -1.0949]], dtype=torch.float64, requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.655000. Loss: 1.075209. Time: 5.955120
Validate after epoch 17 with seed 180463
Val Accuracy: 0.660000, Val Loss: 1.064367 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5771, -1.6235, -0.7784, -1.5723, -0.9913, -0.9184, -1.5708,  1.5708,
          0.4481, -1.0957]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5760, -1.6439, -0.7755, -1.5665, -0.9895, -0.9175, -1.5708,  1.5708,
          0.4489, -1.0948]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5841, -1.6684, -0.7743, -1.5761, -0.9833, -0.9152, -1.5708,  1.5708,
          0.4512, -1.0925]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6048, -1.6686, -0.7768, -1.5903, -0.9880, -0.9125, -1.5708,  1.5708,
          0.4539, -1.0898]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6133, -1.6295, -0.7828, -1.5801, -1.0103, -0.9135, -1.5708,  1.5708,
          0.4530, -1.0908]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6139, -1.5845, -0.7872, -1.5648, -1.0320, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6280, -1.5620, -0.7890, -1.5563, -1.0456, -0.9174, -1.5708,  1.5708,
          0.4491, -1.0947]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6235, -1.5485, -0.7949, -1.5562, -1.0533, -0.9181, -1.5708,  1.5708,
          0.4484, -1.0953]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6116, -1.5210, -0.8056, -1.5590, -1.0546, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0951]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6249, -1.5157, -0.8231, -1.5495, -1.0600, -0.9173, -1.5708,  1.5708,
          0.4492, -1.0946]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6490, -1.5160, -0.8222, -1.5419, -1.0644, -0.9170, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6707, -1.5182, -0.8203, -1.5363, -1.0678, -0.9194, -1.5708,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6643, -1.5136, -0.8194, -1.5327, -1.0679, -0.9204, -1.5708,  1.5708,
          0.4461, -1.0976]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6437, -1.5133, -0.8216, -1.5419, -1.0690, -0.9194, -1.5708,  1.5708,
          0.4471, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6260, -1.5229, -0.8179, -1.5609, -1.0733, -0.9206, -1.5708,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6265, -1.5495, -0.8162, -1.5732, -1.0828, -0.9226, -1.5708,  1.5708,
          0.4439, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6262, -1.5818, -0.8144, -1.5709, -1.0909, -0.9241, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6302, -1.6025, -0.8093, -1.5660, -1.0963, -0.9250, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6215, -1.6189, -0.8224, -1.5500, -1.0982, -0.9252, -1.5708,  1.5708,
          0.4412, -1.1025]], dtype=torch.float64, requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.695000. Loss: 0.962222. Time: 5.965585
Validate after epoch 18 with seed 575883
Val Accuracy: 0.550000, Val Loss: 1.324597 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5838, -1.6393, -0.8645, -1.5453, -1.0994, -0.9312, -1.5708,  1.5708,
          0.4353, -1.1085]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5661, -1.6404, -0.8855, -1.5215, -1.1014, -0.9345, -1.5708,  1.5708,
          0.4320, -1.1117]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5397, -1.6265, -0.9232, -1.4950, -1.1102, -0.9380, -1.5708,  1.5708,
          0.4285, -1.1153]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5327, -1.6008, -0.9405, -1.4670, -1.1236, -0.9409, -1.5708,  1.5708,
          0.4256, -1.1182]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5512, -1.5751, -0.9332, -1.4386, -1.1337, -0.9424, -1.5708,  1.5708,
          0.4240, -1.1197]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5697, -1.5498, -0.9361, -1.4227, -1.1409, -0.9430, -1.5708,  1.5708,
          0.4234, -1.1203]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5868, -1.5295, -0.9390, -1.4222, -1.1445, -0.9435, -1.5708,  1.5708,
          0.4230, -1.1207]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6075, -1.5007, -0.9158, -1.4507, -1.1397, -0.9451, -1.5708,  1.5708,
          0.4213, -1.1224]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6168, -1.4597, -0.8846, -1.4659, -1.1222, -0.9476, -1.5708,  1.5708,
          0.4189, -1.1249]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6194, -1.4225, -0.8627, -1.4778, -1.1002, -0.9523, -1.5708,  1.5708,
          0.4142, -1.1295]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6345, -1.4299, -0.8654, -1.4705, -1.1223, -0.9511, -1.5708,  1.5708,
          0.4153, -1.1284]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6620, -1.4714, -0.8848, -1.4671, -1.1779, -0.9445, -1.5708,  1.5708,
          0.4220, -1.1218]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6764, -1.5089, -0.8966, -1.4810, -1.2227, -0.9404, -1.5708,  1.5708,
          0.4260, -1.1177]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6681, -1.5364, -0.9000, -1.5067, -1.2546, -0.9387, -1.5708,  1.5708,
          0.4278, -1.1159]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6643, -1.5433, -0.8935, -1.5307, -1.2695, -0.9379, -1.5708,  1.5708,
          0.4285, -1.1152]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6728, -1.5405, -0.8932, -1.5629, -1.2759, -0.9376, -1.5708,  1.5708,
          0.4288, -1.1149]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6676, -1.5485, -0.8997, -1.5773, -1.2836, -0.9366, -1.5708,  1.5708,
          0.4299, -1.1139]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6602, -1.5692, -0.9103, -1.5790, -1.2925, -0.9351, -1.5708,  1.5708,
          0.4313, -1.1124]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6451, -1.5887, -0.9270, -1.5712, -1.2979, -0.9343, -1.5708,  1.5708,
          0.4322, -1.1115]], dtype=torch.float64, requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.680000. Loss: 0.971230. Time: 5.957600
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.670000, Val Loss: 1.094793 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6394, -1.5938, -0.9622, -1.5533, -1.3100, -0.9326, -1.5708,  1.5708,
          0.4339, -1.1099]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6358, -1.5964, -0.9768, -1.5339, -1.3124, -0.9320, -1.5708,  1.5708,
          0.4345, -1.1092]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6343, -1.5952, -0.9956, -1.5126, -1.3150, -0.9320, -1.5708,  1.5708,
          0.4345, -1.1092]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6379, -1.5950, -1.0008, -1.5116, -1.3164, -0.9320, -1.5708,  1.5708,
          0.4345, -1.1092]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6210, -1.5943, -1.0155, -1.5157, -1.3174, -0.9322, -1.5708,  1.5708,
          0.4343, -1.1095]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6093, -1.5940, -1.0163, -1.5284, -1.3181, -0.9323, -1.5708,  1.5708,
          0.4341, -1.1096]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6127, -1.5935, -1.0138, -1.5316, -1.3187, -0.9324, -1.5708,  1.5708,
          0.4341, -1.1097]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6479, -1.5829, -0.9970, -1.5293, -1.3228, -0.9320, -1.5708,  1.5708,
          0.4344, -1.1093]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6714, -1.5827, -0.9937, -1.5183, -1.3241, -0.9319, -1.5708,  1.5708,
          0.4346, -1.1092]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6824, -1.5880, -0.9831, -1.5093, -1.3239, -0.9319, -1.5708,  1.5708,
          0.4345, -1.1092]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6852, -1.5865, -0.9769, -1.5008, -1.3252, -0.9319, -1.5708,  1.5708,
          0.4346, -1.1091]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6986, -1.5714, -0.9711, -1.4780, -1.3292, -0.9315, -1.5708,  1.5708,
          0.4350, -1.1088]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7106, -1.5587, -0.9674, -1.4578, -1.3325, -0.9312, -1.5708,  1.5708,
          0.4352, -1.1085]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7124, -1.5522, -0.9731, -1.4418, -1.3344, -0.9311, -1.5708,  1.5708,
          0.4354, -1.1084]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7192, -1.5435, -0.9761, -1.4213, -1.3344, -0.9311, -1.5708,  1.5708,
          0.4353, -1.1084]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7424, -1.5466, -0.9770, -1.3982, -1.3381, -0.9305, -1.5708,  1.5708,
          0.4359, -1.1078]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7595, -1.5539, -0.9770, -1.3735, -1.3426, -0.9296, -1.5708,  1.5708,
          0.4369, -1.1069]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7505, -1.5599, -0.9997, -1.3745, -1.3458, -0.9293, -1.5708,  1.5708,
          0.4371, -1.1066]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7263, -1.5668, -1.0142, -1.3864, -1.3483, -0.9291, -1.5708,  1.5708,
          0.4374, -1.1064]], dtype=torch.float64, requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.680000. Loss: 1.058144. Time: 5.959736
Validate after epoch 20 with seed 822616
Val Accuracy: 0.670000, Val Loss: 0.976709 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6908, -1.5751, -1.0173, -1.4648, -1.3517, -0.9287, -1.5708,  1.5708,
          0.4378, -1.1060]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6887, -1.5717, -1.0074, -1.5073, -1.3529, -0.9285, -1.5708,  1.5708,
          0.4380, -1.1057]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7086, -1.5728, -0.9988, -1.5214, -1.3536, -0.9284, -1.5708,  1.5708,
          0.4381, -1.1056]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7239, -1.5751, -1.0049, -1.5374, -1.3540, -0.9283, -1.5708,  1.5708,
          0.4381, -1.1056]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7397, -1.5764, -1.0161, -1.5362, -1.3544, -0.9283, -1.5708,  1.5708,
          0.4382, -1.1056]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7470, -1.5732, -1.0194, -1.5350, -1.3551, -0.9282, -1.5708,  1.5708,
          0.4382, -1.1055]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7500, -1.5702, -1.0089, -1.5409, -1.3557, -0.9282, -1.5708,  1.5708,
          0.4382, -1.1055]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7327, -1.5700, -1.0080, -1.5470, -1.3561, -0.9282, -1.5708,  1.5708,
          0.4383, -1.1055]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7138, -1.5678, -1.0199, -1.5431, -1.3564, -0.9282, -1.5708,  1.5708,
          0.4383, -1.1054]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6998, -1.5714, -1.0193, -1.5241, -1.3569, -0.9281, -1.5708,  1.5708,
          0.4383, -1.1054]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6833, -1.5794, -1.0166, -1.5197, -1.3571, -0.9282, -1.5708,  1.5708,
          0.4383, -1.1054]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6683, -1.5833, -1.0108, -1.5233, -1.3578, -0.9281, -1.5708,  1.5708,
          0.4383, -1.1054]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6854, -1.5750, -0.9934, -1.5315, -1.3606, -0.9278, -1.5708,  1.5708,
          0.4386, -1.1051]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7035, -1.5674, -0.9725, -1.5286, -1.3627, -0.9277, -1.5708,  1.5708,
          0.4388, -1.1050]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7232, -1.5625, -0.9600, -1.5319, -1.3639, -0.9277, -1.5708,  1.5708,
          0.4388, -1.1049]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7509, -1.5616, -0.9527, -1.5411, -1.3651, -0.9278, -1.5708,  1.5708,
          0.4387, -1.1050]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7623, -1.5662, -0.9553, -1.5427, -1.3667, -0.9278, -1.5708,  1.5708,
          0.4387, -1.1050]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7525, -1.5707, -0.9645, -1.5693, -1.3679, -0.9277, -1.5708,  1.5708,
          0.4388, -1.1050]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7335, -1.5782, -0.9667, -1.5923, -1.3685, -0.9276, -1.5708,  1.5708,
          0.4388, -1.1049]], dtype=torch.float64, requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.660000. Loss: 1.046210. Time: 5.962881
Validate after epoch 21 with seed 519531
Val Accuracy: 0.680000, Val Loss: 0.853641 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7036, -1.5792, -0.9662, -1.6202, -1.3707, -0.9275, -1.5708,  1.5708,
          0.4390, -1.1048]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6982, -1.5776, -0.9598, -1.6257, -1.3715, -0.9275, -1.5708,  1.5708,
          0.4390, -1.1048]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7029, -1.5733, -0.9581, -1.6059, -1.3725, -0.9275, -1.5708,  1.5708,
          0.4390, -1.1047]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7053, -1.5699, -0.9577, -1.5806, -1.3734, -0.9274, -1.5708,  1.5708,
          0.4391, -1.1047]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7043, -1.5702, -0.9495, -1.5658, -1.3739, -0.9274, -1.5708,  1.5708,
          0.4391, -1.1046]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6982, -1.5699, -0.9465, -1.5580, -1.3743, -0.9273, -1.5708,  1.5708,
          0.4391, -1.1046]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7091, -1.5682, -0.9350, -1.5464, -1.3745, -0.9273, -1.5708,  1.5708,
          0.4391, -1.1046]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7344, -1.5654, -0.9492, -1.5435, -1.3746, -0.9273, -1.5708,  1.5708,
          0.4392, -1.1046]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7368, -1.5638, -0.9592, -1.5464, -1.3746, -0.9272, -1.5708,  1.5708,
          0.4393, -1.1045]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7428, -1.5621, -0.9618, -1.5510, -1.3746, -0.9271, -1.5708,  1.5708,
          0.4393, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7478, -1.5639, -0.9616, -1.5650, -1.3751, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7512, -1.5692, -0.9623, -1.5696, -1.3761, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7549, -1.5700, -0.9663, -1.5761, -1.3767, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7601, -1.5721, -0.9813, -1.5793, -1.3771, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7616, -1.5740, -0.9881, -1.5700, -1.3774, -0.9270, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7458, -1.5813, -0.9960, -1.5592, -1.3771, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7250, -1.5858, -1.0050, -1.5612, -1.3770, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7191, -1.5868, -1.0042, -1.5549, -1.3777, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7131, -1.5821, -0.9983, -1.5506, -1.3797, -0.9271, -1.5708,  1.5708,
          0.4393, -1.1044]], dtype=torch.float64, requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.705000. Loss: 0.919698. Time: 5.962037
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.640000, Val Loss: 0.979393 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6948, -1.5644, -1.0088, -1.5557, -1.3851, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6819, -1.5625, -1.0128, -1.5500, -1.3867, -0.9270, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6811, -1.5624, -1.0175, -1.5410, -1.3880, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6859, -1.5630, -1.0195, -1.5366, -1.3888, -0.9273, -1.5708,  1.5708,
          0.4392, -1.1045]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6894, -1.5598, -1.0143, -1.5401, -1.3887, -0.9275, -1.5708,  1.5708,
          0.4390, -1.1047]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6961, -1.5594, -1.0057, -1.5331, -1.3891, -0.9274, -1.5708,  1.5708,
          0.4390, -1.1047]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7069, -1.5601, -0.9954, -1.5406, -1.3896, -0.9275, -1.5708,  1.5708,
          0.4390, -1.1047]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6893, -1.5638, -1.0068, -1.5527, -1.3907, -0.9273, -1.5708,  1.5708,
          0.4391, -1.1046]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6628, -1.5719, -1.0362, -1.5504, -1.3923, -0.9272, -1.5708,  1.5708,
          0.4393, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6505, -1.5785, -1.0759, -1.5316, -1.3933, -0.9271, -1.5708,  1.5708,
          0.4394, -1.1044]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6559, -1.5808, -1.0878, -1.5154, -1.3944, -0.9270, -1.5708,  1.5708,
          0.4394, -1.1043]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6744, -1.5800, -1.0803, -1.5233, -1.3955, -0.9268, -1.5708,  1.5708,
          0.4396, -1.1041]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7017, -1.5757, -1.0609, -1.5349, -1.3970, -0.9265, -1.5708,  1.5708,
          0.4399, -1.1038]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7092, -1.5726, -1.0454, -1.5431, -1.3981, -0.9263, -1.5708,  1.5708,
          0.4402, -1.1036]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7047, -1.5752, -1.0262, -1.5457, -1.3986, -0.9262, -1.5708,  1.5708,
          0.4403, -1.1035]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7118, -1.5798, -1.0047, -1.5424, -1.3985, -0.9262, -1.5708,  1.5708,
          0.4403, -1.1035]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7119, -1.5831, -0.9974, -1.5342, -1.3983, -0.9262, -1.5708,  1.5708,
          0.4402, -1.1035]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7186, -1.5823, -0.9875, -1.5290, -1.3991, -0.9261, -1.5708,  1.5708,
          0.4403, -1.1034]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7282, -1.5807, -0.9923, -1.5114, -1.3999, -0.9261, -1.5708,  1.5708,
          0.4404, -1.1034]], dtype=torch.float64, requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.665000. Loss: 0.998462. Time: 5.948815
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.720000, Val Loss: 0.912677 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7195, -1.5664, -1.0214, -1.4922, -1.4037, -0.9257, -1.5708,  1.5708,
          0.4407, -1.1030]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7142, -1.5635, -1.0355, -1.4980, -1.4048, -0.9256, -1.5708,  1.5708,
          0.4408, -1.1029]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7288, -1.5605, -1.0347, -1.4830, -1.4052, -0.9256, -1.5708,  1.5708,
          0.4409, -1.1028]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7461, -1.5558, -1.0237, -1.4656, -1.4046, -0.9256, -1.5708,  1.5708,
          0.4408, -1.1029]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7589, -1.5515, -1.0132, -1.4469, -1.4037, -0.9257, -1.5708,  1.5708,
          0.4408, -1.1030]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7632, -1.5530, -1.0121, -1.4416, -1.4052, -0.9254, -1.5708,  1.5708,
          0.4410, -1.1027]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7513, -1.5575, -1.0116, -1.4550, -1.4078, -0.9254, -1.5708,  1.5708,
          0.4411, -1.1027]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7382, -1.5624, -1.0034, -1.4664, -1.4102, -0.9252, -1.5708,  1.5708,
          0.4413, -1.1025]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7239, -1.5642, -1.0015, -1.4753, -1.4114, -0.9251, -1.5708,  1.5708,
          0.4414, -1.1023]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7019, -1.5674, -1.0044, -1.4912, -1.4124, -0.9249, -1.5708,  1.5708,
          0.4415, -1.1022]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6791, -1.5736, -1.0120, -1.4960, -1.4135, -0.9248, -1.5708,  1.5708,
          0.4417, -1.1021]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6648, -1.5755, -1.0242, -1.5100, -1.4144, -0.9247, -1.5708,  1.5708,
          0.4417, -1.1020]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6583, -1.5749, -1.0407, -1.5217, -1.4151, -0.9246, -1.5708,  1.5708,
          0.4418, -1.1019]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6572, -1.5741, -1.0557, -1.5284, -1.4156, -0.9245, -1.5708,  1.5708,
          0.4419, -1.1018]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6594, -1.5711, -1.0640, -1.5210, -1.4162, -0.9244, -1.5708,  1.5708,
          0.4421, -1.1017]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6382, -1.5676, -1.0803, -1.5012, -1.4165, -0.9243, -1.5708,  1.5708,
          0.4421, -1.1016]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6177, -1.5655, -1.0904, -1.4854, -1.4169, -0.9243, -1.5708,  1.5708,
          0.4422, -1.1015]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6124, -1.5648, -1.0923, -1.4715, -1.4172, -0.9242, -1.5708,  1.5708,
          0.4422, -1.1015]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6158, -1.5643, -1.0920, -1.4523, -1.4175, -0.9241, -1.5708,  1.5708,
          0.4423, -1.1014]], dtype=torch.float64, requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.675000. Loss: 0.982633. Time: 5.961903
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.680000, Val Loss: 1.052214 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6733, -1.5653, -1.0283, -1.4375, -1.4180, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6828, -1.5669, -1.0067, -1.4421, -1.4184, -0.9238, -1.5708,  1.5708,
          0.4426, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6910, -1.5667, -0.9909, -1.4591, -1.4185, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7076, -1.5677, -0.9748, -1.4686, -1.4187, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7105, -1.5680, -0.9608, -1.4763, -1.4188, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6960, -1.5713, -0.9618, -1.4891, -1.4191, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6886, -1.5739, -0.9637, -1.5063, -1.4194, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6941, -1.5745, -0.9657, -1.5207, -1.4197, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7009, -1.5728, -0.9679, -1.5479, -1.4201, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7281, -1.5699, -0.9621, -1.5723, -1.4206, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7334, -1.5694, -0.9708, -1.5815, -1.4210, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1013]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7388, -1.5696, -0.9788, -1.5736, -1.4212, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7433, -1.5712, -0.9861, -1.5598, -1.4214, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7251, -1.5777, -1.0024, -1.5333, -1.4215, -0.9240, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7274, -1.5782, -1.0008, -1.5115, -1.4223, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7285, -1.5788, -0.9959, -1.5076, -1.4227, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7246, -1.5788, -0.9869, -1.5026, -1.4231, -0.9239, -1.5708,  1.5708,
          0.4425, -1.1012]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7041, -1.5780, -0.9961, -1.5114, -1.4235, -0.9238, -1.5708,  1.5708,
          0.4426, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6739, -1.5784, -1.0101, -1.5145, -1.4236, -0.9239, -1.5708,  1.5708,
          0.4426, -1.1012]], dtype=torch.float64, requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.685000. Loss: 1.001644. Time: 5.958593
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.730000, Val Loss: 0.900749 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6298, -1.5806, -1.0501, -1.5169, -1.4233, -0.9238, -1.5708,  1.5708,
          0.4426, -1.1011]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6309, -1.5790, -1.0380, -1.5251, -1.4239, -0.9236, -1.5708,  1.5708,
          0.4428, -1.1009]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6223, -1.5787, -1.0294, -1.5394, -1.4241, -0.9235, -1.5708,  1.5708,
          0.4429, -1.1008]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6100, -1.5753, -1.0422, -1.5548, -1.4249, -0.9235, -1.5708,  1.5708,
          0.4430, -1.1007]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6155, -1.5722, -1.0429, -1.5602, -1.4257, -0.9234, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6209, -1.5718, -1.0458, -1.5637, -1.4260, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6344, -1.5694, -1.0455, -1.5737, -1.4263, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6550, -1.5650, -1.0442, -1.5893, -1.4265, -0.9233, -1.5708,  1.5708,
          0.4432, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6662, -1.5596, -1.0734, -1.5829, -1.4260, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6795, -1.5559, -1.0900, -1.5781, -1.4258, -0.9233, -1.5708,  1.5708,
          0.4431, -1.1006]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6860, -1.5566, -1.0903, -1.5798, -1.4270, -0.9232, -1.5708,  1.5708,
          0.4433, -1.1004]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6998, -1.5588, -1.0844, -1.5891, -1.4284, -0.9230, -1.5708,  1.5708,
          0.4434, -1.1003]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7071, -1.5613, -1.0773, -1.5872, -1.4297, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7179, -1.5655, -1.0688, -1.5928, -1.4313, -0.9229, -1.5708,  1.5708,
          0.4436, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7347, -1.5683, -1.0638, -1.5986, -1.4323, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7401, -1.5709, -1.0559, -1.5964, -1.4330, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7513, -1.5736, -1.0440, -1.5815, -1.4334, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7727, -1.5751, -1.0312, -1.5565, -1.4337, -0.9229, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7864, -1.5760, -1.0324, -1.5680, -1.4338, -0.9230, -1.5708,  1.5708,
          0.4435, -1.1003]], dtype=torch.float64, requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.695000. Loss: 1.050362. Time: 5.970243
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.750000, Val Loss: 0.861589 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8053, -1.5835, -1.0328, -1.5931, -1.4327, -0.9232, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8098, -1.5843, -1.0283, -1.6060, -1.4329, -0.9233, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8053, -1.5816, -1.0257, -1.6188, -1.4344, -0.9232, -1.5708,  1.5708,
          0.4432, -1.1005]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8176, -1.5748, -1.0221, -1.6135, -1.4369, -0.9230, -1.5708,  1.5708,
          0.4435, -1.1002]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8205, -1.5689, -1.0261, -1.6160, -1.4387, -0.9228, -1.5708,  1.5708,
          0.4437, -1.1000]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8219, -1.5653, -1.0363, -1.6258, -1.4400, -0.9226, -1.5708,  1.5708,
          0.4438, -1.0999]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8150, -1.5670, -1.0430, -1.6180, -1.4414, -0.9225, -1.5708,  1.5708,
          0.4440, -1.0998]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8084, -1.5673, -1.0469, -1.6293, -1.4421, -0.9224, -1.5708,  1.5708,
          0.4441, -1.0997]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7989, -1.5699, -1.0607, -1.6183, -1.4428, -0.9223, -1.5708,  1.5708,
          0.4441, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7788, -1.5725, -1.0721, -1.6025, -1.4433, -0.9223, -1.5708,  1.5708,
          0.4442, -1.0996]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7642, -1.5736, -1.0779, -1.5920, -1.4436, -0.9223, -1.5708,  1.5708,
          0.4442, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7505, -1.5708, -1.0825, -1.5914, -1.4442, -0.9222, -1.5708,  1.5708,
          0.4442, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7394, -1.5701, -1.0896, -1.5841, -1.4445, -0.9222, -1.5708,  1.5708,
          0.4443, -1.0995]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7255, -1.5696, -1.0964, -1.5904, -1.4448, -0.9222, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7149, -1.5704, -1.0956, -1.5992, -1.4450, -0.9221, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7130, -1.5691, -1.1069, -1.5853, -1.4451, -0.9221, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7262, -1.5682, -1.1135, -1.5626, -1.4452, -0.9222, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7325, -1.5688, -1.1177, -1.5536, -1.4454, -0.9221, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7417, -1.5728, -1.1025, -1.5421, -1.4457, -0.9221, -1.5708,  1.5708,
          0.4443, -1.0994]], dtype=torch.float64, requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.690000. Loss: 0.999563. Time: 5.977879
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.710000, Val Loss: 1.003409 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7593, -1.5783, -1.0644, -1.5264, -1.4459, -0.9221, -1.5708,  1.5708,
          0.4444, -1.0993]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7624, -1.5790, -1.0577, -1.5275, -1.4461, -0.9221, -1.5708,  1.5708,
          0.4444, -1.0993]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7677, -1.5767, -1.0412, -1.5412, -1.4470, -0.9220, -1.5708,  1.5708,
          0.4445, -1.0993]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7737, -1.5740, -1.0238, -1.5348, -1.4478, -0.9219, -1.5708,  1.5708,
          0.4446, -1.0992]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7962, -1.5692, -1.0121, -1.5284, -1.4486, -0.9218, -1.5708,  1.5708,
          0.4447, -1.0991]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8059, -1.5680, -1.0046, -1.5308, -1.4493, -0.9217, -1.5708,  1.5708,
          0.4448, -1.0990]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8134, -1.5682, -0.9967, -1.5294, -1.4498, -0.9216, -1.5708,  1.5708,
          0.4449, -1.0989]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8181, -1.5679, -0.9917, -1.5341, -1.4500, -0.9215, -1.5708,  1.5708,
          0.4449, -1.0988]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8164, -1.5659, -0.9886, -1.5428, -1.4501, -0.9215, -1.5709,  1.5708,
          0.4450, -1.0988]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8009, -1.5690, -0.9944, -1.5409, -1.4507, -0.9214, -1.5708,  1.5708,
          0.4451, -1.0987]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7978, -1.5722, -1.0014, -1.5326, -1.4514, -0.9213, -1.5707,  1.5708,
          0.4451, -1.0986]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7896, -1.5745, -1.0240, -1.5341, -1.4517, -0.9213, -1.5707,  1.5708,
          0.4452, -1.0986]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7780, -1.5764, -1.0384, -1.5335, -1.4518, -0.9212, -1.5709,  1.5708,
          0.4452, -1.0985]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7639, -1.5742, -1.0544, -1.5138, -1.4526, -0.9211, -1.5708,  1.5708,
          0.4454, -1.0984]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7520, -1.5693, -1.0676, -1.5201, -1.4535, -0.9210, -1.5708,  1.5708,
          0.4455, -1.0983]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7310, -1.5667, -1.0784, -1.5447, -1.4543, -0.9209, -1.5709,  1.5708,
          0.4455, -1.0982]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7128, -1.5683, -1.1000, -1.5449, -1.4553, -0.9208, -1.5710,  1.5708,
          0.4457, -1.0981]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7066, -1.5683, -1.1140, -1.5430, -1.4558, -0.9207, -1.5713,  1.5708,
          0.4457, -1.0980]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7052, -1.5668, -1.1160, -1.5473, -1.4559, -0.9207, -1.5716,  1.5708,
          0.4457, -1.0980]], dtype=torch.float64, requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.670000. Loss: 0.937584. Time: 5.963060
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.760000, Val Loss: 0.832283 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6959, -1.5666, -1.1052, -1.5585, -1.4563, -0.9207, -1.5713,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7047, -1.5685, -1.0950, -1.5397, -1.4567, -0.9206, -1.5709,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7050, -1.5692, -1.0874, -1.5209, -1.4569, -0.9206, -1.5706,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7088, -1.5695, -1.0848, -1.5111, -1.4570, -0.9207, -1.5708,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7077, -1.5698, -1.0795, -1.4961, -1.4571, -0.9206, -1.5710,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7090, -1.5710, -1.0648, -1.4880, -1.4572, -0.9206, -1.5709,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7079, -1.5726, -1.0472, -1.4940, -1.4573, -0.9206, -1.5707,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6981, -1.5754, -1.0356, -1.4879, -1.4572, -0.9207, -1.5703,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7160, -1.5754, -1.0200, -1.4895, -1.4574, -0.9206, -1.5708,  1.5708,
          0.4458, -1.0979]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7319, -1.5742, -1.0047, -1.4961, -1.4578, -0.9205, -1.5713,  1.5708,
          0.4459, -1.0978]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7445, -1.5731, -0.9933, -1.4968, -1.4581, -0.9205, -1.5718,  1.5708,
          0.4460, -1.0978]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7546, -1.5709, -0.9838, -1.4958, -1.4584, -0.9204, -1.5710,  1.5708,
          0.4460, -1.0977]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7554, -1.5701, -0.9811, -1.4928, -1.4587, -0.9204, -1.5706,  1.5708,
          0.4460, -1.0977]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7376, -1.5712, -0.9892, -1.4813, -1.4588, -0.9204, -1.5706,  1.5708,
          0.4461, -1.0977]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7151, -1.5730, -0.9965, -1.4692, -1.4589, -0.9204, -1.5709,  1.5708,
          0.4461, -1.0976]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6935, -1.5735, -1.0079, -1.4679, -1.4591, -0.9203, -1.5707,  1.5708,
          0.4461, -1.0976]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6807, -1.5701, -1.0219, -1.4718, -1.4596, -0.9203, -1.5705,  1.5708,
          0.4462, -1.0976]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6718, -1.5672, -1.0244, -1.4778, -1.4599, -0.9203, -1.5707,  1.5708,
          0.4462, -1.0975]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6536, -1.5658, -1.0378, -1.4850, -1.4602, -0.9202, -1.5711,  1.5708,
          0.4463, -1.0975]], dtype=torch.float64, requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.750000. Loss: 0.778684. Time: 5.961128
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.690000, Val Loss: 0.953712 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6363, -1.5644, -1.0510, -1.5051, -1.4605, -0.9201, -1.5710,  1.5708,
          0.4463, -1.0974]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6148, -1.5655, -1.0526, -1.5243, -1.4609, -0.9201, -1.5705,  1.5708,
          0.4463, -1.0974]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6023, -1.5680, -1.0627, -1.5357, -1.4615, -0.9201, -1.5694,  1.5708,
          0.4464, -1.0974]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5750, -1.5724, -1.1070, -1.5233, -1.4622, -0.9200, -1.5645,  1.5708,
          0.4464, -1.0973]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5554, -1.5747, -1.1278, -1.5240, -1.4627, -0.9200, -1.5730,  1.5708,
          0.4465, -1.0973]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5572, -1.5760, -1.1254, -1.5384, -1.4630, -0.9200, -1.5749,  1.5708,
          0.4465, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5592, -1.5766, -1.1198, -1.5632, -1.4632, -0.9199, -1.5678,  1.5708,
          0.4465, -1.0972]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.5811, -1.5753, -1.0901, -1.5877, -1.4637, -0.9198, -1.5727,  1.5708,
          0.4466, -1.0971]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6101, -1.5736, -1.0561, -1.6053, -1.4643, -0.9197, -1.5800,  1.5708,
          0.4467, -1.0970]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6305, -1.5721, -1.0213, -1.6169, -1.4646, -0.9197, -1.5891,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6430, -1.5710, -1.0004, -1.6288, -1.4648, -0.9197, -1.5973,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6398, -1.5709, -1.0084, -1.6431, -1.4650, -0.9196, -1.6679,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6417, -1.5721, -1.0184, -1.6492, -1.4651, -0.9196, -1.6614,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6473, -1.5727, -1.0292, -1.6414, -1.4651, -0.9196, -1.5485,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6679, -1.5729, -1.0282, -1.6294, -1.4652, -0.9196, -1.4964,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6826, -1.5725, -1.0153, -1.6138, -1.4653, -0.9196, -1.5032,  1.5708,
          0.4469, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6932, -1.5715, -0.9987, -1.6046, -1.4654, -0.9196, -1.5085,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7081, -1.5713, -0.9805, -1.5904, -1.4655, -0.9195, -1.5034,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7179, -1.5710, -0.9695, -1.5734, -1.4656, -0.9195, -1.5267,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.715000. Loss: 0.999559. Time: 5.962569
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.700000, Val Loss: 0.952779 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7560, -1.5689, -0.9523, -1.5398, -1.4656, -0.9195, -1.6330,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7656, -1.5684, -0.9524, -1.5200, -1.4656, -0.9195, -1.6677,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7729, -1.5684, -0.9532, -1.5104, -1.4657, -0.9195, -1.6969,  1.5708,
          0.4470, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7877, -1.5675, -0.9531, -1.5114, -1.4657, -0.9195, -1.6806,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7970, -1.5672, -0.9597, -1.5204, -1.4657, -0.9195, -1.6388,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7997, -1.5683, -0.9649, -1.5196, -1.4659, -0.9195, -1.6086,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8040, -1.5683, -0.9710, -1.5255, -1.4659, -0.9195, -1.5779,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8080, -1.5664, -0.9789, -1.5519, -1.4657, -0.9196, -1.5596,  1.5708,
          0.4469, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8154, -1.5644, -0.9868, -1.5905, -1.4656, -0.9196, -1.5509,  1.5708,
          0.4468, -1.0969]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8046, -1.5662, -1.0022, -1.6207, -1.4662, -0.9196, -1.5400,  1.5708,
          0.4469, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7969, -1.5688, -1.0134, -1.6480, -1.4670, -0.9195, -1.5431,  1.5708,
          0.4470, -1.0968]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7827, -1.5697, -1.0182, -1.6687, -1.4674, -0.9194, -1.5618,  1.5708,
          0.4470, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7730, -1.5710, -1.0248, -1.6756, -1.4676, -0.9194, -1.5741,  1.5708,
          0.4471, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7640, -1.5709, -1.0316, -1.6696, -1.4678, -0.9194, -1.5822,  1.5708,
          0.4471, -1.0967]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7577, -1.5713, -1.0383, -1.6572, -1.4679, -0.9194, -1.5854,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7503, -1.5713, -1.0359, -1.6471, -1.4680, -0.9194, -1.5842,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7495, -1.5713, -1.0357, -1.6578, -1.4680, -0.9194, -1.5798,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7440, -1.5711, -1.0323, -1.6716, -1.4681, -0.9194, -1.5747,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7369, -1.5712, -1.0271, -1.6743, -1.4681, -0.9194, -1.5708,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.770000. Loss: 0.795184. Time: 5.964371
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.770000, Val Loss: 0.827193 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7555, -1.5688, -1.0154, -1.6846, -1.4682, -0.9194, -1.5680,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7547, -1.5691, -1.0113, -1.6843, -1.4683, -0.9194, -1.5684,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7476, -1.5695, -1.0067, -1.6787, -1.4684, -0.9193, -1.5693,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7501, -1.5706, -1.0032, -1.6897, -1.4685, -0.9193, -1.5699,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7534, -1.5728, -1.0000, -1.7098, -1.4685, -0.9193, -1.5702,  1.5708,
          0.4471, -1.0966]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7578, -1.5739, -0.9946, -1.7333, -1.4687, -0.9193, -1.5703,  1.5708,
          0.4472, -1.0965]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7496, -1.5709, -0.9865, -1.7283, -1.4692, -0.9192, -1.5706,  1.5708,
          0.4473, -1.0965]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7330, -1.5682, -0.9883, -1.6996, -1.4696, -0.9191, -1.5708,  1.5708,
          0.4473, -1.0964]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7111, -1.5677, -0.9867, -1.6711, -1.4700, -0.9191, -1.5709,  1.5708,
          0.4474, -1.0964]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6986, -1.5683, -0.9822, -1.6468, -1.4703, -0.9190, -1.5710,  1.5708,
          0.4474, -1.0963]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6888, -1.5678, -0.9782, -1.6284, -1.4704, -0.9190, -1.5710,  1.5708,
          0.4474, -1.0963]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6911, -1.5683, -0.9718, -1.6187, -1.4706, -0.9190, -1.5710,  1.5708,
          0.4475, -1.0963]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6965, -1.5695, -0.9636, -1.6138, -1.4708, -0.9190, -1.5709,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6934, -1.5710, -0.9578, -1.6117, -1.4709, -0.9189, -1.5709,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6884, -1.5720, -0.9474, -1.6127, -1.4711, -0.9189, -1.5709,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7056, -1.5729, -0.9411, -1.6122, -1.4711, -0.9189, -1.5708,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7190, -1.5740, -0.9369, -1.6108, -1.4711, -0.9189, -1.5707,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7191, -1.5767, -0.9400, -1.6040, -1.4708, -0.9190, -1.5707,  1.5708,
          0.4474, -1.0963]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7251, -1.5794, -0.9456, -1.5828, -1.4704, -0.9191, -1.5707,  1.5708,
          0.4473, -1.0964]], dtype=torch.float64, requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.705000. Loss: 0.826429. Time: 5.967473
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.600000, Val Loss: 1.183675 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7515, -1.5772, -0.9341, -1.5680, -1.4717, -0.9189, -1.5708,  1.5708,
          0.4475, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7611, -1.5757, -0.9389, -1.5693, -1.4724, -0.9189, -1.5709,  1.5708,
          0.4476, -1.0961]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7663, -1.5755, -0.9442, -1.5574, -1.4726, -0.9189, -1.5710,  1.5708,
          0.4476, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7645, -1.5746, -0.9477, -1.5372, -1.4730, -0.9189, -1.5709,  1.5708,
          0.4476, -1.0962]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7544, -1.5712, -0.9588, -1.5351, -1.4737, -0.9188, -1.5708,  1.5708,
          0.4477, -1.0961]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7595, -1.5681, -0.9659, -1.5370, -1.4742, -0.9187, -1.5707,  1.5708,
          0.4477, -1.0960]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7635, -1.5672, -0.9731, -1.5434, -1.4746, -0.9187, -1.5707,  1.5708,
          0.4478, -1.0960]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7601, -1.5681, -0.9857, -1.5489, -1.4750, -0.9186, -1.5707,  1.5708,
          0.4478, -1.0959]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7477, -1.5698, -0.9995, -1.5459, -1.4755, -0.9185, -1.5706,  1.5708,
          0.4479, -1.0958]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7479, -1.5708, -1.0088, -1.5505, -1.4758, -0.9185, -1.5706,  1.5708,
          0.4480, -1.0958]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7527, -1.5701, -1.0166, -1.5632, -1.4759, -0.9184, -1.5707,  1.5708,
          0.4480, -1.0957]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7699, -1.5678, -1.0238, -1.5809, -1.4760, -0.9184, -1.5709,  1.5708,
          0.4480, -1.0957]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7902, -1.5679, -1.0328, -1.5835, -1.4763, -0.9184, -1.5709,  1.5708,
          0.4480, -1.0957]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7933, -1.5691, -1.0636, -1.5830, -1.4765, -0.9184, -1.5709,  1.5708,
          0.4481, -1.0956]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8018, -1.5709, -1.0798, -1.5876, -1.4768, -0.9183, -1.5709,  1.5708,
          0.4481, -1.0956]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8062, -1.5723, -1.0917, -1.5780, -1.4770, -0.9183, -1.5709,  1.5708,
          0.4482, -1.0955]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8017, -1.5736, -1.1040, -1.5666, -1.4771, -0.9183, -1.5709,  1.5708,
          0.4482, -1.0955]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7921, -1.5744, -1.1252, -1.5482, -1.4771, -0.9183, -1.5709,  1.5708,
          0.4482, -1.0955]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7771, -1.5728, -1.1335, -1.5383, -1.4775, -0.9182, -1.5708,  1.5708,
          0.4482, -1.0955]], dtype=torch.float64, requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.685000. Loss: 0.925597. Time: 5.958577
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.730000, Val Loss: 0.875561 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7609, -1.5652, -1.1122, -1.5183, -1.4780, -0.9182, -1.5708,  1.5708,
          0.4483, -1.0954]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7598, -1.5625, -1.1033, -1.5300, -1.4782, -0.9181, -1.5708,  1.5708,
          0.4483, -1.0954]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7640, -1.5639, -1.0948, -1.5600, -1.4795, -0.9179, -1.5708,  1.5708,
          0.4486, -1.0952]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7651, -1.5665, -1.0888, -1.5815, -1.4809, -0.9176, -1.5708,  1.5708,
          0.4489, -1.0948]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7554, -1.5688, -1.0868, -1.5859, -1.4819, -0.9174, -1.5708,  1.5708,
          0.4491, -1.0946]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7525, -1.5694, -1.0902, -1.5830, -1.4824, -0.9173, -1.5708,  1.5708,
          0.4492, -1.0946]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7551, -1.5708, -1.0976, -1.5764, -1.4828, -0.9172, -1.5708,  1.5708,
          0.4492, -1.0945]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7575, -1.5708, -1.1167, -1.5792, -1.4830, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0945]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7552, -1.5699, -1.1365, -1.5856, -1.4832, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7572, -1.5695, -1.1455, -1.5818, -1.4833, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7545, -1.5688, -1.1460, -1.5788, -1.4833, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7657, -1.5676, -1.1275, -1.5825, -1.4832, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7756, -1.5679, -1.1009, -1.5940, -1.4834, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7771, -1.5678, -1.0833, -1.6134, -1.4834, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7791, -1.5680, -1.0698, -1.6257, -1.4835, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7781, -1.5694, -1.0614, -1.6329, -1.4837, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7766, -1.5705, -1.0543, -1.6309, -1.4839, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7791, -1.5702, -1.0505, -1.6390, -1.4840, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7740, -1.5706, -1.0514, -1.6360, -1.4841, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.685000. Loss: 1.000210. Time: 5.961284
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.700000, Val Loss: 0.819674 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7426, -1.5746, -1.0752, -1.6387, -1.4843, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7319, -1.5747, -1.0892, -1.6247, -1.4845, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7222, -1.5748, -1.1045, -1.6026, -1.4846, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7255, -1.5760, -1.1056, -1.5866, -1.4845, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7232, -1.5761, -1.1060, -1.5889, -1.4846, -0.9172, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7255, -1.5752, -1.1014, -1.6043, -1.4849, -0.9171, -1.5708,  1.5708,
          0.4493, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7274, -1.5751, -1.0954, -1.5955, -1.4850, -0.9171, -1.5708,  1.5708,
          0.4494, -1.0944]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7326, -1.5747, -1.0887, -1.5721, -1.4851, -0.9170, -1.5708,  1.5708,
          0.4495, -1.0943]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7453, -1.5729, -1.0755, -1.5631, -1.4855, -0.9169, -1.5708,  1.5708,
          0.4496, -1.0942]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7546, -1.5715, -1.0719, -1.5529, -1.4858, -0.9169, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7578, -1.5702, -1.0680, -1.5417, -1.4860, -0.9168, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7691, -1.5689, -1.0569, -1.5374, -1.4861, -0.9168, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7758, -1.5691, -1.0457, -1.5503, -1.4862, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7849, -1.5704, -1.0390, -1.5665, -1.4864, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7800, -1.5707, -1.0320, -1.5856, -1.4865, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7773, -1.5703, -1.0260, -1.5945, -1.4866, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7734, -1.5692, -1.0269, -1.5961, -1.4866, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7571, -1.5693, -1.0358, -1.5966, -1.4867, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7461, -1.5706, -1.0445, -1.5996, -1.4868, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.710000. Loss: 0.843363. Time: 5.961548
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.720000, Val Loss: 0.874639 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7494, -1.5702, -1.0463, -1.6132, -1.4871, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7616, -1.5691, -1.0466, -1.6065, -1.4872, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7791, -1.5675, -1.0404, -1.5967, -1.4871, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8043, -1.5660, -1.0333, -1.5861, -1.4870, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8309, -1.5654, -1.0314, -1.5674, -1.4871, -0.9168, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8221, -1.5664, -1.0411, -1.5523, -1.4874, -0.9168, -1.5708,  1.5708,
          0.4496, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8029, -1.5680, -1.0522, -1.5474, -1.4879, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0941]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7881, -1.5687, -1.0563, -1.5402, -1.4882, -0.9168, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7888, -1.5695, -1.0560, -1.5429, -1.4884, -0.9167, -1.5708,  1.5708,
          0.4497, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7944, -1.5705, -1.0508, -1.5389, -1.4885, -0.9167, -1.5708,  1.5708,
          0.4498, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7973, -1.5715, -1.0417, -1.5377, -1.4886, -0.9167, -1.5708,  1.5708,
          0.4498, -1.0940]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8075, -1.5704, -1.0398, -1.5289, -1.4887, -0.9167, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8140, -1.5704, -1.0392, -1.5266, -1.4888, -0.9166, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8102, -1.5720, -1.0421, -1.5294, -1.4889, -0.9166, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8206, -1.5718, -1.0481, -1.5391, -1.4891, -0.9166, -1.5708,  1.5708,
          0.4498, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8264, -1.5717, -1.0569, -1.5539, -1.4892, -0.9166, -1.5708,  1.5708,
          0.4499, -1.0939]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8156, -1.5720, -1.0721, -1.5516, -1.4893, -0.9166, -1.5708,  1.5708,
          0.4499, -1.0938]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8137, -1.5697, -1.0814, -1.5570, -1.4895, -0.9165, -1.5708,  1.5708,
          0.4499, -1.0938]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8030, -1.5682, -1.0883, -1.5544, -1.4896, -0.9165, -1.5708,  1.5708,
          0.4500, -1.0938]], dtype=torch.float64, requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.675000. Loss: 0.944926. Time: 5.961629
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.720000, Val Loss: 0.913956 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7450, -1.5680, -1.0920, -1.5294, -1.4900, -0.9165, -1.5708,  1.5708,
          0.4500, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7114, -1.5681, -1.1079, -1.5127, -1.4901, -0.9164, -1.5708,  1.5708,
          0.4500, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6948, -1.5691, -1.1152, -1.5160, -1.4903, -0.9164, -1.5708,  1.5708,
          0.4501, -1.0937]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6842, -1.5699, -1.1122, -1.5293, -1.4904, -0.9163, -1.5708,  1.5708,
          0.4501, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6863, -1.5710, -1.1111, -1.5434, -1.4905, -0.9163, -1.5708,  1.5708,
          0.4501, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6996, -1.5713, -1.1130, -1.5517, -1.4906, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7166, -1.5715, -1.1008, -1.5595, -1.4907, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7412, -1.5710, -1.0916, -1.5596, -1.4908, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0936]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7486, -1.5707, -1.0842, -1.5615, -1.4908, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0935]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7433, -1.5718, -1.0937, -1.5480, -1.4908, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0935]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7395, -1.5730, -1.0978, -1.5426, -1.4908, -0.9163, -1.5708,  1.5708,
          0.4502, -1.0935]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7423, -1.5729, -1.0949, -1.5386, -1.4909, -0.9162, -1.5708,  1.5708,
          0.4503, -1.0935]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7569, -1.5729, -1.0788, -1.5329, -1.4910, -0.9161, -1.5708,  1.5708,
          0.4503, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7557, -1.5724, -1.0727, -1.5178, -1.4911, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7418, -1.5725, -1.0801, -1.4801, -1.4911, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7269, -1.5718, -1.0944, -1.4741, -1.4912, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7131, -1.5713, -1.1098, -1.4759, -1.4913, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7060, -1.5704, -1.1141, -1.4913, -1.4913, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6833, -1.5699, -1.1535, -1.5089, -1.4914, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.680000. Loss: 0.926615. Time: 5.948583
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.720000, Val Loss: 0.884504 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6458, -1.5705, -1.1985, -1.5256, -1.4915, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6279, -1.5702, -1.2375, -1.5349, -1.4915, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6187, -1.5693, -1.2606, -1.5498, -1.4915, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6370, -1.5698, -1.2494, -1.5537, -1.4916, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6538, -1.5710, -1.2298, -1.5376, -1.4917, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6681, -1.5721, -1.2002, -1.5387, -1.4917, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6723, -1.5731, -1.1760, -1.5434, -1.4918, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0934]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6774, -1.5737, -1.1531, -1.5454, -1.4918, -0.9161, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6930, -1.5735, -1.1262, -1.5511, -1.4919, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7098, -1.5727, -1.1048, -1.5582, -1.4920, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7218, -1.5720, -1.1058, -1.5490, -1.4922, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7243, -1.5713, -1.1032, -1.5546, -1.4923, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7252, -1.5706, -1.1031, -1.5571, -1.4923, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7298, -1.5697, -1.0981, -1.5424, -1.4923, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7362, -1.5691, -1.0997, -1.5280, -1.4924, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7532, -1.5686, -1.0961, -1.5233, -1.4924, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7697, -1.5685, -1.0930, -1.5208, -1.4924, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7868, -1.5686, -1.0847, -1.5194, -1.4924, -0.9160, -1.5708,  1.5708,
          0.4504, -1.0933]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7795, -1.5695, -1.0804, -1.5123, -1.4926, -0.9160, -1.5708,  1.5708,
          0.4505, -1.0933]], dtype=torch.float64, requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.765000. Loss: 0.735620. Time: 5.970138
Validate after epoch 38 with seed 297566
Val Accuracy: 0.770000, Val Loss: 0.833539 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7652, -1.5706, -1.0701, -1.4908, -1.4927, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7752, -1.5702, -1.0589, -1.4953, -1.4928, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7850, -1.5702, -1.0484, -1.4964, -1.4928, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7776, -1.5707, -1.0544, -1.5006, -1.4928, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7671, -1.5712, -1.0656, -1.5055, -1.4928, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7692, -1.5712, -1.0697, -1.5116, -1.4929, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7737, -1.5711, -1.0722, -1.5288, -1.4929, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7780, -1.5709, -1.0778, -1.5401, -1.4929, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7924, -1.5699, -1.0905, -1.5495, -1.4929, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8031, -1.5695, -1.0957, -1.5485, -1.4930, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8108, -1.5695, -1.0917, -1.5384, -1.4930, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8287, -1.5696, -1.0888, -1.5386, -1.4930, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8392, -1.5690, -1.0915, -1.5373, -1.4930, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8398, -1.5687, -1.0907, -1.5405, -1.4930, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8434, -1.5694, -1.0913, -1.5495, -1.4931, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8553, -1.5709, -1.0990, -1.5641, -1.4933, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8581, -1.5716, -1.1008, -1.5699, -1.4934, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8589, -1.5722, -1.0987, -1.5693, -1.4935, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8623, -1.5721, -1.1029, -1.5549, -1.4935, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.700000. Loss: 0.897125. Time: 5.960306
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.810000, Val Loss: 0.686821 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8640, -1.5733, -1.1326, -1.5498, -1.4935, -0.9159, -1.5708,  1.5708,
          0.4505, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8719, -1.5726, -1.1418, -1.5458, -1.4937, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0932]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8640, -1.5719, -1.1488, -1.5442, -1.4938, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8539, -1.5714, -1.1551, -1.5574, -1.4939, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8338, -1.5715, -1.1786, -1.5604, -1.4939, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8231, -1.5713, -1.1935, -1.5681, -1.4940, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8187, -1.5716, -1.2021, -1.5737, -1.4940, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8206, -1.5716, -1.2050, -1.5738, -1.4940, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8108, -1.5706, -1.2266, -1.5681, -1.4940, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8020, -1.5696, -1.2394, -1.5584, -1.4941, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7952, -1.5694, -1.2359, -1.5478, -1.4941, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7901, -1.5694, -1.2385, -1.5317, -1.4942, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7856, -1.5698, -1.2476, -1.5056, -1.4942, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7911, -1.5701, -1.2415, -1.4875, -1.4943, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8026, -1.5700, -1.2210, -1.4716, -1.4943, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8209, -1.5696, -1.1985, -1.4559, -1.4943, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8254, -1.5686, -1.1912, -1.4595, -1.4942, -0.9159, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8224, -1.5683, -1.1927, -1.4715, -1.4942, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8034, -1.5681, -1.2041, -1.4878, -1.4942, -0.9158, -1.5708,  1.5708,
          0.4506, -1.0931]], dtype=torch.float64, requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.760000. Loss: 0.743129. Time: 5.954327
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.750000, Val Loss: 0.944482 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7976, -1.5715, -1.2012, -1.5353, -1.4947, -0.9158, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7962, -1.5726, -1.1906, -1.5587, -1.4948, -0.9158, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8003, -1.5731, -1.1863, -1.5777, -1.4950, -0.9157, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8067, -1.5730, -1.1818, -1.5958, -1.4951, -0.9158, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8152, -1.5730, -1.1689, -1.6012, -1.4952, -0.9158, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8226, -1.5731, -1.1616, -1.5972, -1.4952, -0.9158, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8271, -1.5726, -1.1614, -1.5941, -1.4953, -0.9157, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8237, -1.5716, -1.1673, -1.5941, -1.4954, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8121, -1.5714, -1.1687, -1.5952, -1.4955, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7797, -1.5722, -1.1879, -1.6015, -1.4955, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7498, -1.5734, -1.2105, -1.5929, -1.4954, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7348, -1.5739, -1.2167, -1.5786, -1.4955, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7260, -1.5725, -1.2158, -1.5698, -1.4958, -0.9157, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7205, -1.5717, -1.2108, -1.5638, -1.4960, -0.9157, -1.5708,  1.5708,
          0.4507, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7261, -1.5715, -1.2054, -1.5637, -1.4961, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7386, -1.5713, -1.1969, -1.5514, -1.4961, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7478, -1.5714, -1.1880, -1.5440, -1.4962, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7554, -1.5721, -1.1803, -1.5471, -1.4962, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7560, -1.5726, -1.1725, -1.5511, -1.4962, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.745000. Loss: 0.825818. Time: 5.957390
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.680000, Val Loss: 0.857415 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7715, -1.5713, -1.1493, -1.5379, -1.4963, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7771, -1.5707, -1.1528, -1.5286, -1.4964, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7938, -1.5700, -1.1568, -1.5362, -1.4964, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8116, -1.5703, -1.1535, -1.5247, -1.4965, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0930]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8113, -1.5708, -1.1467, -1.5164, -1.4965, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8134, -1.5707, -1.1418, -1.5122, -1.4966, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8241, -1.5716, -1.1323, -1.5141, -1.4966, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8297, -1.5723, -1.1348, -1.5212, -1.4966, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8206, -1.5737, -1.1552, -1.5150, -1.4965, -0.9157, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8079, -1.5734, -1.1769, -1.5118, -1.4967, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7943, -1.5722, -1.1914, -1.5109, -1.4969, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7797, -1.5712, -1.2066, -1.5024, -1.4971, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7778, -1.5700, -1.2019, -1.4986, -1.4972, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7886, -1.5696, -1.1882, -1.4882, -1.4973, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7981, -1.5690, -1.1833, -1.4786, -1.4973, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8015, -1.5682, -1.1801, -1.4698, -1.4973, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8077, -1.5682, -1.1771, -1.4583, -1.4974, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8115, -1.5686, -1.1685, -1.4505, -1.4975, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8125, -1.5695, -1.1587, -1.4273, -1.4977, -0.9156, -1.5708,  1.5708,
          0.4508, -1.0929]], dtype=torch.float64, requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.700000. Loss: 0.891909. Time: 5.952097
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.720000, Val Loss: 0.876719 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8160, -1.5713, -1.1529, -1.3854, -1.4978, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8079, -1.5726, -1.1625, -1.3680, -1.4979, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0929]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8113, -1.5731, -1.1668, -1.3515, -1.4979, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0928]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8160, -1.5728, -1.1684, -1.3589, -1.4980, -0.9156, -1.5708,  1.5708,
          0.4509, -1.0928]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8309, -1.5718, -1.1708, -1.3801, -1.4982, -0.9155, -1.5708,  1.5708,
          0.4509, -1.0928]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8523, -1.5694, -1.1889, -1.4029, -1.4984, -0.9155, -1.5708,  1.5708,
          0.4510, -1.0928]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8651, -1.5676, -1.1909, -1.4211, -1.4985, -0.9155, -1.5708,  1.5708,
          0.4510, -1.0928]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8541, -1.5672, -1.2109, -1.4344, -1.4987, -0.9154, -1.5708,  1.5708,
          0.4510, -1.0927]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8418, -1.5677, -1.2310, -1.4390, -1.4990, -0.9153, -1.5708,  1.5708,
          0.4511, -1.0926]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8359, -1.5688, -1.2364, -1.4325, -1.4993, -0.9152, -1.5708,  1.5708,
          0.4512, -1.0925]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8327, -1.5700, -1.2305, -1.4362, -1.4996, -0.9152, -1.5708,  1.5708,
          0.4513, -1.0925]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8254, -1.5708, -1.2272, -1.4471, -1.4997, -0.9151, -1.5708,  1.5708,
          0.4513, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8208, -1.5713, -1.2142, -1.4568, -1.4998, -0.9151, -1.5708,  1.5708,
          0.4513, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8140, -1.5717, -1.2024, -1.4677, -1.4999, -0.9151, -1.5708,  1.5708,
          0.4513, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8029, -1.5720, -1.1876, -1.4912, -1.4999, -0.9151, -1.5708,  1.5708,
          0.4514, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7877, -1.5725, -1.1820, -1.4967, -1.4999, -0.9151, -1.5708,  1.5708,
          0.4514, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7771, -1.5727, -1.1740, -1.5173, -1.4999, -0.9151, -1.5708,  1.5708,
          0.4514, -1.0924]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7826, -1.5723, -1.1621, -1.5425, -1.5000, -0.9151, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7864, -1.5716, -1.1533, -1.5527, -1.5001, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.730000. Loss: 0.830266. Time: 5.956398
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.640000, Val Loss: 1.036681 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8022, -1.5709, -1.1422, -1.5669, -1.5002, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8127, -1.5718, -1.1335, -1.5678, -1.5002, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8137, -1.5724, -1.1351, -1.5461, -1.5002, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8198, -1.5728, -1.1315, -1.5238, -1.5002, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8255, -1.5723, -1.1371, -1.4918, -1.5003, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8133, -1.5722, -1.1592, -1.4787, -1.5004, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8044, -1.5724, -1.1813, -1.4722, -1.5004, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8038, -1.5721, -1.1905, -1.4629, -1.5004, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8028, -1.5711, -1.1964, -1.4624, -1.5005, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7961, -1.5704, -1.2010, -1.4620, -1.5006, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8021, -1.5699, -1.1975, -1.4578, -1.5006, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8154, -1.5697, -1.1969, -1.4701, -1.5006, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8552, -1.5691, -1.1889, -1.4793, -1.5006, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8902, -1.5686, -1.1776, -1.4719, -1.5006, -0.9151, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9064, -1.5690, -1.1683, -1.4711, -1.5007, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9096, -1.5696, -1.1611, -1.4823, -1.5008, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8994, -1.5696, -1.1574, -1.4946, -1.5008, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8917, -1.5697, -1.1548, -1.5140, -1.5008, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8845, -1.5700, -1.1689, -1.5377, -1.5009, -0.9150, -1.5708,  1.5708,
          0.4514, -1.0923]], dtype=torch.float64, requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.720000. Loss: 0.910578. Time: 5.946953
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.770000, Val Loss: 0.785200 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8613, -1.5714, -1.1928, -1.5579, -1.5009, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0923]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8472, -1.5722, -1.2020, -1.5598, -1.5009, -0.9150, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8345, -1.5725, -1.2127, -1.5595, -1.5010, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8229, -1.5729, -1.2243, -1.5636, -1.5009, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8170, -1.5732, -1.2360, -1.5615, -1.5009, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8041, -1.5729, -1.2624, -1.5514, -1.5010, -0.9149, -1.5708,  1.5708,
          0.4516, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7985, -1.5723, -1.2773, -1.5382, -1.5011, -0.9148, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8100, -1.5714, -1.2723, -1.5331, -1.5012, -0.9149, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8234, -1.5707, -1.2531, -1.5441, -1.5013, -0.9149, -1.5708,  1.5708,
          0.4516, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8241, -1.5708, -1.2352, -1.5333, -1.5013, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8271, -1.5707, -1.2169, -1.5295, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8325, -1.5703, -1.1984, -1.5238, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8327, -1.5703, -1.1839, -1.5127, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8327, -1.5700, -1.1725, -1.5106, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8368, -1.5698, -1.1584, -1.5077, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8375, -1.5699, -1.1509, -1.5007, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8429, -1.5701, -1.1432, -1.4926, -1.5014, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8383, -1.5705, -1.1390, -1.4816, -1.5015, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8297, -1.5707, -1.1358, -1.4901, -1.5015, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.735000. Loss: 0.864866. Time: 5.957046
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.750000, Val Loss: 0.697553 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8375, -1.5698, -1.1475, -1.4759, -1.5015, -0.9149, -1.5708,  1.5708,
          0.4515, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8488, -1.5699, -1.1465, -1.4544, -1.5015, -0.9149, -1.5708,  1.5708,
          0.4516, -1.0922]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8525, -1.5700, -1.1465, -1.4627, -1.5015, -0.9149, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8401, -1.5710, -1.1579, -1.4571, -1.5016, -0.9148, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8231, -1.5714, -1.1672, -1.4622, -1.5016, -0.9148, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8027, -1.5715, -1.1730, -1.4747, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4516, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7873, -1.5711, -1.1718, -1.4830, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7822, -1.5709, -1.1628, -1.4894, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7810, -1.5712, -1.1596, -1.5136, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7633, -1.5717, -1.1760, -1.5355, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7610, -1.5717, -1.1865, -1.5407, -1.5017, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0921]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7702, -1.5716, -1.1827, -1.5377, -1.5018, -0.9148, -1.5708,  1.5708,
          0.4517, -1.0920]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7817, -1.5711, -1.1872, -1.5272, -1.5018, -0.9147, -1.5708,  1.5708,
          0.4517, -1.0920]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7800, -1.5701, -1.1929, -1.5197, -1.5018, -0.9147, -1.5708,  1.5708,
          0.4517, -1.0920]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7729, -1.5695, -1.1934, -1.5172, -1.5019, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0920]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7700, -1.5694, -1.1862, -1.5114, -1.5019, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7706, -1.5695, -1.1768, -1.5042, -1.5019, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7739, -1.5699, -1.1663, -1.4969, -1.5020, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7842, -1.5704, -1.1615, -1.5111, -1.5020, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.745000. Loss: 0.805927. Time: 5.959056
Validate after epoch 46 with seed 91566
Val Accuracy: 0.700000, Val Loss: 0.906588 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7957, -1.5709, -1.1428, -1.5313, -1.5021, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7912, -1.5707, -1.1341, -1.5466, -1.5021, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7860, -1.5705, -1.1302, -1.5645, -1.5021, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7629, -1.5710, -1.1341, -1.5640, -1.5021, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7447, -1.5715, -1.1382, -1.5513, -1.5021, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7372, -1.5718, -1.1397, -1.5409, -1.5021, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7352, -1.5720, -1.1430, -1.5349, -1.5021, -0.9147, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7614, -1.5714, -1.1245, -1.5410, -1.5022, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7872, -1.5709, -1.1056, -1.5482, -1.5022, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8055, -1.5707, -1.0918, -1.5522, -1.5022, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8157, -1.5703, -1.0854, -1.5548, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4518, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8121, -1.5703, -1.1005, -1.5512, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8094, -1.5704, -1.1125, -1.5570, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8097, -1.5707, -1.1236, -1.5652, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8095, -1.5708, -1.1298, -1.5655, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8078, -1.5705, -1.1282, -1.5648, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7981, -1.5703, -1.1305, -1.5553, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7820, -1.5700, -1.1447, -1.5443, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7700, -1.5699, -1.1562, -1.5460, -1.5023, -0.9146, -1.5708,  1.5708,
          0.4519, -1.0919]], dtype=torch.float64, requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.755000. Loss: 0.761847. Time: 5.848306
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.720000, Val Loss: 0.793039 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7825, -1.5702, -1.1498, -1.5428, -1.5023, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7958, -1.5704, -1.1411, -1.5344, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8217, -1.5705, -1.1405, -1.5350, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8400, -1.5704, -1.1415, -1.5394, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8516, -1.5703, -1.1388, -1.5480, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8477, -1.5703, -1.1374, -1.5590, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8499, -1.5702, -1.1399, -1.5775, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8481, -1.5706, -1.1484, -1.5935, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8417, -1.5707, -1.1532, -1.6054, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8259, -1.5710, -1.1601, -1.6191, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8209, -1.5709, -1.1564, -1.6257, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8144, -1.5710, -1.1468, -1.6241, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8100, -1.5711, -1.1277, -1.6190, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8089, -1.5710, -1.1273, -1.6244, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8115, -1.5708, -1.1250, -1.6411, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8180, -1.5707, -1.1215, -1.6472, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8142, -1.5708, -1.1304, -1.6418, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8178, -1.5708, -1.1349, -1.6327, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8305, -1.5708, -1.1399, -1.6289, -1.5024, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.775000. Loss: 0.775053. Time: 6.069097
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.700000, Val Loss: 1.018415 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8649, -1.5708, -1.1513, -1.6467, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4519, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8833, -1.5710, -1.1659, -1.6496, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8948, -1.5713, -1.1761, -1.6469, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9121, -1.5711, -1.1828, -1.6337, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9186, -1.5707, -1.1826, -1.6182, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9208, -1.5707, -1.1741, -1.5993, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9202, -1.5710, -1.1725, -1.5898, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9139, -1.5714, -1.1716, -1.5853, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0918]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.9160, -1.5711, -1.1658, -1.5920, -1.5025, -0.9145, -1.5708,  1.5708,
          0.4520, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8995, -1.5706, -1.1853, -1.6034, -1.5025, -0.9144, -1.5708,  1.5708,
          0.4520, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8857, -1.5703, -1.1956, -1.6021, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4520, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8918, -1.5701, -1.1981, -1.6088, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4520, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8910, -1.5702, -1.1955, -1.6086, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4520, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8813, -1.5703, -1.1989, -1.6058, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4521, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8660, -1.5703, -1.2008, -1.6144, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4521, -1.0917]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8416, -1.5703, -1.2036, -1.6313, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4521, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.8044, -1.5707, -1.2148, -1.6379, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4521, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7647, -1.5711, -1.2317, -1.6372, -1.5026, -0.9144, -1.5708,  1.5708,
          0.4521, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7365, -1.5714, -1.2410, -1.6294, -1.5026, -0.9143, -1.5708,  1.5708,
          0.4521, -1.0916]], dtype=torch.float64, requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.740000. Loss: 0.820811. Time: 6.049862
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.680000, Val Loss: 1.016961 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7190, -1.5714, -1.2164, -1.6131, -1.5027, -0.9143, -1.5708,  1.5708,
          0.4521, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7244, -1.5708, -1.2050, -1.6082, -1.5027, -0.9143, -1.5708,  1.5708,
          0.4522, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7298, -1.5701, -1.1887, -1.6050, -1.5027, -0.9143, -1.5708,  1.5708,
          0.4522, -1.0916]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7422, -1.5701, -1.1721, -1.5922, -1.5027, -0.9143, -1.5708,  1.5708,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7375, -1.5706, -1.1635, -1.5806, -1.5028, -0.9143, -1.5708,  1.5707,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7392, -1.5709, -1.1596, -1.5647, -1.5028, -0.9142, -1.5708,  1.5706,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7203, -1.5713, -1.1603, -1.5628, -1.5028, -0.9142, -1.5708,  1.5712,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.7062, -1.5716, -1.1635, -1.5631, -1.5028, -0.9143, -1.5708,  1.5711,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6862, -1.5715, -1.1899, -1.5702, -1.5028, -0.9143, -1.5708,  1.5706,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6714, -1.5714, -1.2148, -1.5680, -1.5029, -0.9143, -1.5708,  1.5695,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6732, -1.5714, -1.2123, -1.5665, -1.5029, -0.9143, -1.5708,  1.5700,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6698, -1.5715, -1.2067, -1.5558, -1.5029, -0.9143, -1.5708,  1.5728,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6655, -1.5718, -1.2008, -1.5502, -1.5029, -0.9143, -1.5708,  1.5709,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6621, -1.5719, -1.1859, -1.5369, -1.5029, -0.9143, -1.5708,  1.5681,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6672, -1.5714, -1.1716, -1.5309, -1.5029, -0.9142, -1.5708,  1.5671,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6694, -1.5711, -1.1575, -1.5250, -1.5029, -0.9142, -1.5708,  1.5719,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6770, -1.5707, -1.1519, -1.5205, -1.5029, -0.9142, -1.5708,  1.5769,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6843, -1.5706, -1.1393, -1.5029, -1.5030, -0.9142, -1.5708,  1.5618,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[ 0.6885, -1.5704, -1.1389, -1.4934, -1.5030, -0.9142, -1.5708,  1.5741,
          0.4522, -1.0915]], dtype=torch.float64, requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.745000. Loss: 0.831466. Time: 6.079632
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.720000, Val Loss: 0.919564 
Training Execution time: 08:31:19.00
Conducting Test
Test Accuracy: 0.732000, Test Loss: 0.876763 
