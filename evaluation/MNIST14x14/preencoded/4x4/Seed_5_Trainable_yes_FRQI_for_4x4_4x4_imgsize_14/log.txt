Initialize application with hyperparameters:
{'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 5, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_4x4', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 8, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_5_Trainable_yes_FRQI_for_4x4_4x4_imgsize_14'}
Loading MNIST dataset from the PyTorch storage
Loading MNIST dataset into memory
Saving data tensors to disk at ./mnist/preload_tensors_saved_img_size-14
hyper parameters: {'batch_size': 2, 'calculation': 'RandomLayer', 'calculation_args': {}, 'calculation_seed': 5, 'circuit_layers': 1, 'data': 'MNIST', 'data_shuffle_seed': 362356, 'encoder': 'FRQI_for_4x4', 'encoder_args': {}, 'epochs_num': 50, 'filter_length': 4, 'img_size': 14, 'logs_path': './save/', 'lr': 0.01, 'measurement': 'UniformGateMeasurements', 'measurement_args': {}, 'n_rotations': 10, 'np_seed': 10, 'out_channels': 8, 'out_features': 10, 'run_test': True, 'steps_in_epoch': 100, 'stride': 2, 'test_samples': 1000, 'torch_seed': 10, 'train_samples': 10000, 'train_split_percent': 0.8, 'trainable': True, 'val_data_size': 50, 'valid_samples': 200, 'weights_seed': 11111, 'name': 'Seed_5_Trainable_yes_FRQI_for_4x4_4x4_imgsize_14'}
Starting Trainable Experiment with 1 layers and 1 filters
Start training epoch 1 with seed 7685385 
Quantum circuit at the beginning of epoch 1
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0468, -0.8798, -0.2684, -0.6572, -0.3849, -0.5739, -0.8412,  0.3017,
          0.7464, -0.7515]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0413, -0.8795, -0.2684, -0.6580, -0.3847, -0.5739, -0.8282,  0.3017,
          0.7203, -0.7513]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0464, -0.8789, -0.2684, -0.6574, -0.3844, -0.5739, -0.8284,  0.3018,
          0.6992, -0.7508]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0555, -0.8788, -0.2684, -0.6571, -0.3843, -0.5739, -0.8341,  0.3019,
          0.6859, -0.7507]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0664, -0.8792, -0.2684, -0.6557, -0.3841, -0.5739, -0.8483,  0.3020,
          0.6913, -0.7511]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0784, -0.8795, -0.2684, -0.6561, -0.3838, -0.5739, -0.8691,  0.3022,
          0.7073, -0.7513]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0713, -0.8797, -0.2684, -0.6568, -0.3837, -0.5739, -0.8691,  0.3023,
          0.7148, -0.7515]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0693, -0.8796, -0.2684, -0.6568, -0.3835, -0.5739, -0.8819,  0.3024,
          0.7317, -0.7513]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0737, -0.8789, -0.2684, -0.6563, -0.3831, -0.5739, -0.9029,  0.3026,
          0.7359, -0.7508]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.0920, -0.8784, -0.2684, -0.6554, -0.3826, -0.5739, -0.9367,  0.3027,
          0.7429, -0.7504]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1268, -0.8777, -0.2684, -0.6547, -0.3826, -0.5739, -0.9876,  0.3026,
          0.7500, -0.7499]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1554, -0.8770, -0.2684, -0.6547, -0.3831, -0.5739, -1.0372,  0.3027,
          0.7495, -0.7493]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1702, -0.8768, -0.2684, -0.6544, -0.3835, -0.5739, -1.0784,  0.3027,
          0.7490, -0.7492]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.1690, -0.8769, -0.2684, -0.6519, -0.3838, -0.5739, -1.1120,  0.3027,
          0.7561, -0.7493]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2026, -0.8771, -0.2684, -0.6502, -0.3839, -0.5739, -1.1737,  0.3026,
          0.7709, -0.7494]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2177, -0.8773, -0.2684, -0.6493, -0.3837, -0.5739, -1.2216,  0.3025,
          0.7906, -0.7495]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2545, -0.8774, -0.2684, -0.6482, -0.3837, -0.5739, -1.2852,  0.3025,
          0.8127, -0.7496]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.2957, -0.8776, -0.2684, -0.6474, -0.3834, -0.5739, -1.3548,  0.3026,
          0.8378, -0.7498]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3384, -0.8775, -0.2684, -0.6471, -0.3833, -0.5739, -1.4147,  0.3028,
          0.8673, -0.7498]], dtype=torch.float64, requires_grad=True)
Epoch 1 / 50 . Accuracy: 0.285000. Loss: 2.126447. Time: 6.347730
Validate after epoch 1 with seed 7685385
Val Accuracy: 0.460000, Val Loss: 1.927031 
Start training epoch 2 with seed 8100989 
Quantum circuit at the beginning of epoch 2
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3611, -0.8770, -0.2684, -0.6475, -0.3832, -0.5739, -1.4912,  0.3031,
          0.9229, -0.7494]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3487, -0.8769, -0.2684, -0.6487, -0.3831, -0.5739, -1.5224,  0.3032,
          0.9470, -0.7493]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3536, -0.8775, -0.2684, -0.6497, -0.3832, -0.5739, -1.5515,  0.3034,
          0.9655, -0.7497]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.3895, -0.8783, -0.2684, -0.6511, -0.3831, -0.5739, -1.5750,  0.3034,
          0.9894, -0.7503]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4306, -0.8784, -0.2684, -0.6532, -0.3832, -0.5739, -1.5877,  0.3036,
          1.0194, -0.7504]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4718, -0.8785, -0.2684, -0.6546, -0.3832, -0.5739, -1.5908,  0.3037,
          1.0542, -0.7505]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4841, -0.8787, -0.2684, -0.6554, -0.3832, -0.5739, -1.5876,  0.3037,
          1.0894, -0.7507]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4526, -0.8791, -0.2684, -0.6573, -0.3832, -0.5739, -1.5865,  0.3040,
          1.1186, -0.7510]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4286, -0.8792, -0.2684, -0.6582, -0.3835, -0.5739, -1.5856,  0.3043,
          1.1381, -0.7511]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4173, -0.8791, -0.2684, -0.6586, -0.3838, -0.5739, -1.5825,  0.3043,
          1.1610, -0.7510]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4264, -0.8788, -0.2684, -0.6595, -0.3838, -0.5739, -1.5776,  0.3043,
          1.1823, -0.7508]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4202, -0.8787, -0.2684, -0.6608, -0.3838, -0.5739, -1.5737,  0.3044,
          1.2027, -0.7507]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4267, -0.8790, -0.2684, -0.6604, -0.3836, -0.5739, -1.5703,  0.3046,
          1.2245, -0.7509]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4445, -0.8796, -0.2684, -0.6598, -0.3834, -0.5739, -1.5684,  0.3047,
          1.2529, -0.7514]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4547, -0.8800, -0.2684, -0.6596, -0.3831, -0.5739, -1.5680,  0.3045,
          1.2771, -0.7517]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4594, -0.8806, -0.2684, -0.6595, -0.3831, -0.5739, -1.5685,  0.3045,
          1.2987, -0.7521]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4625, -0.8811, -0.2684, -0.6594, -0.3832, -0.5739, -1.5694,  0.3045,
          1.3149, -0.7525]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4583, -0.8812, -0.2684, -0.6592, -0.3832, -0.5739, -1.5705,  0.3047,
          1.3339, -0.7526]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4634, -0.8813, -0.2684, -0.6585, -0.3833, -0.5739, -1.5711,  0.3047,
          1.3548, -0.7527]], dtype=torch.float64, requires_grad=True)
Epoch 2 / 50 . Accuracy: 0.520000. Loss: 1.682278. Time: 6.519185
Validate after epoch 2 with seed 8100989
Val Accuracy: 0.590000, Val Loss: 1.417317 
Start training epoch 3 with seed 5242852 
Quantum circuit at the beginning of epoch 3
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4745, -0.8809, -0.2684, -0.6567, -0.3835, -0.5739, -1.5714,  0.3049,
          1.3928, -0.7524]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4722, -0.8808, -0.2684, -0.6562, -0.3835, -0.5739, -1.5715,  0.3048,
          1.4078, -0.7523]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4731, -0.8806, -0.2684, -0.6559, -0.3835, -0.5739, -1.5711,  0.3047,
          1.4223, -0.7521]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4810, -0.8804, -0.2684, -0.6556, -0.3838, -0.5739, -1.5708,  0.3047,
          1.4360, -0.7520]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4851, -0.8802, -0.2684, -0.6553, -0.3840, -0.5739, -1.5706,  0.3049,
          1.4510, -0.7518]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4648, -0.8800, -0.2684, -0.6551, -0.3843, -0.5739, -1.5705,  0.3052,
          1.4633, -0.7517]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4579, -0.8799, -0.2684, -0.6551, -0.3841, -0.5739, -1.5706,  0.3053,
          1.4745, -0.7516]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4693, -0.8799, -0.2684, -0.6553, -0.3838, -0.5739, -1.5707,  0.3049,
          1.4826, -0.7516]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4893, -0.8797, -0.2684, -0.6559, -0.3837, -0.5739, -1.5709,  0.3047,
          1.4904, -0.7514]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4916, -0.8792, -0.2684, -0.6564, -0.3834, -0.5739, -1.5709,  0.3046,
          1.4983, -0.7511]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4850, -0.8788, -0.2684, -0.6567, -0.3830, -0.5739, -1.5709,  0.3045,
          1.5064, -0.7508]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4811, -0.8785, -0.2684, -0.6567, -0.3826, -0.5739, -1.5708,  0.3044,
          1.5143, -0.7505]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4745, -0.8783, -0.2684, -0.6568, -0.3822, -0.5739, -1.5708,  0.3045,
          1.5223, -0.7504]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4792, -0.8782, -0.2684, -0.6570, -0.3816, -0.5739, -1.5707,  0.3045,
          1.5290, -0.7503]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4956, -0.8782, -0.2684, -0.6574, -0.3814, -0.5739, -1.5708,  0.3046,
          1.5349, -0.7503]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4990, -0.8783, -0.2684, -0.6576, -0.3812, -0.5739, -1.5708,  0.3047,
          1.5397, -0.7503]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4829, -0.8781, -0.2684, -0.6577, -0.3809, -0.5739, -1.5708,  0.3045,
          1.5431, -0.7502]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4858, -0.8782, -0.2684, -0.6578, -0.3804, -0.5739, -1.5708,  0.3043,
          1.5468, -0.7503]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4921, -0.8784, -0.2684, -0.6579, -0.3804, -0.5739, -1.5708,  0.3040,
          1.5503, -0.7504]], dtype=torch.float64, requires_grad=True)
Epoch 3 / 50 . Accuracy: 0.620000. Loss: 1.418048. Time: 6.530000
Validate after epoch 3 with seed 5242852
Val Accuracy: 0.600000, Val Loss: 1.363821 
Start training epoch 4 with seed 3589440 
Quantum circuit at the beginning of epoch 4
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4805, -0.8785, -0.2684, -0.6581, -0.3811, -0.5739, -1.5708,  0.3042,
          1.5556, -0.7505]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4731, -0.8788, -0.2684, -0.6581, -0.3816, -0.5739, -1.5708,  0.3044,
          1.5580, -0.7507]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4752, -0.8788, -0.2684, -0.6581, -0.3818, -0.5739, -1.5708,  0.3043,
          1.5599, -0.7508]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4832, -0.8787, -0.2684, -0.6581, -0.3817, -0.5739, -1.5708,  0.3040,
          1.5616, -0.7507]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5045, -0.8784, -0.2684, -0.6581, -0.3815, -0.5739, -1.5708,  0.3037,
          1.5627, -0.7504]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5259, -0.8776, -0.2684, -0.6581, -0.3814, -0.5739, -1.5708,  0.3034,
          1.5639, -0.7498]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5294, -0.8770, -0.2684, -0.6581, -0.3811, -0.5739, -1.5708,  0.3034,
          1.5650, -0.7493]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5205, -0.8764, -0.2684, -0.6582, -0.3810, -0.5739, -1.5708,  0.3032,
          1.5659, -0.7489]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5116, -0.8758, -0.2684, -0.6582, -0.3808, -0.5739, -1.5708,  0.3032,
          1.5668, -0.7484]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.4960, -0.8754, -0.2684, -0.6582, -0.3809, -0.5739, -1.5708,  0.3032,
          1.5675, -0.7481]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5013, -0.8752, -0.2684, -0.6582, -0.3809, -0.5739, -1.5708,  0.3033,
          1.5681, -0.7480]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5076, -0.8752, -0.2684, -0.6582, -0.3807, -0.5739, -1.5708,  0.3034,
          1.5686, -0.7479]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5153, -0.8752, -0.2684, -0.6582, -0.3807, -0.5739, -1.5708,  0.3034,
          1.5689, -0.7480]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5392, -0.8751, -0.2684, -0.6582, -0.3806, -0.5739, -1.5708,  0.3034,
          1.5692, -0.7479]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5685, -0.8750, -0.2684, -0.6582, -0.3805, -0.5739, -1.5708,  0.3035,
          1.5695, -0.7478]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5779, -0.8750, -0.2684, -0.6582, -0.3806, -0.5739, -1.5708,  0.3037,
          1.5698, -0.7478]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5842, -0.8748, -0.2684, -0.6582, -0.3808, -0.5739, -1.5708,  0.3038,
          1.5700, -0.7476]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5871, -0.8747, -0.2684, -0.6582, -0.3807, -0.5739, -1.5708,  0.3040,
          1.5702, -0.7476]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5621, -0.8748, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3040,
          1.5703, -0.7476]], dtype=torch.float64, requires_grad=True)
Epoch 4 / 50 . Accuracy: 0.670000. Loss: 1.159163. Time: 6.528158
Validate after epoch 4 with seed 3589440
Val Accuracy: 0.640000, Val Loss: 1.232464 
Start training epoch 5 with seed 6909297 
Quantum circuit at the beginning of epoch 5
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5266, -0.8750, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3037,
          1.5705, -0.7478]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5246, -0.8752, -0.2684, -0.6582, -0.3804, -0.5739, -1.5708,  0.3037,
          1.5705, -0.7479]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5370, -0.8753, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3036,
          1.5706, -0.7480]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5698, -0.8753, -0.2684, -0.6582, -0.3802, -0.5739, -1.5708,  0.3036,
          1.5706, -0.7480]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6102, -0.8752, -0.2684, -0.6582, -0.3802, -0.5739, -1.5708,  0.3035,
          1.5707, -0.7480]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6404, -0.8749, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3033,
          1.5707, -0.7477]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6567, -0.8744, -0.2684, -0.6582, -0.3805, -0.5739, -1.5708,  0.3031,
          1.5707, -0.7474]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6637, -0.8743, -0.2684, -0.6582, -0.3808, -0.5739, -1.5708,  0.3028,
          1.5707, -0.7473]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6657, -0.8744, -0.2684, -0.6582, -0.3809, -0.5739, -1.5708,  0.3026,
          1.5707, -0.7473]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6651, -0.8745, -0.2684, -0.6582, -0.3806, -0.5739, -1.5708,  0.3025,
          1.5707, -0.7474]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6439, -0.8745, -0.2684, -0.6582, -0.3805, -0.5739, -1.5708,  0.3024,
          1.5707, -0.7474]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6147, -0.8745, -0.2684, -0.6582, -0.3804, -0.5739, -1.5708,  0.3024,
          1.5708, -0.7474]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5836, -0.8746, -0.2684, -0.6582, -0.3804, -0.5739, -1.5708,  0.3023,
          1.5708, -0.7474]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5601, -0.8744, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7473]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5403, -0.8740, -0.2684, -0.6582, -0.3802, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7470]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5508, -0.8738, -0.2684, -0.6582, -0.3803, -0.5739, -1.5708,  0.3023,
          1.5708, -0.7468]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5912, -0.8737, -0.2684, -0.6582, -0.3802, -0.5739, -1.5708,  0.3026,
          1.5708, -0.7468]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6243, -0.8730, -0.2684, -0.6582, -0.3804, -0.5739, -1.5708,  0.3027,
          1.5708, -0.7462]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6536, -0.8726, -0.2684, -0.6582, -0.3809, -0.5739, -1.5708,  0.3028,
          1.5708, -0.7459]], dtype=torch.float64, requires_grad=True)
Epoch 5 / 50 . Accuracy: 0.615000. Loss: 1.197620. Time: 6.525756
Validate after epoch 5 with seed 6909297
Val Accuracy: 0.790000, Val Loss: 0.989434 
Start training epoch 6 with seed 5542621 
Quantum circuit at the beginning of epoch 6
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7160, -0.8721, -0.2684, -0.6582, -0.3821, -0.5739, -1.5708,  0.3031,
          1.5708, -0.7456]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7280, -0.8720, -0.2684, -0.6582, -0.3824, -0.5739, -1.5708,  0.3031,
          1.5708, -0.7454]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7280, -0.8717, -0.2684, -0.6582, -0.3824, -0.5739, -1.5708,  0.3030,
          1.5708, -0.7452]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7138, -0.8715, -0.2684, -0.6582, -0.3824, -0.5739, -1.5708,  0.3030,
          1.5708, -0.7451]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6993, -0.8713, -0.2684, -0.6582, -0.3821, -0.5739, -1.5708,  0.3030,
          1.5708, -0.7449]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6944, -0.8710, -0.2684, -0.6582, -0.3818, -0.5739, -1.5708,  0.3032,
          1.5708, -0.7447]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6949, -0.8704, -0.2684, -0.6582, -0.3816, -0.5739, -1.5708,  0.3032,
          1.5708, -0.7442]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6862, -0.8697, -0.2684, -0.6582, -0.3817, -0.5739, -1.5708,  0.3029,
          1.5708, -0.7437]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6721, -0.8693, -0.2684, -0.6582, -0.3820, -0.5739, -1.5708,  0.3028,
          1.5708, -0.7433]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6502, -0.8687, -0.2684, -0.6582, -0.3825, -0.5739, -1.5708,  0.3025,
          1.5708, -0.7429]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6518, -0.8680, -0.2684, -0.6582, -0.3829, -0.5739, -1.5708,  0.3021,
          1.5708, -0.7424]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6738, -0.8675, -0.2684, -0.6582, -0.3835, -0.5739, -1.5708,  0.3017,
          1.5708, -0.7420]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7062, -0.8672, -0.2684, -0.6582, -0.3840, -0.5739, -1.5708,  0.3016,
          1.5708, -0.7417]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7160, -0.8668, -0.2684, -0.6582, -0.3842, -0.5739, -1.5708,  0.3015,
          1.5708, -0.7414]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6954, -0.8665, -0.2684, -0.6582, -0.3842, -0.5739, -1.5708,  0.3014,
          1.5708, -0.7411]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6661, -0.8664, -0.2684, -0.6582, -0.3841, -0.5739, -1.5708,  0.3012,
          1.5708, -0.7410]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6445, -0.8661, -0.2684, -0.6582, -0.3838, -0.5739, -1.5708,  0.3008,
          1.5708, -0.7409]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6293, -0.8661, -0.2684, -0.6582, -0.3836, -0.5739, -1.5708,  0.3004,
          1.5708, -0.7408]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6241, -0.8663, -0.2684, -0.6582, -0.3834, -0.5739, -1.5708,  0.3001,
          1.5708, -0.7410]], dtype=torch.float64, requires_grad=True)
Epoch 6 / 50 . Accuracy: 0.680000. Loss: 1.105484. Time: 6.522745
Validate after epoch 6 with seed 5542621
Val Accuracy: 0.760000, Val Loss: 0.966331 
Start training epoch 7 with seed 9192944 
Quantum circuit at the beginning of epoch 7
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6414, -0.8668, -0.2684, -0.6582, -0.3830, -0.5739, -1.5708,  0.2998,
          1.5708, -0.7414]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6257, -0.8673, -0.2684, -0.6582, -0.3826, -0.5739, -1.5708,  0.2996,
          1.5708, -0.7418]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6221, -0.8675, -0.2684, -0.6582, -0.3822, -0.5739, -1.5708,  0.2993,
          1.5708, -0.7419]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6239, -0.8673, -0.2684, -0.6582, -0.3821, -0.5739, -1.5708,  0.2992,
          1.5708, -0.7418]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6310, -0.8674, -0.2684, -0.6582, -0.3817, -0.5739, -1.5708,  0.2990,
          1.5708, -0.7419]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6384, -0.8676, -0.2684, -0.6582, -0.3812, -0.5739, -1.5708,  0.2991,
          1.5708, -0.7420]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6313, -0.8673, -0.2684, -0.6582, -0.3809, -0.5739, -1.5708,  0.2993,
          1.5708, -0.7418]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6199, -0.8668, -0.2684, -0.6582, -0.3805, -0.5739, -1.5708,  0.2995,
          1.5708, -0.7414]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6041, -0.8663, -0.2684, -0.6582, -0.3801, -0.5739, -1.5708,  0.2997,
          1.5708, -0.7410]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5908, -0.8658, -0.2684, -0.6582, -0.3796, -0.5739, -1.5708,  0.2998,
          1.5708, -0.7406]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5789, -0.8655, -0.2684, -0.6582, -0.3792, -0.5739, -1.5708,  0.3000,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5804, -0.8652, -0.2684, -0.6582, -0.3789, -0.5739, -1.5708,  0.3000,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5906, -0.8648, -0.2684, -0.6582, -0.3789, -0.5739, -1.5708,  0.2997,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5857, -0.8647, -0.2684, -0.6582, -0.3788, -0.5739, -1.5708,  0.2996,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5921, -0.8646, -0.2684, -0.6582, -0.3785, -0.5739, -1.5708,  0.2999,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5913, -0.8643, -0.2684, -0.6582, -0.3784, -0.5739, -1.5708,  0.3000,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5901, -0.8640, -0.2684, -0.6582, -0.3783, -0.5739, -1.5708,  0.2999,
          1.5708, -0.7392]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5863, -0.8639, -0.2684, -0.6582, -0.3784, -0.5739, -1.5708,  0.2998,
          1.5708, -0.7391]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5906, -0.8642, -0.2684, -0.6582, -0.3786, -0.5739, -1.5708,  0.2999,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Epoch 7 / 50 . Accuracy: 0.755000. Loss: 0.885488. Time: 6.519207
Validate after epoch 7 with seed 9192944
Val Accuracy: 0.800000, Val Loss: 0.840292 
Start training epoch 8 with seed 7448477 
Quantum circuit at the beginning of epoch 8
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6214, -0.8642, -0.2684, -0.6582, -0.3784, -0.5739, -1.5708,  0.3005,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6528, -0.8640, -0.2684, -0.6582, -0.3781, -0.5739, -1.5708,  0.3006,
          1.5708, -0.7392]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6646, -0.8641, -0.2684, -0.6582, -0.3774, -0.5739, -1.5708,  0.3007,
          1.5708, -0.7392]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6743, -0.8638, -0.2684, -0.6582, -0.3764, -0.5739, -1.5708,  0.3008,
          1.5708, -0.7391]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6802, -0.8636, -0.2684, -0.6582, -0.3760, -0.5739, -1.5708,  0.3010,
          1.5708, -0.7389]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6759, -0.8636, -0.2684, -0.6582, -0.3756, -0.5739, -1.5708,  0.3014,
          1.5708, -0.7389]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6881, -0.8636, -0.2684, -0.6582, -0.3756, -0.5739, -1.5708,  0.3016,
          1.5708, -0.7389]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7097, -0.8636, -0.2684, -0.6582, -0.3754, -0.5739, -1.5708,  0.3017,
          1.5708, -0.7389]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7193, -0.8635, -0.2684, -0.6582, -0.3753, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7388]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7092, -0.8633, -0.2684, -0.6582, -0.3749, -0.5739, -1.5708,  0.3021,
          1.5708, -0.7386]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6955, -0.8630, -0.2684, -0.6582, -0.3746, -0.5739, -1.5708,  0.3021,
          1.5708, -0.7384]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6847, -0.8629, -0.2684, -0.6582, -0.3744, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7383]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6817, -0.8629, -0.2684, -0.6582, -0.3744, -0.5739, -1.5708,  0.3025,
          1.5708, -0.7384]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6789, -0.8630, -0.2684, -0.6582, -0.3743, -0.5739, -1.5708,  0.3028,
          1.5708, -0.7384]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6793, -0.8635, -0.2684, -0.6582, -0.3746, -0.5739, -1.5708,  0.3029,
          1.5708, -0.7388]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6773, -0.8641, -0.2684, -0.6582, -0.3749, -0.5739, -1.5708,  0.3027,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6878, -0.8648, -0.2684, -0.6582, -0.3753, -0.5739, -1.5708,  0.3023,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7141, -0.8651, -0.2684, -0.6582, -0.3755, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7242, -0.8653, -0.2684, -0.6582, -0.3754, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7402]], dtype=torch.float64, requires_grad=True)
Epoch 8 / 50 . Accuracy: 0.690000. Loss: 0.995373. Time: 6.526371
Validate after epoch 8 with seed 7448477
Val Accuracy: 0.750000, Val Loss: 0.971666 
Start training epoch 9 with seed 9349114 
Quantum circuit at the beginning of epoch 9
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7564, -0.8650, -0.2684, -0.6582, -0.3750, -0.5739, -1.5708,  0.3023,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7617, -0.8652, -0.2684, -0.6582, -0.3743, -0.5739, -1.5708,  0.3024,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7647, -0.8651, -0.2684, -0.6582, -0.3738, -0.5739, -1.5708,  0.3024,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7697, -0.8650, -0.2684, -0.6582, -0.3735, -0.5739, -1.5708,  0.3023,
          1.5708, -0.7400]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7653, -0.8649, -0.2684, -0.6582, -0.3732, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7676, -0.8649, -0.2684, -0.6582, -0.3729, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7853, -0.8650, -0.2684, -0.6582, -0.3729, -0.5739, -1.5708,  0.3019,
          1.5708, -0.7400]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8073, -0.8648, -0.2684, -0.6582, -0.3728, -0.5739, -1.5708,  0.3017,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8313, -0.8644, -0.2684, -0.6582, -0.3729, -0.5739, -1.5708,  0.3018,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8432, -0.8644, -0.2684, -0.6582, -0.3731, -0.5739, -1.5708,  0.3016,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8547, -0.8646, -0.2684, -0.6582, -0.3734, -0.5739, -1.5708,  0.3014,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8416, -0.8647, -0.2684, -0.6582, -0.3735, -0.5739, -1.5708,  0.3013,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8263, -0.8648, -0.2684, -0.6582, -0.3736, -0.5739, -1.5708,  0.3012,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8261, -0.8648, -0.2684, -0.6582, -0.3734, -0.5739, -1.5708,  0.3013,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8247, -0.8645, -0.2684, -0.6582, -0.3731, -0.5739, -1.5708,  0.3014,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8341, -0.8648, -0.2684, -0.6582, -0.3731, -0.5739, -1.5708,  0.3017,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8404, -0.8650, -0.2684, -0.6582, -0.3729, -0.5739, -1.5708,  0.3022,
          1.5708, -0.7400]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8425, -0.8650, -0.2684, -0.6582, -0.3726, -0.5739, -1.5708,  0.3027,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8355, -0.8650, -0.2684, -0.6582, -0.3725, -0.5739, -1.5708,  0.3030,
          1.5708, -0.7400]], dtype=torch.float64, requires_grad=True)
Epoch 9 / 50 . Accuracy: 0.715000. Loss: 0.926296. Time: 6.527139
Validate after epoch 9 with seed 9349114
Val Accuracy: 0.780000, Val Loss: 0.891969 
Start training epoch 10 with seed 4905216 
Quantum circuit at the beginning of epoch 10
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8370, -0.8659, -0.2684, -0.6582, -0.3722, -0.5739, -1.5708,  0.3039,
          1.5708, -0.7407]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8046, -0.8656, -0.2684, -0.6582, -0.3719, -0.5739, -1.5708,  0.3040,
          1.5708, -0.7405]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7711, -0.8655, -0.2684, -0.6582, -0.3717, -0.5739, -1.5708,  0.3038,
          1.5708, -0.7404]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7421, -0.8657, -0.2684, -0.6582, -0.3717, -0.5739, -1.5708,  0.3036,
          1.5708, -0.7406]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7179, -0.8657, -0.2684, -0.6582, -0.3715, -0.5739, -1.5708,  0.3033,
          1.5708, -0.7405]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7110, -0.8661, -0.2684, -0.6582, -0.3713, -0.5739, -1.5708,  0.3032,
          1.5708, -0.7408]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6947, -0.8660, -0.2684, -0.6582, -0.3707, -0.5739, -1.5708,  0.3032,
          1.5708, -0.7408]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6792, -0.8659, -0.2684, -0.6582, -0.3702, -0.5739, -1.5708,  0.3034,
          1.5708, -0.7407]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6681, -0.8659, -0.2684, -0.6582, -0.3698, -0.5739, -1.5708,  0.3036,
          1.5708, -0.7407]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6637, -0.8659, -0.2684, -0.6582, -0.3694, -0.5739, -1.5708,  0.3036,
          1.5708, -0.7407]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6712, -0.8660, -0.2684, -0.6582, -0.3691, -0.5739, -1.5708,  0.3039,
          1.5708, -0.7407]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6818, -0.8663, -0.2684, -0.6582, -0.3689, -0.5739, -1.5708,  0.3042,
          1.5708, -0.7410]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6756, -0.8666, -0.2684, -0.6582, -0.3685, -0.5739, -1.5708,  0.3042,
          1.5708, -0.7412]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6614, -0.8667, -0.2684, -0.6582, -0.3684, -0.5739, -1.5708,  0.3041,
          1.5708, -0.7413]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6509, -0.8665, -0.2684, -0.6582, -0.3683, -0.5739, -1.5708,  0.3043,
          1.5708, -0.7411]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6429, -0.8661, -0.2684, -0.6582, -0.3681, -0.5739, -1.5708,  0.3044,
          1.5708, -0.7409]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6322, -0.8658, -0.2684, -0.6582, -0.3681, -0.5739, -1.5708,  0.3046,
          1.5708, -0.7406]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6246, -0.8655, -0.2684, -0.6582, -0.3683, -0.5739, -1.5708,  0.3047,
          1.5708, -0.7404]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6115, -0.8651, -0.2684, -0.6582, -0.3684, -0.5739, -1.5708,  0.3047,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Epoch 10 / 50 . Accuracy: 0.750000. Loss: 0.916477. Time: 6.527453
Validate after epoch 10 with seed 4905216
Val Accuracy: 0.770000, Val Loss: 0.839553 
Start training epoch 11 with seed 8092138 
Quantum circuit at the beginning of epoch 11
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5691, -0.8652, -0.2684, -0.6582, -0.3689, -0.5739, -1.5708,  0.3045,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5566, -0.8651, -0.2684, -0.6582, -0.3691, -0.5739, -1.5708,  0.3043,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5574, -0.8649, -0.2684, -0.6582, -0.3690, -0.5739, -1.5708,  0.3042,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5724, -0.8646, -0.2684, -0.6582, -0.3687, -0.5739, -1.5708,  0.3039,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5978, -0.8646, -0.2684, -0.6582, -0.3687, -0.5739, -1.5708,  0.3037,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6276, -0.8646, -0.2684, -0.6582, -0.3689, -0.5739, -1.5708,  0.3036,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6483, -0.8645, -0.2684, -0.6582, -0.3688, -0.5739, -1.5708,  0.3036,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6585, -0.8647, -0.2684, -0.6582, -0.3688, -0.5739, -1.5708,  0.3035,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6605, -0.8645, -0.2684, -0.6582, -0.3688, -0.5739, -1.5708,  0.3033,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6476, -0.8644, -0.2684, -0.6582, -0.3686, -0.5739, -1.5708,  0.3029,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6534, -0.8647, -0.2684, -0.6582, -0.3683, -0.5739, -1.5708,  0.3026,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6740, -0.8648, -0.2684, -0.6582, -0.3680, -0.5739, -1.5708,  0.3025,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7094, -0.8647, -0.2684, -0.6582, -0.3676, -0.5739, -1.5708,  0.3024,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7408, -0.8642, -0.2684, -0.6582, -0.3675, -0.5739, -1.5708,  0.3025,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7669, -0.8643, -0.2684, -0.6582, -0.3674, -0.5739, -1.5708,  0.3025,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7939, -0.8643, -0.2684, -0.6582, -0.3672, -0.5739, -1.5708,  0.3026,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8081, -0.8642, -0.2684, -0.6582, -0.3674, -0.5739, -1.5708,  0.3027,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8088, -0.8646, -0.2684, -0.6582, -0.3674, -0.5739, -1.5708,  0.3029,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7952, -0.8650, -0.2684, -0.6582, -0.3674, -0.5739, -1.5708,  0.3029,
          1.5708, -0.7400]], dtype=torch.float64, requires_grad=True)
Epoch 11 / 50 . Accuracy: 0.710000. Loss: 0.909667. Time: 6.529455
Validate after epoch 11 with seed 8092138
Val Accuracy: 0.760000, Val Loss: 0.818725 
Start training epoch 12 with seed 8333814 
Quantum circuit at the beginning of epoch 12
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7805, -0.8654, -0.2684, -0.6582, -0.3673, -0.5739, -1.5708,  0.3024,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7823, -0.8655, -0.2684, -0.6582, -0.3669, -0.5739, -1.5708,  0.3021,
          1.5708, -0.7404]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7740, -0.8652, -0.2684, -0.6582, -0.3663, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7402]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7613, -0.8652, -0.2684, -0.6582, -0.3656, -0.5739, -1.5708,  0.3019,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7567, -0.8652, -0.2684, -0.6582, -0.3654, -0.5739, -1.5708,  0.3019,
          1.5708, -0.7402]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7526, -0.8655, -0.2684, -0.6582, -0.3653, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7497, -0.8657, -0.2684, -0.6582, -0.3655, -0.5739, -1.5708,  0.3020,
          1.5708, -0.7405]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7501, -0.8654, -0.2684, -0.6582, -0.3653, -0.5739, -1.5708,  0.3019,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7474, -0.8652, -0.2684, -0.6582, -0.3650, -0.5739, -1.5708,  0.3018,
          1.5708, -0.7402]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7469, -0.8648, -0.2684, -0.6582, -0.3645, -0.5739, -1.5708,  0.3016,
          1.5708, -0.7399]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7482, -0.8647, -0.2684, -0.6582, -0.3639, -0.5739, -1.5708,  0.3015,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7346, -0.8643, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.3013,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7424, -0.8641, -0.2684, -0.6582, -0.3628, -0.5739, -1.5708,  0.3012,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7601, -0.8642, -0.2684, -0.6582, -0.3624, -0.5739, -1.5708,  0.3008,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7661, -0.8644, -0.2684, -0.6582, -0.3621, -0.5739, -1.5708,  0.3003,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7638, -0.8645, -0.2684, -0.6582, -0.3619, -0.5739, -1.5708,  0.3000,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7639, -0.8643, -0.2684, -0.6582, -0.3621, -0.5739, -1.5708,  0.2997,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7663, -0.8639, -0.2684, -0.6582, -0.3622, -0.5739, -1.5708,  0.2994,
          1.5708, -0.7391]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7830, -0.8635, -0.2684, -0.6582, -0.3624, -0.5739, -1.5708,  0.2993,
          1.5708, -0.7388]], dtype=torch.float64, requires_grad=True)
Epoch 12 / 50 . Accuracy: 0.765000. Loss: 0.884668. Time: 6.510066
Validate after epoch 12 with seed 8333814
Val Accuracy: 0.720000, Val Loss: 0.832523 
Start training epoch 13 with seed 7585188 
Quantum circuit at the beginning of epoch 13
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8337, -0.8639, -0.2684, -0.6582, -0.3632, -0.5739, -1.5708,  0.2987,
          1.5708, -0.7391]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8270, -0.8641, -0.2684, -0.6582, -0.3633, -0.5739, -1.5708,  0.2982,
          1.5708, -0.7392]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8170, -0.8643, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2978,
          1.5708, -0.7395]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8075, -0.8645, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2977,
          1.5708, -0.7396]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8018, -0.8646, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2976,
          1.5708, -0.7397]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8028, -0.8652, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2975,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8107, -0.8654, -0.2684, -0.6582, -0.3633, -0.5739, -1.5708,  0.2973,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8227, -0.8655, -0.2684, -0.6582, -0.3632, -0.5739, -1.5708,  0.2971,
          1.5708, -0.7404]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8315, -0.8654, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2971,
          1.5708, -0.7403]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8431, -0.8652, -0.2684, -0.6582, -0.3635, -0.5739, -1.5708,  0.2971,
          1.5708, -0.7401]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8521, -0.8648, -0.2684, -0.6582, -0.3636, -0.5739, -1.5708,  0.2969,
          1.5708, -0.7398]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8531, -0.8641, -0.2684, -0.6582, -0.3636, -0.5739, -1.5708,  0.2967,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8431, -0.8636, -0.2684, -0.6582, -0.3635, -0.5739, -1.5708,  0.2966,
          1.5708, -0.7389]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8324, -0.8635, -0.2684, -0.6582, -0.3634, -0.5739, -1.5708,  0.2964,
          1.5708, -0.7388]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8236, -0.8637, -0.2684, -0.6582, -0.3635, -0.5739, -1.5708,  0.2961,
          1.5708, -0.7390]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8155, -0.8638, -0.2684, -0.6582, -0.3637, -0.5739, -1.5708,  0.2960,
          1.5708, -0.7390]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7996, -0.8639, -0.2684, -0.6582, -0.3636, -0.5739, -1.5707,  0.2959,
          1.5708, -0.7391]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7882, -0.8642, -0.2684, -0.6582, -0.3632, -0.5739, -1.5709,  0.2958,
          1.5708, -0.7394]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7743, -0.8641, -0.2684, -0.6582, -0.3630, -0.5739, -1.5709,  0.2958,
          1.5708, -0.7393]], dtype=torch.float64, requires_grad=True)
Epoch 13 / 50 . Accuracy: 0.750000. Loss: 0.835533. Time: 6.511554
Validate after epoch 13 with seed 7585188
Val Accuracy: 0.810000, Val Loss: 0.803598 
Start training epoch 14 with seed 964979 
Quantum circuit at the beginning of epoch 14
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7786, -0.8635, -0.2684, -0.6582, -0.3631, -0.5739, -1.5708,  0.2962,
          1.5708, -0.7388]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7748, -0.8630, -0.2684, -0.6582, -0.3633, -0.5739, -1.5710,  0.2961,
          1.5708, -0.7385]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7481, -0.8629, -0.2684, -0.6582, -0.3636, -0.5739, -1.5708,  0.2960,
          1.5708, -0.7383]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7265, -0.8625, -0.2684, -0.6582, -0.3636, -0.5739, -1.5701,  0.2959,
          1.5708, -0.7381]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6938, -0.8619, -0.2684, -0.6582, -0.3632, -0.5739, -1.5677,  0.2954,
          1.5708, -0.7376]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6708, -0.8614, -0.2684, -0.6582, -0.3633, -0.5739, -1.5702,  0.2950,
          1.5708, -0.7372]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6538, -0.8609, -0.2684, -0.6582, -0.3634, -0.5739, -1.5731,  0.2948,
          1.5708, -0.7368]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6479, -0.8607, -0.2684, -0.6582, -0.3632, -0.5739, -1.5712,  0.2948,
          1.5708, -0.7366]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6461, -0.8607, -0.2684, -0.6582, -0.3627, -0.5739, -1.5695,  0.2949,
          1.5708, -0.7366]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6309, -0.8605, -0.2684, -0.6582, -0.3617, -0.5739, -1.5673,  0.2950,
          1.5708, -0.7365]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6172, -0.8604, -0.2684, -0.6582, -0.3608, -0.5739, -1.5712,  0.2948,
          1.5708, -0.7364]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6090, -0.8603, -0.2684, -0.6582, -0.3602, -0.5739, -1.5716,  0.2946,
          1.5708, -0.7363]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5963, -0.8604, -0.2684, -0.6582, -0.3599, -0.5739, -1.5715,  0.2944,
          1.5708, -0.7363]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6098, -0.8604, -0.2684, -0.6582, -0.3599, -0.5739, -1.5706,  0.2943,
          1.5708, -0.7363]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6225, -0.8603, -0.2684, -0.6582, -0.3597, -0.5739, -1.5705,  0.2941,
          1.5708, -0.7363]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6459, -0.8602, -0.2684, -0.6582, -0.3596, -0.5739, -1.5713,  0.2939,
          1.5708, -0.7362]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6733, -0.8603, -0.2684, -0.6582, -0.3595, -0.5739, -1.5720,  0.2935,
          1.5708, -0.7363]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6978, -0.8605, -0.2684, -0.6582, -0.3595, -0.5739, -1.5705,  0.2932,
          1.5708, -0.7365]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7103, -0.8607, -0.2684, -0.6582, -0.3598, -0.5739, -1.5697,  0.2930,
          1.5708, -0.7366]], dtype=torch.float64, requires_grad=True)
Epoch 14 / 50 . Accuracy: 0.765000. Loss: 0.809057. Time: 6.533052
Validate after epoch 14 with seed 964979
Val Accuracy: 0.820000, Val Loss: 0.731601 
Start training epoch 15 with seed 1152528 
Quantum circuit at the beginning of epoch 15
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7236, -0.8612, -0.2684, -0.6582, -0.3603, -0.5739, -1.5719,  0.2923,
          1.5708, -0.7370]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7295, -0.8612, -0.2684, -0.6582, -0.3602, -0.5739, -1.5733,  0.2921,
          1.5708, -0.7370]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7261, -0.8614, -0.2684, -0.6582, -0.3600, -0.5739, -1.5695,  0.2920,
          1.5708, -0.7372]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7303, -0.8615, -0.2684, -0.6582, -0.3599, -0.5739, -1.5700,  0.2920,
          1.5708, -0.7373]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7341, -0.8617, -0.2684, -0.6582, -0.3598, -0.5739, -1.5730,  0.2920,
          1.5708, -0.7374]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7354, -0.8614, -0.2684, -0.6582, -0.3591, -0.5739, -1.5740,  0.2916,
          1.5708, -0.7372]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7216, -0.8608, -0.2684, -0.6582, -0.3584, -0.5739, -1.5720,  0.2908,
          1.5708, -0.7367]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7276, -0.8600, -0.2684, -0.6582, -0.3582, -0.5739, -1.5697,  0.2903,
          1.5708, -0.7361]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7176, -0.8593, -0.2684, -0.6582, -0.3580, -0.5739, -1.5687,  0.2899,
          1.5708, -0.7355]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7066, -0.8588, -0.2684, -0.6582, -0.3576, -0.5739, -1.5718,  0.2899,
          1.5708, -0.7351]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6928, -0.8586, -0.2684, -0.6582, -0.3576, -0.5739, -1.5716,  0.2896,
          1.5708, -0.7350]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6802, -0.8582, -0.2684, -0.6582, -0.3577, -0.5739, -1.5694,  0.2893,
          1.5708, -0.7347]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6760, -0.8578, -0.2684, -0.6582, -0.3578, -0.5739, -1.5711,  0.2892,
          1.5708, -0.7343]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6786, -0.8578, -0.2684, -0.6582, -0.3579, -0.5739, -1.5715,  0.2892,
          1.5708, -0.7343]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6870, -0.8577, -0.2684, -0.6582, -0.3577, -0.5739, -1.5697,  0.2895,
          1.5708, -0.7343]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6840, -0.8577, -0.2684, -0.6582, -0.3573, -0.5739, -1.5692,  0.2897,
          1.5708, -0.7343]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6708, -0.8574, -0.2684, -0.6582, -0.3570, -0.5739, -1.5687,  0.2897,
          1.5708, -0.7341]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6606, -0.8570, -0.2684, -0.6582, -0.3567, -0.5739, -1.5709,  0.2897,
          1.5708, -0.7337]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6509, -0.8571, -0.2684, -0.6582, -0.3562, -0.5739, -1.5727,  0.2898,
          1.5708, -0.7338]], dtype=torch.float64, requires_grad=True)
Epoch 15 / 50 . Accuracy: 0.750000. Loss: 0.777473. Time: 6.524559
Validate after epoch 15 with seed 1152528
Val Accuracy: 0.800000, Val Loss: 0.791383 
Start training epoch 16 with seed 840036 
Quantum circuit at the beginning of epoch 16
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6610, -0.8566, -0.2684, -0.6582, -0.3552, -0.5739, -1.5700,  0.2898,
          1.5708, -0.7334]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6737, -0.8562, -0.2684, -0.6582, -0.3548, -0.5739, -1.5711,  0.2897,
          1.5708, -0.7331]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6869, -0.8558, -0.2684, -0.6582, -0.3546, -0.5739, -1.5712,  0.2895,
          1.5708, -0.7328]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7055, -0.8555, -0.2684, -0.6582, -0.3548, -0.5739, -1.5701,  0.2892,
          1.5708, -0.7325]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7236, -0.8554, -0.2684, -0.6582, -0.3549, -0.5739, -1.5709,  0.2889,
          1.5708, -0.7325]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7477, -0.8554, -0.2684, -0.6582, -0.3551, -0.5739, -1.5710,  0.2888,
          1.5708, -0.7325]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7670, -0.8553, -0.2684, -0.6582, -0.3554, -0.5739, -1.5704,  0.2887,
          1.5708, -0.7324]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7762, -0.8548, -0.2684, -0.6582, -0.3557, -0.5739, -1.5710,  0.2886,
          1.5708, -0.7320]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7893, -0.8542, -0.2684, -0.6582, -0.3558, -0.5739, -1.5710,  0.2883,
          1.5708, -0.7315]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8076, -0.8536, -0.2684, -0.6582, -0.3558, -0.5739, -1.5705,  0.2881,
          1.5708, -0.7311]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8156, -0.8534, -0.2684, -0.6582, -0.3558, -0.5739, -1.5709,  0.2879,
          1.5708, -0.7309]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8018, -0.8528, -0.2684, -0.6582, -0.3555, -0.5739, -1.5712,  0.2879,
          1.5708, -0.7304]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7900, -0.8522, -0.2684, -0.6582, -0.3557, -0.5739, -1.5725,  0.2879,
          1.5708, -0.7299]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7642, -0.8514, -0.2684, -0.6582, -0.3557, -0.5739, -1.5754,  0.2879,
          1.5708, -0.7293]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7425, -0.8507, -0.2684, -0.6582, -0.3557, -0.5739, -1.5749,  0.2879,
          1.5708, -0.7288]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7227, -0.8504, -0.2684, -0.6582, -0.3556, -0.5739, -1.5722,  0.2878,
          1.5708, -0.7285]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7050, -0.8501, -0.2684, -0.6582, -0.3557, -0.5739, -1.5677,  0.2879,
          1.5708, -0.7283]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6856, -0.8499, -0.2684, -0.6582, -0.3556, -0.5739, -1.5698,  0.2879,
          1.5708, -0.7281]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6645, -0.8500, -0.2684, -0.6582, -0.3556, -0.5739, -1.5733,  0.2880,
          1.5708, -0.7282]], dtype=torch.float64, requires_grad=True)
Epoch 16 / 50 . Accuracy: 0.805000. Loss: 0.686283. Time: 6.526092
Validate after epoch 16 with seed 840036
Val Accuracy: 0.750000, Val Loss: 0.788693 
Start training epoch 17 with seed 180463 
Quantum circuit at the beginning of epoch 17
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6417, -0.8506, -0.2684, -0.6582, -0.3563, -0.5739, -1.5800,  0.2877,
          1.5708, -0.7287]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6325, -0.8504, -0.2684, -0.6582, -0.3565, -0.5739, -1.5651,  0.2874,
          1.5708, -0.7285]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6343, -0.8497, -0.2684, -0.6582, -0.3566, -0.5739, -1.5651,  0.2870,
          1.5708, -0.7280]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6429, -0.8496, -0.2684, -0.6582, -0.3566, -0.5739, -1.5782,  0.2869,
          1.5708, -0.7279]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6492, -0.8496, -0.2684, -0.6582, -0.3566, -0.5739, -1.5775,  0.2867,
          1.5708, -0.7279]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6592, -0.8493, -0.2684, -0.6582, -0.3569, -0.5739, -1.5634,  0.2866,
          1.5708, -0.7276]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6592, -0.8491, -0.2684, -0.6582, -0.3572, -0.5739, -1.5718,  0.2865,
          1.5708, -0.7275]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6708, -0.8487, -0.2684, -0.6582, -0.3576, -0.5739, -1.5806,  0.2865,
          1.5708, -0.7272]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6792, -0.8486, -0.2684, -0.6582, -0.3579, -0.5739, -1.5682,  0.2865,
          1.5708, -0.7271]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6886, -0.8486, -0.2684, -0.6582, -0.3583, -0.5739, -1.5692,  0.2865,
          1.5708, -0.7271]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6942, -0.8485, -0.2684, -0.6582, -0.3585, -0.5739, -1.5781,  0.2864,
          1.5708, -0.7270]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6965, -0.8484, -0.2684, -0.6582, -0.3585, -0.5739, -1.5776,  0.2860,
          1.5708, -0.7270]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7026, -0.8483, -0.2684, -0.6582, -0.3585, -0.5739, -1.5763,  0.2861,
          1.5708, -0.7269]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7108, -0.8479, -0.2684, -0.6582, -0.3583, -0.5739, -1.5744,  0.2862,
          1.5708, -0.7265]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7269, -0.8477, -0.2684, -0.6582, -0.3582, -0.5739, -1.5679,  0.2864,
          1.5708, -0.7264]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7248, -0.8479, -0.2684, -0.6582, -0.3581, -0.5739, -1.5515,  0.2868,
          1.5708, -0.7265]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7164, -0.8481, -0.2684, -0.6582, -0.3580, -0.5739, -1.5511,  0.2870,
          1.5708, -0.7267]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7051, -0.8483, -0.2684, -0.6582, -0.3581, -0.5739, -1.5798,  0.2871,
          1.5708, -0.7269]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6948, -0.8483, -0.2684, -0.6582, -0.3583, -0.5739, -1.5812,  0.2875,
          1.5708, -0.7269]], dtype=torch.float64, requires_grad=True)
Epoch 17 / 50 . Accuracy: 0.760000. Loss: 0.811780. Time: 6.509080
Validate after epoch 17 with seed 180463
Val Accuracy: 0.740000, Val Loss: 0.883715 
Start training epoch 18 with seed 575883 
Quantum circuit at the beginning of epoch 18
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6559, -0.8484, -0.2684, -0.6582, -0.3580, -0.5739, -1.5648,  0.2877,
          1.5708, -0.7270]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6513, -0.8482, -0.2684, -0.6582, -0.3576, -0.5739, -1.5373,  0.2875,
          1.5708, -0.7268]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6606, -0.8478, -0.2684, -0.6582, -0.3571, -0.5739, -1.5801,  0.2873,
          1.5708, -0.7265]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6796, -0.8471, -0.2684, -0.6582, -0.3565, -0.5739, -1.6223,  0.2871,
          1.5708, -0.7259]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6872, -0.8467, -0.2684, -0.6582, -0.3562, -0.5739, -1.6624,  0.2867,
          1.5708, -0.7256]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6926, -0.8464, -0.2684, -0.6582, -0.3556, -0.5739, -1.6501,  0.2866,
          1.5708, -0.7254]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7139, -0.8461, -0.2684, -0.6582, -0.3550, -0.5739, -1.5707,  0.2866,
          1.5708, -0.7251]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7352, -0.8458, -0.2684, -0.6582, -0.3545, -0.5739, -1.5194,  0.2863,
          1.5708, -0.7249]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7421, -0.8458, -0.2684, -0.6582, -0.3541, -0.5739, -1.5020,  0.2858,
          1.5708, -0.7249]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7433, -0.8460, -0.2684, -0.6582, -0.3539, -0.5739, -1.4934,  0.2854,
          1.5708, -0.7250]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7442, -0.8459, -0.2684, -0.6582, -0.3535, -0.5739, -1.5086,  0.2849,
          1.5708, -0.7249]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7384, -0.8460, -0.2684, -0.6582, -0.3532, -0.5739, -1.5016,  0.2847,
          1.5708, -0.7251]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7422, -0.8463, -0.2684, -0.6582, -0.3531, -0.5739, -1.5396,  0.2848,
          1.5708, -0.7253]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7417, -0.8464, -0.2684, -0.6582, -0.3529, -0.5739, -1.5763,  0.2850,
          1.5708, -0.7254]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7384, -0.8460, -0.2684, -0.6582, -0.3526, -0.5739, -1.6073,  0.2852,
          1.5708, -0.7251]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7205, -0.8459, -0.2684, -0.6582, -0.3525, -0.5739, -1.6214,  0.2852,
          1.5708, -0.7250]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7125, -0.8459, -0.2684, -0.6582, -0.3527, -0.5739, -1.6117,  0.2853,
          1.5708, -0.7250]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7130, -0.8459, -0.2684, -0.6582, -0.3526, -0.5739, -1.5961,  0.2856,
          1.5708, -0.7250]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7117, -0.8452, -0.2684, -0.6582, -0.3524, -0.5739, -1.5781,  0.2861,
          1.5708, -0.7244]], dtype=torch.float64, requires_grad=True)
Epoch 18 / 50 . Accuracy: 0.790000. Loss: 0.687853. Time: 6.531493
Validate after epoch 18 with seed 575883
Val Accuracy: 0.730000, Val Loss: 0.847226 
Start training epoch 19 with seed 2033718 
Quantum circuit at the beginning of epoch 19
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7216, -0.8447, -0.2684, -0.6582, -0.3522, -0.5739, -1.5625,  0.2861,
          1.5708, -0.7241]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7440, -0.8448, -0.2684, -0.6582, -0.3522, -0.5739, -1.5691,  0.2860,
          1.5708, -0.7241]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7593, -0.8449, -0.2684, -0.6582, -0.3525, -0.5739, -1.5742,  0.2857,
          1.5708, -0.7242]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7642, -0.8449, -0.2684, -0.6582, -0.3525, -0.5739, -1.5762,  0.2856,
          1.5708, -0.7242]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7444, -0.8449, -0.2684, -0.6582, -0.3525, -0.5739, -1.5809,  0.2855,
          1.5708, -0.7242]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7367, -0.8450, -0.2684, -0.6582, -0.3525, -0.5739, -1.5853,  0.2856,
          1.5708, -0.7242]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7365, -0.8451, -0.2684, -0.6582, -0.3525, -0.5739, -1.5925,  0.2856,
          1.5708, -0.7243]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7415, -0.8451, -0.2684, -0.6582, -0.3527, -0.5739, -1.5912,  0.2854,
          1.5708, -0.7243]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7415, -0.8450, -0.2684, -0.6582, -0.3527, -0.5739, -1.5801,  0.2851,
          1.5708, -0.7242]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7420, -0.8452, -0.2684, -0.6582, -0.3528, -0.5739, -1.5710,  0.2848,
          1.5708, -0.7244]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7487, -0.8453, -0.2684, -0.6582, -0.3529, -0.5739, -1.5653,  0.2845,
          1.5708, -0.7245]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7683, -0.8452, -0.2684, -0.6582, -0.3528, -0.5739, -1.5640,  0.2846,
          1.5708, -0.7244]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7800, -0.8454, -0.2684, -0.6582, -0.3529, -0.5739, -1.5616,  0.2845,
          1.5708, -0.7246]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7842, -0.8457, -0.2684, -0.6582, -0.3526, -0.5739, -1.5625,  0.2842,
          1.5708, -0.7248]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7806, -0.8460, -0.2684, -0.6582, -0.3527, -0.5739, -1.5658,  0.2840,
          1.5708, -0.7250]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7780, -0.8464, -0.2684, -0.6582, -0.3529, -0.5739, -1.5716,  0.2837,
          1.5708, -0.7254]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7668, -0.8466, -0.2684, -0.6582, -0.3532, -0.5739, -1.5754,  0.2837,
          1.5708, -0.7256]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7547, -0.8466, -0.2684, -0.6582, -0.3530, -0.5739, -1.5759,  0.2835,
          1.5708, -0.7255]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7477, -0.8464, -0.2684, -0.6582, -0.3524, -0.5739, -1.5758,  0.2835,
          1.5708, -0.7254]], dtype=torch.float64, requires_grad=True)
Epoch 19 / 50 . Accuracy: 0.770000. Loss: 0.680379. Time: 6.528043
Validate after epoch 19 with seed 2033718
Val Accuracy: 0.800000, Val Loss: 0.666905 
Start training epoch 20 with seed 822616 
Quantum circuit at the beginning of epoch 20
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7469, -0.8457, -0.2684, -0.6582, -0.3511, -0.5739, -1.5763,  0.2829,
          1.5708, -0.7248]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7482, -0.8455, -0.2684, -0.6582, -0.3512, -0.5739, -1.5748,  0.2826,
          1.5708, -0.7246]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7557, -0.8452, -0.2684, -0.6582, -0.3515, -0.5739, -1.5718,  0.2826,
          1.5708, -0.7244]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7562, -0.8447, -0.2684, -0.6582, -0.3518, -0.5739, -1.5697,  0.2828,
          1.5708, -0.7240]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7438, -0.8444, -0.2684, -0.6582, -0.3518, -0.5739, -1.5690,  0.2828,
          1.5708, -0.7238]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7321, -0.8442, -0.2684, -0.6582, -0.3519, -0.5739, -1.5690,  0.2828,
          1.5708, -0.7237]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7271, -0.8443, -0.2684, -0.6582, -0.3517, -0.5739, -1.5699,  0.2825,
          1.5708, -0.7237]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7249, -0.8440, -0.2684, -0.6582, -0.3512, -0.5739, -1.5697,  0.2821,
          1.5708, -0.7234]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7166, -0.8441, -0.2684, -0.6582, -0.3506, -0.5739, -1.5698,  0.2820,
          1.5708, -0.7235]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7108, -0.8443, -0.2684, -0.6582, -0.3499, -0.5739, -1.5696,  0.2822,
          1.5708, -0.7237]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7108, -0.8451, -0.2684, -0.6582, -0.3493, -0.5739, -1.5705,  0.2824,
          1.5708, -0.7243]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7146, -0.8458, -0.2684, -0.6582, -0.3487, -0.5739, -1.5712,  0.2826,
          1.5708, -0.7249]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7056, -0.8464, -0.2684, -0.6582, -0.3485, -0.5739, -1.5718,  0.2826,
          1.5708, -0.7254]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6943, -0.8469, -0.2684, -0.6582, -0.3486, -0.5739, -1.5722,  0.2826,
          1.5708, -0.7258]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6860, -0.8467, -0.2684, -0.6582, -0.3485, -0.5739, -1.5725,  0.2825,
          1.5708, -0.7256]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6721, -0.8460, -0.2684, -0.6582, -0.3479, -0.5739, -1.5731,  0.2825,
          1.5708, -0.7251]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6747, -0.8452, -0.2684, -0.6582, -0.3474, -0.5739, -1.5721,  0.2825,
          1.5708, -0.7244]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6839, -0.8446, -0.2684, -0.6582, -0.3468, -0.5739, -1.5707,  0.2824,
          1.5708, -0.7240]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6875, -0.8440, -0.2684, -0.6582, -0.3464, -0.5739, -1.5701,  0.2822,
          1.5708, -0.7235]], dtype=torch.float64, requires_grad=True)
Epoch 20 / 50 . Accuracy: 0.780000. Loss: 0.734976. Time: 6.526960
Validate after epoch 20 with seed 822616
Val Accuracy: 0.770000, Val Loss: 0.718029 
Start training epoch 21 with seed 519531 
Quantum circuit at the beginning of epoch 21
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7038, -0.8430, -0.2684, -0.6582, -0.3458, -0.5739, -1.5710,  0.2817,
          1.5708, -0.7227]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7081, -0.8426, -0.2684, -0.6582, -0.3451, -0.5739, -1.5714,  0.2815,
          1.5708, -0.7224]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7087, -0.8424, -0.2684, -0.6582, -0.3447, -0.5739, -1.5719,  0.2814,
          1.5708, -0.7222]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7113, -0.8423, -0.2684, -0.6582, -0.3441, -0.5739, -1.5719,  0.2814,
          1.5708, -0.7221]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7045, -0.8419, -0.2684, -0.6582, -0.3437, -0.5739, -1.5717,  0.2816,
          1.5708, -0.7218]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6953, -0.8419, -0.2684, -0.6582, -0.3435, -0.5739, -1.5713,  0.2817,
          1.5708, -0.7218]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6813, -0.8420, -0.2684, -0.6582, -0.3431, -0.5739, -1.5712,  0.2818,
          1.5708, -0.7219]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6730, -0.8421, -0.2684, -0.6582, -0.3429, -0.5739, -1.5709,  0.2820,
          1.5708, -0.7220]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6700, -0.8423, -0.2684, -0.6582, -0.3428, -0.5739, -1.5709,  0.2821,
          1.5708, -0.7221]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6771, -0.8423, -0.2684, -0.6582, -0.3428, -0.5739, -1.5708,  0.2821,
          1.5708, -0.7221]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6823, -0.8422, -0.2684, -0.6582, -0.3428, -0.5739, -1.5708,  0.2822,
          1.5708, -0.7220]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6745, -0.8420, -0.2684, -0.6582, -0.3428, -0.5739, -1.5708,  0.2823,
          1.5708, -0.7219]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6630, -0.8417, -0.2684, -0.6582, -0.3427, -0.5739, -1.5708,  0.2823,
          1.5708, -0.7216]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6539, -0.8415, -0.2684, -0.6582, -0.3422, -0.5739, -1.5708,  0.2822,
          1.5708, -0.7215]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6534, -0.8415, -0.2684, -0.6582, -0.3421, -0.5739, -1.5708,  0.2821,
          1.5708, -0.7215]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6729, -0.8416, -0.2684, -0.6582, -0.3418, -0.5739, -1.5708,  0.2822,
          1.5708, -0.7216]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6881, -0.8414, -0.2684, -0.6582, -0.3422, -0.5739, -1.5708,  0.2820,
          1.5708, -0.7214]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6981, -0.8414, -0.2684, -0.6582, -0.3426, -0.5739, -1.5708,  0.2818,
          1.5708, -0.7214]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7185, -0.8413, -0.2684, -0.6582, -0.3432, -0.5739, -1.5708,  0.2815,
          1.5708, -0.7213]], dtype=torch.float64, requires_grad=True)
Epoch 21 / 50 . Accuracy: 0.800000. Loss: 0.691218. Time: 6.527908
Validate after epoch 21 with seed 519531
Val Accuracy: 0.800000, Val Loss: 0.677758 
Start training epoch 22 with seed 3749553 
Quantum circuit at the beginning of epoch 22
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7470, -0.8412, -0.2684, -0.6582, -0.3434, -0.5739, -1.5708,  0.2809,
          1.5708, -0.7213]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7543, -0.8411, -0.2684, -0.6582, -0.3431, -0.5739, -1.5708,  0.2807,
          1.5708, -0.7211]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7516, -0.8406, -0.2684, -0.6582, -0.3428, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7208]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7311, -0.8402, -0.2684, -0.6582, -0.3425, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7205]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7155, -0.8400, -0.2684, -0.6582, -0.3423, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7203]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7261, -0.8401, -0.2684, -0.6582, -0.3417, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7204]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7304, -0.8401, -0.2684, -0.6582, -0.3411, -0.5739, -1.5708,  0.2802,
          1.5708, -0.7204]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7382, -0.8402, -0.2684, -0.6582, -0.3410, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7205]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7331, -0.8405, -0.2684, -0.6582, -0.3410, -0.5739, -1.5708,  0.2802,
          1.5708, -0.7207]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7312, -0.8406, -0.2684, -0.6582, -0.3407, -0.5739, -1.5708,  0.2799,
          1.5708, -0.7208]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7203, -0.8406, -0.2684, -0.6582, -0.3404, -0.5739, -1.5708,  0.2797,
          1.5708, -0.7208]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7268, -0.8406, -0.2684, -0.6582, -0.3399, -0.5739, -1.5708,  0.2794,
          1.5708, -0.7208]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7195, -0.8404, -0.2684, -0.6582, -0.3398, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7207]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7020, -0.8401, -0.2684, -0.6582, -0.3395, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7204]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6837, -0.8400, -0.2684, -0.6582, -0.3387, -0.5739, -1.5708,  0.2789,
          1.5708, -0.7203]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6694, -0.8399, -0.2684, -0.6582, -0.3379, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7202]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6547, -0.8397, -0.2684, -0.6582, -0.3372, -0.5739, -1.5708,  0.2789,
          1.5708, -0.7201]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6359, -0.8396, -0.2684, -0.6582, -0.3365, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7200]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6186, -0.8390, -0.2684, -0.6582, -0.3358, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7195]], dtype=torch.float64, requires_grad=True)
Epoch 22 / 50 . Accuracy: 0.790000. Loss: 0.675062. Time: 6.509736
Validate after epoch 22 with seed 3749553
Val Accuracy: 0.760000, Val Loss: 0.708830 
Start training epoch 23 with seed 7810102 
Quantum circuit at the beginning of epoch 23
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5956, -0.8386, -0.2684, -0.6582, -0.3350, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7192]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.5894, -0.8384, -0.2684, -0.6582, -0.3348, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7190]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6007, -0.8379, -0.2684, -0.6582, -0.3350, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7187]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6187, -0.8376, -0.2684, -0.6582, -0.3352, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7184]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6182, -0.8372, -0.2684, -0.6582, -0.3350, -0.5739, -1.5708,  0.2789,
          1.5708, -0.7181]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6220, -0.8369, -0.2684, -0.6582, -0.3348, -0.5739, -1.5708,  0.2787,
          1.5708, -0.7178]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6390, -0.8363, -0.2684, -0.6582, -0.3345, -0.5739, -1.5708,  0.2787,
          1.5708, -0.7174]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6463, -0.8360, -0.2684, -0.6582, -0.3342, -0.5739, -1.5708,  0.2787,
          1.5708, -0.7172]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6453, -0.8357, -0.2684, -0.6582, -0.3342, -0.5739, -1.5708,  0.2786,
          1.5708, -0.7169]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6588, -0.8351, -0.2684, -0.6582, -0.3344, -0.5739, -1.5708,  0.2783,
          1.5708, -0.7164]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6550, -0.8346, -0.2684, -0.6582, -0.3346, -0.5739, -1.5708,  0.2779,
          1.5708, -0.7160]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6503, -0.8342, -0.2684, -0.6582, -0.3347, -0.5739, -1.5708,  0.2775,
          1.5708, -0.7157]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6476, -0.8337, -0.2684, -0.6582, -0.3345, -0.5739, -1.5708,  0.2775,
          1.5708, -0.7153]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6597, -0.8325, -0.2684, -0.6582, -0.3348, -0.5739, -1.5708,  0.2777,
          1.5708, -0.7144]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6749, -0.8315, -0.2684, -0.6582, -0.3349, -0.5739, -1.5708,  0.2780,
          1.5708, -0.7135]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6916, -0.8306, -0.2684, -0.6582, -0.3347, -0.5739, -1.5708,  0.2779,
          1.5708, -0.7128]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7183, -0.8297, -0.2684, -0.6582, -0.3340, -0.5739, -1.5708,  0.2777,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7658, -0.8292, -0.2684, -0.6582, -0.3336, -0.5739, -1.5708,  0.2771,
          1.5708, -0.7118]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7889, -0.8290, -0.2684, -0.6582, -0.3332, -0.5739, -1.5708,  0.2767,
          1.5708, -0.7116]], dtype=torch.float64, requires_grad=True)
Epoch 23 / 50 . Accuracy: 0.780000. Loss: 0.734763. Time: 6.527368
Validate after epoch 23 with seed 7810102
Val Accuracy: 0.830000, Val Loss: 0.637641 
Start training epoch 24 with seed 6635929 
Quantum circuit at the beginning of epoch 24
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8201, -0.8290, -0.2684, -0.6582, -0.3323, -0.5739, -1.5708,  0.2768,
          1.5708, -0.7116]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8257, -0.8290, -0.2684, -0.6582, -0.3316, -0.5739, -1.5708,  0.2769,
          1.5708, -0.7116]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8308, -0.8290, -0.2684, -0.6582, -0.3315, -0.5739, -1.5708,  0.2769,
          1.5708, -0.7116]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8264, -0.8290, -0.2684, -0.6582, -0.3314, -0.5739, -1.5708,  0.2770,
          1.5708, -0.7116]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8102, -0.8294, -0.2684, -0.6582, -0.3312, -0.5739, -1.5708,  0.2771,
          1.5708, -0.7119]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7911, -0.8294, -0.2684, -0.6582, -0.3307, -0.5739, -1.5708,  0.2772,
          1.5708, -0.7119]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7793, -0.8293, -0.2684, -0.6582, -0.3303, -0.5739, -1.5708,  0.2771,
          1.5708, -0.7118]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7723, -0.8296, -0.2684, -0.6582, -0.3308, -0.5739, -1.5708,  0.2768,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7785, -0.8299, -0.2684, -0.6582, -0.3314, -0.5739, -1.5708,  0.2766,
          1.5708, -0.7123]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7829, -0.8301, -0.2684, -0.6582, -0.3318, -0.5739, -1.5708,  0.2765,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7794, -0.8303, -0.2684, -0.6582, -0.3321, -0.5739, -1.5708,  0.2765,
          1.5708, -0.7126]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7687, -0.8305, -0.2684, -0.6582, -0.3320, -0.5739, -1.5708,  0.2769,
          1.5708, -0.7128]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7444, -0.8306, -0.2684, -0.6582, -0.3324, -0.5739, -1.5708,  0.2773,
          1.5708, -0.7128]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7315, -0.8309, -0.2684, -0.6582, -0.3330, -0.5739, -1.5708,  0.2773,
          1.5708, -0.7131]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7497, -0.8310, -0.2684, -0.6582, -0.3335, -0.5739, -1.5708,  0.2774,
          1.5708, -0.7132]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7574, -0.8310, -0.2684, -0.6582, -0.3336, -0.5739, -1.5708,  0.2775,
          1.5708, -0.7132]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7589, -0.8309, -0.2684, -0.6582, -0.3337, -0.5739, -1.5708,  0.2778,
          1.5708, -0.7131]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7639, -0.8309, -0.2684, -0.6582, -0.3339, -0.5739, -1.5708,  0.2783,
          1.5708, -0.7131]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7783, -0.8310, -0.2684, -0.6582, -0.3336, -0.5739, -1.5708,  0.2787,
          1.5708, -0.7132]], dtype=torch.float64, requires_grad=True)
Epoch 24 / 50 . Accuracy: 0.795000. Loss: 0.652546. Time: 6.525119
Validate after epoch 24 with seed 6635929
Val Accuracy: 0.840000, Val Loss: 0.710590 
Start training epoch 25 with seed 5948798 
Quantum circuit at the beginning of epoch 25
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7917, -0.8311, -0.2684, -0.6582, -0.3339, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7133]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8002, -0.8311, -0.2684, -0.6582, -0.3342, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7133]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8089, -0.8305, -0.2684, -0.6582, -0.3344, -0.5739, -1.5708,  0.2794,
          1.5708, -0.7128]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8020, -0.8301, -0.2684, -0.6582, -0.3345, -0.5739, -1.5708,  0.2796,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7930, -0.8298, -0.2684, -0.6582, -0.3343, -0.5739, -1.5708,  0.2795,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7824, -0.8296, -0.2684, -0.6582, -0.3338, -0.5739, -1.5708,  0.2794,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7788, -0.8296, -0.2684, -0.6582, -0.3334, -0.5739, -1.5708,  0.2794,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7739, -0.8297, -0.2684, -0.6582, -0.3333, -0.5739, -1.5708,  0.2793,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7641, -0.8298, -0.2684, -0.6582, -0.3334, -0.5739, -1.5708,  0.2791,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7483, -0.8299, -0.2684, -0.6582, -0.3333, -0.5739, -1.5708,  0.2789,
          1.5708, -0.7123]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7241, -0.8301, -0.2684, -0.6582, -0.3330, -0.5739, -1.5708,  0.2788,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7239, -0.8301, -0.2684, -0.6582, -0.3323, -0.5739, -1.5708,  0.2786,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7325, -0.8299, -0.2684, -0.6582, -0.3315, -0.5739, -1.5708,  0.2784,
          1.5708, -0.7123]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7517, -0.8295, -0.2684, -0.6582, -0.3310, -0.5739, -1.5708,  0.2778,
          1.5708, -0.7120]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7488, -0.8287, -0.2684, -0.6582, -0.3300, -0.5739, -1.5708,  0.2778,
          1.5708, -0.7114]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7373, -0.8280, -0.2684, -0.6582, -0.3291, -0.5739, -1.5708,  0.2778,
          1.5708, -0.7108]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7325, -0.8276, -0.2684, -0.6582, -0.3286, -0.5739, -1.5708,  0.2778,
          1.5708, -0.7105]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7367, -0.8277, -0.2684, -0.6582, -0.3282, -0.5739, -1.5708,  0.2781,
          1.5708, -0.7106]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7363, -0.8277, -0.2684, -0.6582, -0.3281, -0.5739, -1.5708,  0.2787,
          1.5708, -0.7106]], dtype=torch.float64, requires_grad=True)
Epoch 25 / 50 . Accuracy: 0.800000. Loss: 0.675348. Time: 6.527890
Validate after epoch 25 with seed 5948798
Val Accuracy: 0.770000, Val Loss: 0.714712 
Start training epoch 26 with seed 9650829 
Quantum circuit at the beginning of epoch 26
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7199, -0.8283, -0.2684, -0.6582, -0.3282, -0.5739, -1.5708,  0.2790,
          1.5708, -0.7110]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7127, -0.8288, -0.2684, -0.6582, -0.3281, -0.5739, -1.5708,  0.2791,
          1.5708, -0.7114]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6900, -0.8285, -0.2684, -0.6582, -0.3279, -0.5739, -1.5708,  0.2791,
          1.5708, -0.7112]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6712, -0.8282, -0.2684, -0.6582, -0.3278, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7110]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6654, -0.8277, -0.2684, -0.6582, -0.3276, -0.5739, -1.5708,  0.2793,
          1.5708, -0.7106]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6643, -0.8275, -0.2684, -0.6582, -0.3274, -0.5739, -1.5708,  0.2794,
          1.5708, -0.7104]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6725, -0.8270, -0.2684, -0.6582, -0.3267, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7100]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6914, -0.8261, -0.2684, -0.6582, -0.3258, -0.5739, -1.5708,  0.2793,
          1.5708, -0.7093]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6995, -0.8256, -0.2684, -0.6582, -0.3254, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7089]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7055, -0.8253, -0.2684, -0.6582, -0.3252, -0.5739, -1.5708,  0.2792,
          1.5708, -0.7086]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7212, -0.8253, -0.2684, -0.6582, -0.3250, -0.5739, -1.5708,  0.2793,
          1.5708, -0.7086]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7444, -0.8255, -0.2684, -0.6582, -0.3253, -0.5739, -1.5708,  0.2795,
          1.5708, -0.7088]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7544, -0.8257, -0.2684, -0.6582, -0.3258, -0.5739, -1.5708,  0.2796,
          1.5708, -0.7089]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7578, -0.8257, -0.2684, -0.6582, -0.3259, -0.5739, -1.5708,  0.2799,
          1.5708, -0.7090]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7607, -0.8254, -0.2684, -0.6582, -0.3258, -0.5739, -1.5708,  0.2801,
          1.5708, -0.7088]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7728, -0.8250, -0.2684, -0.6582, -0.3254, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7084]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7660, -0.8248, -0.2684, -0.6582, -0.3250, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7082]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7759, -0.8246, -0.2684, -0.6582, -0.3241, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7869, -0.8246, -0.2684, -0.6582, -0.3234, -0.5739, -1.5708,  0.2802,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Epoch 26 / 50 . Accuracy: 0.800000. Loss: 0.632462. Time: 6.529166
Validate after epoch 26 with seed 9650829
Val Accuracy: 0.830000, Val Loss: 0.565471 
Start training epoch 27 with seed 8032092 
Quantum circuit at the beginning of epoch 27
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8081, -0.8248, -0.2684, -0.6582, -0.3236, -0.5739, -1.5708,  0.2802,
          1.5708, -0.7083]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8058, -0.8245, -0.2684, -0.6582, -0.3237, -0.5739, -1.5708,  0.2801,
          1.5708, -0.7080]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7969, -0.8242, -0.2684, -0.6582, -0.3243, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7078]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8030, -0.8242, -0.2684, -0.6582, -0.3251, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7078]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8041, -0.8243, -0.2684, -0.6582, -0.3254, -0.5739, -1.5708,  0.2804,
          1.5708, -0.7078]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8090, -0.8241, -0.2684, -0.6582, -0.3254, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7077]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8066, -0.8238, -0.2684, -0.6582, -0.3252, -0.5739, -1.5708,  0.2806,
          1.5708, -0.7074]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8001, -0.8234, -0.2684, -0.6582, -0.3254, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7072]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8013, -0.8231, -0.2684, -0.6582, -0.3251, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7069]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8023, -0.8230, -0.2684, -0.6582, -0.3248, -0.5739, -1.5708,  0.2799,
          1.5708, -0.7068]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7775, -0.8229, -0.2684, -0.6582, -0.3243, -0.5739, -1.5708,  0.2798,
          1.5708, -0.7067]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7470, -0.8227, -0.2684, -0.6582, -0.3241, -0.5739, -1.5708,  0.2801,
          1.5708, -0.7066]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7247, -0.8229, -0.2684, -0.6582, -0.3239, -0.5739, -1.5708,  0.2804,
          1.5708, -0.7068]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6895, -0.8229, -0.2684, -0.6582, -0.3236, -0.5739, -1.5708,  0.2808,
          1.5708, -0.7068]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6629, -0.8225, -0.2684, -0.6582, -0.3234, -0.5739, -1.5708,  0.2807,
          1.5708, -0.7064]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6422, -0.8220, -0.2684, -0.6582, -0.3236, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7060]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6277, -0.8220, -0.2684, -0.6582, -0.3237, -0.5739, -1.5708,  0.2804,
          1.5708, -0.7060]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6247, -0.8221, -0.2684, -0.6582, -0.3232, -0.5739, -1.5708,  0.2804,
          1.5708, -0.7061]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6252, -0.8225, -0.2684, -0.6582, -0.3232, -0.5739, -1.5708,  0.2806,
          1.5708, -0.7064]], dtype=torch.float64, requires_grad=True)
Epoch 27 / 50 . Accuracy: 0.820000. Loss: 0.632545. Time: 6.515618
Validate after epoch 27 with seed 8032092
Val Accuracy: 0.840000, Val Loss: 0.639664 
Start training epoch 28 with seed 9700694 
Quantum circuit at the beginning of epoch 28
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6343, -0.8236, -0.2684, -0.6582, -0.3238, -0.5739, -1.5708,  0.2810,
          1.5708, -0.7073]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6419, -0.8239, -0.2684, -0.6582, -0.3238, -0.5739, -1.5708,  0.2812,
          1.5708, -0.7075]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6569, -0.8242, -0.2684, -0.6582, -0.3233, -0.5739, -1.5708,  0.2813,
          1.5708, -0.7078]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6651, -0.8245, -0.2684, -0.6582, -0.3232, -0.5739, -1.5708,  0.2815,
          1.5708, -0.7080]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6815, -0.8242, -0.2684, -0.6582, -0.3229, -0.5739, -1.5708,  0.2814,
          1.5708, -0.7077]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6886, -0.8238, -0.2684, -0.6582, -0.3226, -0.5739, -1.5708,  0.2815,
          1.5708, -0.7075]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6885, -0.8236, -0.2684, -0.6582, -0.3225, -0.5739, -1.5708,  0.2815,
          1.5708, -0.7073]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6852, -0.8237, -0.2684, -0.6582, -0.3226, -0.5739, -1.5708,  0.2816,
          1.5708, -0.7074]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7015, -0.8239, -0.2684, -0.6582, -0.3229, -0.5739, -1.5708,  0.2818,
          1.5708, -0.7076]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7126, -0.8239, -0.2684, -0.6582, -0.3231, -0.5739, -1.5708,  0.2821,
          1.5708, -0.7075]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7215, -0.8242, -0.2684, -0.6582, -0.3233, -0.5739, -1.5708,  0.2824,
          1.5708, -0.7077]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7349, -0.8246, -0.2684, -0.6582, -0.3237, -0.5739, -1.5708,  0.2826,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7428, -0.8246, -0.2684, -0.6582, -0.3239, -0.5739, -1.5708,  0.2828,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7557, -0.8246, -0.2684, -0.6582, -0.3242, -0.5739, -1.5708,  0.2828,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7644, -0.8246, -0.2684, -0.6582, -0.3246, -0.5739, -1.5708,  0.2826,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7570, -0.8248, -0.2684, -0.6582, -0.3251, -0.5739, -1.5708,  0.2824,
          1.5708, -0.7082]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7458, -0.8246, -0.2684, -0.6582, -0.3253, -0.5739, -1.5708,  0.2824,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7348, -0.8250, -0.2684, -0.6582, -0.3253, -0.5739, -1.5708,  0.2826,
          1.5708, -0.7084]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7428, -0.8253, -0.2684, -0.6582, -0.3256, -0.5739, -1.5708,  0.2825,
          1.5708, -0.7087]], dtype=torch.float64, requires_grad=True)
Epoch 28 / 50 . Accuracy: 0.805000. Loss: 0.623343. Time: 6.530920
Validate after epoch 28 with seed 9700694
Val Accuracy: 0.760000, Val Loss: 0.685946 
Start training epoch 29 with seed 1833630 
Quantum circuit at the beginning of epoch 29
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7687, -0.8260, -0.2684, -0.6582, -0.3258, -0.5739, -1.5708,  0.2823,
          1.5708, -0.7092]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7675, -0.8264, -0.2684, -0.6582, -0.3258, -0.5739, -1.5708,  0.2823,
          1.5708, -0.7095]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7656, -0.8264, -0.2684, -0.6582, -0.3256, -0.5739, -1.5708,  0.2822,
          1.5708, -0.7095]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7733, -0.8262, -0.2684, -0.6582, -0.3250, -0.5739, -1.5708,  0.2824,
          1.5708, -0.7094]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7724, -0.8261, -0.2684, -0.6582, -0.3246, -0.5739, -1.5708,  0.2826,
          1.5708, -0.7093]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7712, -0.8262, -0.2684, -0.6582, -0.3244, -0.5739, -1.5708,  0.2827,
          1.5708, -0.7093]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7574, -0.8264, -0.2684, -0.6582, -0.3243, -0.5739, -1.5708,  0.2825,
          1.5708, -0.7095]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7359, -0.8264, -0.2684, -0.6582, -0.3247, -0.5739, -1.5708,  0.2825,
          1.5708, -0.7095]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7172, -0.8270, -0.2684, -0.6582, -0.3246, -0.5739, -1.5708,  0.2828,
          1.5708, -0.7100]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7070, -0.8275, -0.2684, -0.6582, -0.3243, -0.5739, -1.5708,  0.2831,
          1.5708, -0.7104]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6907, -0.8279, -0.2684, -0.6582, -0.3243, -0.5739, -1.5708,  0.2833,
          1.5708, -0.7108]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6719, -0.8283, -0.2684, -0.6582, -0.3242, -0.5739, -1.5708,  0.2832,
          1.5708, -0.7110]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6560, -0.8278, -0.2684, -0.6582, -0.3237, -0.5739, -1.5708,  0.2832,
          1.5708, -0.7106]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6370, -0.8271, -0.2684, -0.6582, -0.3231, -0.5739, -1.5708,  0.2832,
          1.5708, -0.7101]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6319, -0.8267, -0.2684, -0.6582, -0.3228, -0.5739, -1.5708,  0.2832,
          1.5708, -0.7098]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6256, -0.8269, -0.2684, -0.6582, -0.3229, -0.5739, -1.5708,  0.2832,
          1.5708, -0.7099]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6224, -0.8274, -0.2684, -0.6582, -0.3231, -0.5739, -1.5708,  0.2831,
          1.5708, -0.7103]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6261, -0.8283, -0.2684, -0.6582, -0.3237, -0.5739, -1.5708,  0.2830,
          1.5708, -0.7111]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6297, -0.8291, -0.2684, -0.6582, -0.3240, -0.5739, -1.5708,  0.2829,
          1.5708, -0.7117]], dtype=torch.float64, requires_grad=True)
Epoch 29 / 50 . Accuracy: 0.810000. Loss: 0.609201. Time: 6.530168
Validate after epoch 29 with seed 1833630
Val Accuracy: 0.790000, Val Loss: 0.669666 
Start training epoch 30 with seed 8003673 
Quantum circuit at the beginning of epoch 30
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6381, -0.8300, -0.2684, -0.6582, -0.3236, -0.5739, -1.5708,  0.2829,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6508, -0.8303, -0.2684, -0.6582, -0.3234, -0.5739, -1.5708,  0.2828,
          1.5708, -0.7126]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6601, -0.8305, -0.2684, -0.6582, -0.3231, -0.5739, -1.5708,  0.2825,
          1.5708, -0.7128]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6530, -0.8303, -0.2684, -0.6582, -0.3228, -0.5739, -1.5708,  0.2823,
          1.5708, -0.7127]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6579, -0.8302, -0.2684, -0.6582, -0.3225, -0.5739, -1.5708,  0.2820,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6608, -0.8303, -0.2684, -0.6582, -0.3222, -0.5739, -1.5708,  0.2816,
          1.5708, -0.7126]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6670, -0.8306, -0.2684, -0.6582, -0.3222, -0.5739, -1.5708,  0.2814,
          1.5708, -0.7129]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6823, -0.8308, -0.2684, -0.6582, -0.3215, -0.5739, -1.5708,  0.2813,
          1.5708, -0.7130]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7015, -0.8309, -0.2684, -0.6582, -0.3210, -0.5739, -1.5708,  0.2811,
          1.5708, -0.7131]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7078, -0.8307, -0.2684, -0.6582, -0.3206, -0.5739, -1.5708,  0.2809,
          1.5708, -0.7129]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7114, -0.8304, -0.2684, -0.6582, -0.3204, -0.5739, -1.5708,  0.2808,
          1.5708, -0.7127]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7121, -0.8303, -0.2684, -0.6582, -0.3204, -0.5739, -1.5708,  0.2807,
          1.5708, -0.7127]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7047, -0.8300, -0.2684, -0.6582, -0.3202, -0.5739, -1.5708,  0.2805,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6877, -0.8300, -0.2684, -0.6582, -0.3206, -0.5739, -1.5708,  0.2803,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6770, -0.8300, -0.2684, -0.6582, -0.3211, -0.5739, -1.5708,  0.2801,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6578, -0.8296, -0.2684, -0.6582, -0.3216, -0.5739, -1.5708,  0.2801,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6256, -0.8296, -0.2684, -0.6582, -0.3222, -0.5739, -1.5708,  0.2798,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6057, -0.8297, -0.2684, -0.6582, -0.3225, -0.5739, -1.5708,  0.2795,
          1.5708, -0.7121]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6040, -0.8298, -0.2684, -0.6582, -0.3228, -0.5739, -1.5708,  0.2791,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Epoch 30 / 50 . Accuracy: 0.785000. Loss: 0.699797. Time: 6.521384
Validate after epoch 30 with seed 8003673
Val Accuracy: 0.800000, Val Loss: 0.669461 
Start training epoch 31 with seed 1804940 
Quantum circuit at the beginning of epoch 31
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6112, -0.8303, -0.2684, -0.6582, -0.3229, -0.5739, -1.5708,  0.2788,
          1.5708, -0.7127]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6230, -0.8304, -0.2684, -0.6582, -0.3228, -0.5739, -1.5708,  0.2786,
          1.5708, -0.7127]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6362, -0.8301, -0.2684, -0.6582, -0.3227, -0.5739, -1.5708,  0.2783,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6560, -0.8298, -0.2684, -0.6582, -0.3227, -0.5739, -1.5708,  0.2779,
          1.5708, -0.7122]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6651, -0.8294, -0.2684, -0.6582, -0.3227, -0.5739, -1.5708,  0.2777,
          1.5708, -0.7119]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6745, -0.8293, -0.2684, -0.6582, -0.3227, -0.5739, -1.5708,  0.2775,
          1.5708, -0.7118]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6741, -0.8295, -0.2684, -0.6582, -0.3226, -0.5739, -1.5708,  0.2775,
          1.5708, -0.7120]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6703, -0.8299, -0.2684, -0.6582, -0.3224, -0.5739, -1.5708,  0.2777,
          1.5708, -0.7123]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6670, -0.8301, -0.2684, -0.6582, -0.3221, -0.5739, -1.5708,  0.2777,
          1.5708, -0.7125]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6760, -0.8301, -0.2684, -0.6582, -0.3217, -0.5739, -1.5708,  0.2774,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6862, -0.8300, -0.2684, -0.6582, -0.3214, -0.5739, -1.5708,  0.2771,
          1.5708, -0.7124]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7056, -0.8299, -0.2684, -0.6582, -0.3211, -0.5739, -1.5708,  0.2769,
          1.5708, -0.7123]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7200, -0.8295, -0.2684, -0.6582, -0.3207, -0.5739, -1.5708,  0.2766,
          1.5708, -0.7120]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7290, -0.8291, -0.2684, -0.6582, -0.3202, -0.5739, -1.5708,  0.2762,
          1.5708, -0.7117]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7461, -0.8285, -0.2684, -0.6582, -0.3193, -0.5739, -1.5708,  0.2757,
          1.5708, -0.7112]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7568, -0.8279, -0.2684, -0.6582, -0.3187, -0.5739, -1.5708,  0.2753,
          1.5708, -0.7107]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7663, -0.8273, -0.2684, -0.6582, -0.3179, -0.5739, -1.5708,  0.2748,
          1.5708, -0.7102]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7745, -0.8268, -0.2684, -0.6582, -0.3178, -0.5739, -1.5708,  0.2743,
          1.5708, -0.7099]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7807, -0.8264, -0.2684, -0.6582, -0.3178, -0.5739, -1.5708,  0.2740,
          1.5708, -0.7096]], dtype=torch.float64, requires_grad=True)
Epoch 31 / 50 . Accuracy: 0.830000. Loss: 0.539823. Time: 6.528304
Validate after epoch 31 with seed 1804940
Val Accuracy: 0.800000, Val Loss: 0.597550 
Start training epoch 32 with seed 2488863 
Quantum circuit at the beginning of epoch 32
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7868, -0.8256, -0.2684, -0.6582, -0.3179, -0.5739, -1.5708,  0.2735,
          1.5708, -0.7089]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7781, -0.8255, -0.2684, -0.6582, -0.3178, -0.5739, -1.5708,  0.2734,
          1.5708, -0.7088]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7605, -0.8253, -0.2684, -0.6582, -0.3175, -0.5739, -1.5708,  0.2734,
          1.5708, -0.7087]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7446, -0.8252, -0.2684, -0.6582, -0.3172, -0.5739, -1.5708,  0.2732,
          1.5708, -0.7086]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7276, -0.8247, -0.2684, -0.6582, -0.3167, -0.5739, -1.5708,  0.2732,
          1.5708, -0.7082]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7247, -0.8245, -0.2684, -0.6582, -0.3163, -0.5739, -1.5708,  0.2730,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7340, -0.8246, -0.2684, -0.6582, -0.3159, -0.5739, -1.5708,  0.2726,
          1.5708, -0.7081]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7509, -0.8242, -0.2684, -0.6582, -0.3158, -0.5739, -1.5708,  0.2727,
          1.5708, -0.7078]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7615, -0.8238, -0.2684, -0.6582, -0.3160, -0.5739, -1.5708,  0.2727,
          1.5708, -0.7075]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7679, -0.8236, -0.2684, -0.6582, -0.3163, -0.5739, -1.5708,  0.2724,
          1.5708, -0.7073]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7786, -0.8230, -0.2684, -0.6582, -0.3166, -0.5739, -1.5708,  0.2721,
          1.5708, -0.7069]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7840, -0.8221, -0.2684, -0.6582, -0.3165, -0.5739, -1.5708,  0.2719,
          1.5708, -0.7061]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8059, -0.8216, -0.2684, -0.6582, -0.3161, -0.5739, -1.5708,  0.2718,
          1.5708, -0.7057]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8168, -0.8212, -0.2684, -0.6582, -0.3157, -0.5739, -1.5708,  0.2717,
          1.5708, -0.7054]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8181, -0.8210, -0.2684, -0.6582, -0.3152, -0.5739, -1.5708,  0.2717,
          1.5708, -0.7052]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8259, -0.8205, -0.2684, -0.6582, -0.3145, -0.5739, -1.5708,  0.2716,
          1.5708, -0.7048]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8305, -0.8202, -0.2684, -0.6582, -0.3138, -0.5739, -1.5708,  0.2713,
          1.5708, -0.7046]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8344, -0.8201, -0.2684, -0.6582, -0.3135, -0.5739, -1.5708,  0.2710,
          1.5708, -0.7045]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8369, -0.8200, -0.2684, -0.6582, -0.3133, -0.5739, -1.5709,  0.2705,
          1.5708, -0.7044]], dtype=torch.float64, requires_grad=True)
Epoch 32 / 50 . Accuracy: 0.795000. Loss: 0.659798. Time: 6.508432
Validate after epoch 32 with seed 2488863
Val Accuracy: 0.830000, Val Loss: 0.594015 
Start training epoch 33 with seed 9993017 
Quantum circuit at the beginning of epoch 33
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8489, -0.8196, -0.2684, -0.6582, -0.3139, -0.5739, -1.5712,  0.2699,
          1.5708, -0.7041]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8436, -0.8193, -0.2684, -0.6582, -0.3141, -0.5739, -1.5717,  0.2698,
          1.5708, -0.7038]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8428, -0.8185, -0.2684, -0.6582, -0.3140, -0.5739, -1.5718,  0.2700,
          1.5708, -0.7033]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8392, -0.8176, -0.2684, -0.6582, -0.3140, -0.5739, -1.5707,  0.2703,
          1.5708, -0.7026]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8449, -0.8170, -0.2684, -0.6582, -0.3140, -0.5739, -1.5684,  0.2707,
          1.5708, -0.7021]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8544, -0.8169, -0.2684, -0.6582, -0.3140, -0.5739, -1.5683,  0.2711,
          1.5708, -0.7020]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8564, -0.8171, -0.2684, -0.6582, -0.3141, -0.5739, -1.5685,  0.2712,
          1.5708, -0.7022]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8482, -0.8176, -0.2684, -0.6582, -0.3143, -0.5739, -1.5682,  0.2715,
          1.5708, -0.7025]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8375, -0.8178, -0.2684, -0.6582, -0.3143, -0.5739, -1.5664,  0.2717,
          1.5708, -0.7027]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8291, -0.8185, -0.2684, -0.6582, -0.3142, -0.5739, -1.5646,  0.2716,
          1.5708, -0.7032]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8199, -0.8190, -0.2684, -0.6582, -0.3146, -0.5739, -1.5632,  0.2713,
          1.5708, -0.7036]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8115, -0.8188, -0.2684, -0.6582, -0.3146, -0.5739, -1.5693,  0.2710,
          1.5708, -0.7035]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8187, -0.8184, -0.2684, -0.6582, -0.3146, -0.5739, -1.5772,  0.2704,
          1.5708, -0.7031]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8186, -0.8186, -0.2684, -0.6582, -0.3147, -0.5739, -1.5978,  0.2698,
          1.5708, -0.7033]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8196, -0.8189, -0.2684, -0.6582, -0.3146, -0.5739, -1.6156,  0.2692,
          1.5708, -0.7035]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8159, -0.8190, -0.2684, -0.6582, -0.3146, -0.5739, -1.6189,  0.2688,
          1.5708, -0.7037]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8014, -0.8192, -0.2684, -0.6582, -0.3147, -0.5739, -1.5983,  0.2685,
          1.5708, -0.7038]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7781, -0.8199, -0.2684, -0.6582, -0.3148, -0.5739, -1.6542,  0.2685,
          1.5708, -0.7043]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7596, -0.8201, -0.2684, -0.6582, -0.3143, -0.5739, -1.5896,  0.2684,
          1.5708, -0.7045]], dtype=torch.float64, requires_grad=True)
Epoch 33 / 50 . Accuracy: 0.810000. Loss: 0.562820. Time: 6.493826
Validate after epoch 33 with seed 9993017
Val Accuracy: 0.810000, Val Loss: 0.678557 
Start training epoch 34 with seed 6096676 
Quantum circuit at the beginning of epoch 34
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7455, -0.8202, -0.2684, -0.6582, -0.3140, -0.5739, -1.5160,  0.2683,
          1.5708, -0.7046]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7483, -0.8210, -0.2684, -0.6582, -0.3143, -0.5739, -1.5387,  0.2679,
          1.5708, -0.7053]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7398, -0.8210, -0.2684, -0.6582, -0.3144, -0.5739, -1.5491,  0.2675,
          1.5708, -0.7052]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7406, -0.8209, -0.2684, -0.6582, -0.3146, -0.5739, -1.5607,  0.2671,
          1.5708, -0.7051]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7352, -0.8205, -0.2684, -0.6582, -0.3143, -0.5739, -1.5719,  0.2667,
          1.5708, -0.7048]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7257, -0.8199, -0.2684, -0.6582, -0.3136, -0.5739, -1.5773,  0.2661,
          1.5708, -0.7044]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7208, -0.8195, -0.2684, -0.6582, -0.3129, -0.5739, -1.5780,  0.2657,
          1.5708, -0.7040]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7216, -0.8193, -0.2684, -0.6582, -0.3124, -0.5739, -1.5764,  0.2657,
          1.5708, -0.7039]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7391, -0.8193, -0.2684, -0.6582, -0.3123, -0.5739, -1.5683,  0.2656,
          1.5708, -0.7038]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7451, -0.8194, -0.2684, -0.6582, -0.3127, -0.5739, -1.5646,  0.2656,
          1.5708, -0.7040]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7334, -0.8198, -0.2684, -0.6582, -0.3129, -0.5739, -1.5626,  0.2658,
          1.5708, -0.7042]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7284, -0.8200, -0.2684, -0.6582, -0.3128, -0.5739, -1.5673,  0.2660,
          1.5708, -0.7045]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7395, -0.8201, -0.2684, -0.6582, -0.3126, -0.5739, -1.5731,  0.2659,
          1.5708, -0.7045]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7511, -0.8202, -0.2684, -0.6582, -0.3126, -0.5739, -1.5737,  0.2653,
          1.5708, -0.7046]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7590, -0.8203, -0.2684, -0.6582, -0.3126, -0.5739, -1.5728,  0.2648,
          1.5708, -0.7046]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7569, -0.8207, -0.2684, -0.6582, -0.3133, -0.5739, -1.5723,  0.2639,
          1.5708, -0.7050]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7520, -0.8206, -0.2684, -0.6582, -0.3136, -0.5739, -1.5722,  0.2632,
          1.5708, -0.7049]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7453, -0.8201, -0.2684, -0.6582, -0.3142, -0.5739, -1.5714,  0.2623,
          1.5708, -0.7046]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7366, -0.8195, -0.2684, -0.6582, -0.3146, -0.5739, -1.5704,  0.2616,
          1.5708, -0.7040]], dtype=torch.float64, requires_grad=True)
Epoch 34 / 50 . Accuracy: 0.830000. Loss: 0.583406. Time: 6.495515
Validate after epoch 34 with seed 6096676
Val Accuracy: 0.830000, Val Loss: 0.594134 
Start training epoch 35 with seed 8416786 
Quantum circuit at the beginning of epoch 35
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7097, -0.8185, -0.2684, -0.6582, -0.3147, -0.5739, -1.5663,  0.2612,
          1.5708, -0.7033]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6810, -0.8180, -0.2684, -0.6582, -0.3143, -0.5739, -1.5599,  0.2610,
          1.5708, -0.7028]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6676, -0.8171, -0.2684, -0.6582, -0.3140, -0.5739, -1.5652,  0.2607,
          1.5708, -0.7021]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6574, -0.8165, -0.2684, -0.6582, -0.3140, -0.5739, -1.5689,  0.2604,
          1.5708, -0.7017]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6593, -0.8157, -0.2684, -0.6582, -0.3138, -0.5739, -1.5728,  0.2602,
          1.5708, -0.7010]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6585, -0.8150, -0.2684, -0.6582, -0.3137, -0.5739, -1.5751,  0.2600,
          1.5708, -0.7004]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6544, -0.8149, -0.2684, -0.6582, -0.3137, -0.5739, -1.5748,  0.2600,
          1.5708, -0.7003]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6544, -0.8149, -0.2684, -0.6582, -0.3138, -0.5739, -1.5741,  0.2600,
          1.5708, -0.7004]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6770, -0.8154, -0.2684, -0.6582, -0.3143, -0.5739, -1.5669,  0.2601,
          1.5708, -0.7008]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6851, -0.8158, -0.2684, -0.6582, -0.3145, -0.5739, -1.5581,  0.2603,
          1.5708, -0.7011]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6800, -0.8156, -0.2684, -0.6582, -0.3146, -0.5739, -1.5377,  0.2602,
          1.5708, -0.7010]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6818, -0.8158, -0.2684, -0.6582, -0.3147, -0.5739, -1.5256,  0.2602,
          1.5708, -0.7011]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6729, -0.8165, -0.2684, -0.6582, -0.3149, -0.5739, -1.5213,  0.2602,
          1.5708, -0.7016]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6652, -0.8172, -0.2684, -0.6582, -0.3155, -0.5739, -1.5326,  0.2601,
          1.5708, -0.7022]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6548, -0.8176, -0.2684, -0.6582, -0.3159, -0.5739, -1.5367,  0.2599,
          1.5708, -0.7026]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6462, -0.8181, -0.2684, -0.6582, -0.3162, -0.5739, -1.5445,  0.2596,
          1.5708, -0.7029]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6427, -0.8181, -0.2684, -0.6582, -0.3165, -0.5739, -1.5576,  0.2596,
          1.5708, -0.7029]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6380, -0.8182, -0.2684, -0.6582, -0.3169, -0.5739, -1.5678,  0.2595,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6379, -0.8184, -0.2684, -0.6582, -0.3174, -0.5739, -1.5751,  0.2597,
          1.5708, -0.7032]], dtype=torch.float64, requires_grad=True)
Epoch 35 / 50 . Accuracy: 0.830000. Loss: 0.591141. Time: 6.500089
Validate after epoch 35 with seed 8416786
Val Accuracy: 0.850000, Val Loss: 0.522653 
Start training epoch 36 with seed 7544925 
Quantum circuit at the beginning of epoch 36
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6412, -0.8182, -0.2684, -0.6582, -0.3180, -0.5739, -1.5747,  0.2605,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6269, -0.8183, -0.2684, -0.6582, -0.3184, -0.5739, -1.5743,  0.2609,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6181, -0.8182, -0.2684, -0.6582, -0.3188, -0.5739, -1.5731,  0.2609,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6178, -0.8183, -0.2684, -0.6582, -0.3191, -0.5739, -1.5725,  0.2608,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6311, -0.8180, -0.2684, -0.6582, -0.3189, -0.5739, -1.5717,  0.2606,
          1.5708, -0.7028]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6391, -0.8185, -0.2684, -0.6582, -0.3189, -0.5739, -1.5707,  0.2602,
          1.5708, -0.7032]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6501, -0.8190, -0.2684, -0.6582, -0.3190, -0.5739, -1.5701,  0.2599,
          1.5708, -0.7036]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6631, -0.8194, -0.2684, -0.6582, -0.3191, -0.5739, -1.5698,  0.2597,
          1.5708, -0.7039]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6748, -0.8198, -0.2684, -0.6582, -0.3190, -0.5739, -1.5692,  0.2597,
          1.5708, -0.7043]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6813, -0.8197, -0.2684, -0.6582, -0.3192, -0.5739, -1.5686,  0.2598,
          1.5708, -0.7042]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6806, -0.8193, -0.2684, -0.6582, -0.3193, -0.5739, -1.5684,  0.2599,
          1.5708, -0.7039]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6755, -0.8191, -0.2684, -0.6582, -0.3190, -0.5739, -1.5670,  0.2597,
          1.5708, -0.7038]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6763, -0.8189, -0.2684, -0.6582, -0.3187, -0.5739, -1.5680,  0.2595,
          1.5708, -0.7035]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6633, -0.8185, -0.2684, -0.6582, -0.3186, -0.5739, -1.5658,  0.2594,
          1.5708, -0.7033]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6464, -0.8182, -0.2684, -0.6582, -0.3185, -0.5739, -1.5621,  0.2593,
          1.5708, -0.7030]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6439, -0.8175, -0.2684, -0.6582, -0.3183, -0.5739, -1.5589,  0.2589,
          1.5708, -0.7025]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6437, -0.8168, -0.2684, -0.6582, -0.3183, -0.5739, -1.5614,  0.2584,
          1.5708, -0.7019]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6581, -0.8164, -0.2684, -0.6582, -0.3184, -0.5739, -1.5691,  0.2582,
          1.5708, -0.7015]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6553, -0.8162, -0.2684, -0.6582, -0.3185, -0.5739, -1.5739,  0.2589,
          1.5708, -0.7014]], dtype=torch.float64, requires_grad=True)
Epoch 36 / 50 . Accuracy: 0.825000. Loss: 0.623474. Time: 6.504496
Validate after epoch 36 with seed 7544925
Val Accuracy: 0.830000, Val Loss: 0.617227 
Start training epoch 37 with seed 2300823 
Quantum circuit at the beginning of epoch 37
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6382, -0.8152, -0.2684, -0.6582, -0.3186, -0.5739, -1.5901,  0.2598,
          1.5708, -0.7006]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6420, -0.8141, -0.2684, -0.6582, -0.3185, -0.5739, -1.5815,  0.2599,
          1.5708, -0.6997]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6480, -0.8133, -0.2684, -0.6582, -0.3183, -0.5739, -1.5731,  0.2601,
          1.5708, -0.6991]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6553, -0.8125, -0.2684, -0.6582, -0.3180, -0.5739, -1.5684,  0.2602,
          1.5708, -0.6984]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6616, -0.8119, -0.2684, -0.6582, -0.3177, -0.5739, -1.5633,  0.2603,
          1.5708, -0.6980]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6643, -0.8115, -0.2684, -0.6582, -0.3173, -0.5739, -1.5615,  0.2605,
          1.5708, -0.6976]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6703, -0.8111, -0.2684, -0.6582, -0.3170, -0.5739, -1.5625,  0.2606,
          1.5708, -0.6973]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6699, -0.8110, -0.2684, -0.6582, -0.3166, -0.5739, -1.5690,  0.2603,
          1.5708, -0.6972]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6607, -0.8106, -0.2684, -0.6582, -0.3159, -0.5739, -1.5757,  0.2600,
          1.5708, -0.6969]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6710, -0.8104, -0.2684, -0.6582, -0.3155, -0.5739, -1.5748,  0.2595,
          1.5708, -0.6968]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7098, -0.8102, -0.2684, -0.6582, -0.3153, -0.5739, -1.5675,  0.2591,
          1.5708, -0.6966]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7385, -0.8098, -0.2684, -0.6582, -0.3152, -0.5739, -1.5651,  0.2587,
          1.5708, -0.6963]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7606, -0.8093, -0.2684, -0.6582, -0.3153, -0.5739, -1.5676,  0.2586,
          1.5708, -0.6959]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7846, -0.8088, -0.2684, -0.6582, -0.3160, -0.5739, -1.5738,  0.2584,
          1.5708, -0.6955]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8039, -0.8085, -0.2684, -0.6582, -0.3168, -0.5739, -1.5804,  0.2580,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8138, -0.8086, -0.2684, -0.6582, -0.3174, -0.5739, -1.5780,  0.2577,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8179, -0.8085, -0.2684, -0.6582, -0.3177, -0.5739, -1.5748,  0.2572,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8171, -0.8084, -0.2684, -0.6582, -0.3179, -0.5739, -1.5716,  0.2567,
          1.5708, -0.6951]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8120, -0.8080, -0.2684, -0.6582, -0.3181, -0.5739, -1.5698,  0.2564,
          1.5708, -0.6948]], dtype=torch.float64, requires_grad=True)
Epoch 37 / 50 . Accuracy: 0.815000. Loss: 0.582733. Time: 6.492250
Validate after epoch 37 with seed 2300823
Val Accuracy: 0.790000, Val Loss: 0.611869 
Start training epoch 38 with seed 297566 
Quantum circuit at the beginning of epoch 38
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7862, -0.8081, -0.2684, -0.6582, -0.3186, -0.5739, -1.5689,  0.2557,
          1.5708, -0.6950]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7636, -0.8084, -0.2684, -0.6582, -0.3189, -0.5739, -1.5679,  0.2553,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7477, -0.8086, -0.2684, -0.6582, -0.3191, -0.5739, -1.5684,  0.2551,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7295, -0.8085, -0.2684, -0.6582, -0.3190, -0.5739, -1.5682,  0.2550,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7223, -0.8086, -0.2684, -0.6582, -0.3188, -0.5739, -1.5690,  0.2551,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7199, -0.8088, -0.2684, -0.6582, -0.3186, -0.5739, -1.5699,  0.2552,
          1.5708, -0.6955]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7067, -0.8088, -0.2684, -0.6582, -0.3182, -0.5739, -1.5702,  0.2552,
          1.5708, -0.6955]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6987, -0.8085, -0.2684, -0.6582, -0.3178, -0.5739, -1.5705,  0.2552,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6889, -0.8081, -0.2684, -0.6582, -0.3177, -0.5739, -1.5708,  0.2550,
          1.5708, -0.6949]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6828, -0.8077, -0.2684, -0.6582, -0.3174, -0.5739, -1.5709,  0.2549,
          1.5708, -0.6946]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6852, -0.8070, -0.2684, -0.6582, -0.3177, -0.5739, -1.5709,  0.2546,
          1.5708, -0.6940]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6920, -0.8066, -0.2684, -0.6582, -0.3179, -0.5739, -1.5708,  0.2544,
          1.5708, -0.6937]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6897, -0.8069, -0.2684, -0.6582, -0.3180, -0.5739, -1.5707,  0.2543,
          1.5708, -0.6940]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6884, -0.8072, -0.2684, -0.6582, -0.3181, -0.5739, -1.5707,  0.2541,
          1.5708, -0.6942]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6980, -0.8071, -0.2684, -0.6582, -0.3182, -0.5739, -1.5707,  0.2539,
          1.5708, -0.6941]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7061, -0.8071, -0.2684, -0.6582, -0.3181, -0.5739, -1.5706,  0.2538,
          1.5708, -0.6942]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7106, -0.8072, -0.2684, -0.6582, -0.3180, -0.5739, -1.5706,  0.2537,
          1.5708, -0.6942]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7173, -0.8073, -0.2684, -0.6582, -0.3178, -0.5739, -1.5707,  0.2536,
          1.5708, -0.6943]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7319, -0.8076, -0.2684, -0.6582, -0.3180, -0.5739, -1.5709,  0.2534,
          1.5708, -0.6945]], dtype=torch.float64, requires_grad=True)
Epoch 38 / 50 . Accuracy: 0.865000. Loss: 0.429900. Time: 6.503395
Validate after epoch 38 with seed 297566
Val Accuracy: 0.760000, Val Loss: 0.655296 
Start training epoch 39 with seed 9087736 
Quantum circuit at the beginning of epoch 39
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7580, -0.8080, -0.2684, -0.6582, -0.3179, -0.5739, -1.5710,  0.2535,
          1.5708, -0.6948]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7537, -0.8076, -0.2684, -0.6582, -0.3178, -0.5739, -1.5712,  0.2536,
          1.5708, -0.6946]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7488, -0.8075, -0.2684, -0.6582, -0.3176, -0.5739, -1.5716,  0.2538,
          1.5708, -0.6945]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7494, -0.8070, -0.2684, -0.6582, -0.3172, -0.5739, -1.5713,  0.2537,
          1.5708, -0.6941]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7467, -0.8071, -0.2684, -0.6582, -0.3172, -0.5739, -1.5710,  0.2537,
          1.5708, -0.6941]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7499, -0.8075, -0.2684, -0.6582, -0.3176, -0.5739, -1.5707,  0.2540,
          1.5708, -0.6945]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7542, -0.8074, -0.2684, -0.6582, -0.3181, -0.5739, -1.5706,  0.2541,
          1.5708, -0.6944]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7587, -0.8074, -0.2684, -0.6582, -0.3185, -0.5739, -1.5705,  0.2541,
          1.5708, -0.6944]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7667, -0.8078, -0.2684, -0.6582, -0.3189, -0.5739, -1.5707,  0.2540,
          1.5708, -0.6947]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7749, -0.8085, -0.2684, -0.6582, -0.3194, -0.5739, -1.5710,  0.2539,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7837, -0.8086, -0.2684, -0.6582, -0.3193, -0.5739, -1.5712,  0.2541,
          1.5708, -0.6953]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7890, -0.8084, -0.2684, -0.6582, -0.3189, -0.5739, -1.5714,  0.2541,
          1.5708, -0.6951]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7968, -0.8084, -0.2684, -0.6582, -0.3183, -0.5739, -1.5721,  0.2538,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8076, -0.8084, -0.2684, -0.6582, -0.3178, -0.5739, -1.5728,  0.2535,
          1.5708, -0.6951]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8180, -0.8084, -0.2684, -0.6582, -0.3174, -0.5739, -1.5741,  0.2535,
          1.5708, -0.6952]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8182, -0.8081, -0.2684, -0.6582, -0.3171, -0.5739, -1.5736,  0.2535,
          1.5708, -0.6949]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8233, -0.8074, -0.2684, -0.6582, -0.3166, -0.5739, -1.5737,  0.2532,
          1.5708, -0.6944]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8235, -0.8070, -0.2684, -0.6582, -0.3160, -0.5739, -1.5722,  0.2529,
          1.5708, -0.6940]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8213, -0.8066, -0.2684, -0.6582, -0.3156, -0.5739, -1.5711,  0.2526,
          1.5708, -0.6938]], dtype=torch.float64, requires_grad=True)
Epoch 39 / 50 . Accuracy: 0.805000. Loss: 0.629162. Time: 6.502010
Validate after epoch 39 with seed 9087736
Val Accuracy: 0.870000, Val Loss: 0.431340 
Start training epoch 40 with seed 4529545 
Quantum circuit at the beginning of epoch 40
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8366, -0.8062, -0.2684, -0.6582, -0.3152, -0.5739, -1.5704,  0.2517,
          1.5708, -0.6934]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8527, -0.8058, -0.2684, -0.6582, -0.3149, -0.5739, -1.5704,  0.2512,
          1.5708, -0.6931]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8548, -0.8052, -0.2684, -0.6582, -0.3144, -0.5739, -1.5707,  0.2509,
          1.5708, -0.6926]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8500, -0.8046, -0.2684, -0.6582, -0.3138, -0.5739, -1.5709,  0.2506,
          1.5708, -0.6921]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8575, -0.8042, -0.2684, -0.6582, -0.3133, -0.5739, -1.5710,  0.2498,
          1.5708, -0.6918]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8660, -0.8043, -0.2684, -0.6582, -0.3130, -0.5739, -1.5709,  0.2491,
          1.5708, -0.6919]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8660, -0.8042, -0.2684, -0.6582, -0.3130, -0.5739, -1.5709,  0.2488,
          1.5708, -0.6918]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8630, -0.8043, -0.2684, -0.6582, -0.3132, -0.5739, -1.5708,  0.2486,
          1.5708, -0.6919]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8594, -0.8043, -0.2684, -0.6582, -0.3133, -0.5739, -1.5707,  0.2484,
          1.5708, -0.6918]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8747, -0.8047, -0.2684, -0.6582, -0.3137, -0.5739, -1.5708,  0.2481,
          1.5708, -0.6922]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8758, -0.8053, -0.2684, -0.6582, -0.3140, -0.5739, -1.5708,  0.2479,
          1.5708, -0.6927]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8534, -0.8061, -0.2684, -0.6582, -0.3142, -0.5739, -1.5709,  0.2476,
          1.5708, -0.6933]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8265, -0.8063, -0.2684, -0.6582, -0.3143, -0.5739, -1.5709,  0.2475,
          1.5708, -0.6935]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8083, -0.8062, -0.2684, -0.6582, -0.3141, -0.5739, -1.5709,  0.2473,
          1.5708, -0.6934]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8068, -0.8060, -0.2684, -0.6582, -0.3134, -0.5739, -1.5708,  0.2475,
          1.5708, -0.6932]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8086, -0.8059, -0.2684, -0.6582, -0.3130, -0.5739, -1.5708,  0.2478,
          1.5708, -0.6932]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8190, -0.8057, -0.2684, -0.6582, -0.3126, -0.5739, -1.5708,  0.2478,
          1.5708, -0.6930]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8385, -0.8058, -0.2684, -0.6582, -0.3127, -0.5739, -1.5708,  0.2476,
          1.5708, -0.6931]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8601, -0.8057, -0.2684, -0.6582, -0.3125, -0.5739, -1.5708,  0.2474,
          1.5708, -0.6930]], dtype=torch.float64, requires_grad=True)
Epoch 40 / 50 . Accuracy: 0.835000. Loss: 0.565284. Time: 6.503760
Validate after epoch 40 with seed 4529545
Val Accuracy: 0.820000, Val Loss: 0.632592 
Start training epoch 41 with seed 2643983 
Quantum circuit at the beginning of epoch 41
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8927, -0.8053, -0.2684, -0.6582, -0.3122, -0.5739, -1.5708,  0.2470,
          1.5708, -0.6927]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8941, -0.8055, -0.2684, -0.6582, -0.3119, -0.5739, -1.5708,  0.2468,
          1.5708, -0.6928]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8826, -0.8057, -0.2684, -0.6582, -0.3116, -0.5739, -1.5708,  0.2466,
          1.5708, -0.6930]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8731, -0.8055, -0.2684, -0.6582, -0.3115, -0.5739, -1.5708,  0.2462,
          1.5708, -0.6928]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8734, -0.8051, -0.2684, -0.6582, -0.3113, -0.5739, -1.5708,  0.2456,
          1.5708, -0.6925]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8670, -0.8049, -0.2684, -0.6582, -0.3108, -0.5739, -1.5708,  0.2454,
          1.5708, -0.6923]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8576, -0.8048, -0.2684, -0.6582, -0.3106, -0.5739, -1.5708,  0.2453,
          1.5708, -0.6923]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8429, -0.8048, -0.2684, -0.6582, -0.3105, -0.5739, -1.5708,  0.2451,
          1.5708, -0.6922]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8342, -0.8045, -0.2684, -0.6582, -0.3104, -0.5739, -1.5708,  0.2449,
          1.5708, -0.6920]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8187, -0.8041, -0.2684, -0.6582, -0.3100, -0.5739, -1.5708,  0.2451,
          1.5708, -0.6917]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7965, -0.8031, -0.2684, -0.6582, -0.3098, -0.5739, -1.5707,  0.2454,
          1.5708, -0.6909]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7769, -0.8022, -0.2684, -0.6582, -0.3096, -0.5739, -1.5706,  0.2454,
          1.5708, -0.6902]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7711, -0.8016, -0.2684, -0.6582, -0.3095, -0.5739, -1.5707,  0.2455,
          1.5708, -0.6897]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7820, -0.8013, -0.2684, -0.6582, -0.3095, -0.5739, -1.5708,  0.2456,
          1.5708, -0.6895]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7959, -0.8015, -0.2684, -0.6582, -0.3097, -0.5739, -1.5709,  0.2455,
          1.5708, -0.6897]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8039, -0.8017, -0.2684, -0.6582, -0.3094, -0.5739, -1.5709,  0.2452,
          1.5708, -0.6898]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8076, -0.8018, -0.2684, -0.6582, -0.3092, -0.5739, -1.5709,  0.2450,
          1.5708, -0.6899]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8195, -0.8020, -0.2684, -0.6582, -0.3090, -0.5739, -1.5707,  0.2446,
          1.5708, -0.6900]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8251, -0.8022, -0.2684, -0.6582, -0.3089, -0.5739, -1.5707,  0.2445,
          1.5708, -0.6902]], dtype=torch.float64, requires_grad=True)
Epoch 41 / 50 . Accuracy: 0.850000. Loss: 0.531230. Time: 6.506832
Validate after epoch 41 with seed 2643983
Val Accuracy: 0.830000, Val Loss: 0.573943 
Start training epoch 42 with seed 4407926 
Quantum circuit at the beginning of epoch 42
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8412, -0.8027, -0.2684, -0.6582, -0.3089, -0.5739, -1.5707,  0.2446,
          1.5708, -0.6906]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8400, -0.8021, -0.2684, -0.6582, -0.3085, -0.5739, -1.5708,  0.2448,
          1.5708, -0.6901]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8318, -0.8015, -0.2684, -0.6582, -0.3081, -0.5739, -1.5708,  0.2450,
          1.5708, -0.6897]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8235, -0.8007, -0.2684, -0.6582, -0.3077, -0.5739, -1.5708,  0.2451,
          1.5708, -0.6890]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8108, -0.7999, -0.2684, -0.6582, -0.3073, -0.5739, -1.5708,  0.2450,
          1.5708, -0.6883]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7996, -0.7992, -0.2684, -0.6582, -0.3072, -0.5739, -1.5708,  0.2448,
          1.5708, -0.6878]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7832, -0.7987, -0.2684, -0.6582, -0.3066, -0.5739, -1.5708,  0.2444,
          1.5708, -0.6874]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7822, -0.7984, -0.2684, -0.6582, -0.3062, -0.5739, -1.5708,  0.2441,
          1.5708, -0.6872]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7795, -0.7983, -0.2684, -0.6582, -0.3062, -0.5739, -1.5708,  0.2439,
          1.5708, -0.6871]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7759, -0.7979, -0.2684, -0.6582, -0.3060, -0.5739, -1.5708,  0.2437,
          1.5708, -0.6868]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7701, -0.7976, -0.2684, -0.6582, -0.3059, -0.5739, -1.5708,  0.2436,
          1.5708, -0.6865]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7560, -0.7973, -0.2684, -0.6582, -0.3056, -0.5739, -1.5708,  0.2435,
          1.5708, -0.6862]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7472, -0.7969, -0.2684, -0.6582, -0.3052, -0.5739, -1.5708,  0.2431,
          1.5708, -0.6860]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7397, -0.7971, -0.2684, -0.6582, -0.3049, -0.5739, -1.5708,  0.2428,
          1.5708, -0.6861]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7538, -0.7969, -0.2684, -0.6582, -0.3048, -0.5739, -1.5708,  0.2427,
          1.5708, -0.6859]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7735, -0.7964, -0.2684, -0.6582, -0.3048, -0.5739, -1.5708,  0.2426,
          1.5708, -0.6856]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7807, -0.7962, -0.2684, -0.6582, -0.3046, -0.5739, -1.5708,  0.2424,
          1.5708, -0.6854]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7798, -0.7964, -0.2684, -0.6582, -0.3041, -0.5739, -1.5708,  0.2423,
          1.5708, -0.6855]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7987, -0.7966, -0.2684, -0.6582, -0.3041, -0.5739, -1.5708,  0.2422,
          1.5708, -0.6857]], dtype=torch.float64, requires_grad=True)
Epoch 42 / 50 . Accuracy: 0.805000. Loss: 0.628291. Time: 6.483179
Validate after epoch 42 with seed 4407926
Val Accuracy: 0.850000, Val Loss: 0.462930 
Start training epoch 43 with seed 3019847 
Quantum circuit at the beginning of epoch 43
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8301, -0.7961, -0.2684, -0.6582, -0.3042, -0.5739, -1.5708,  0.2423,
          1.5708, -0.6853]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8411, -0.7957, -0.2684, -0.6582, -0.3044, -0.5739, -1.5708,  0.2420,
          1.5708, -0.6849]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8366, -0.7958, -0.2684, -0.6582, -0.3047, -0.5739, -1.5708,  0.2417,
          1.5708, -0.6851]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8262, -0.7967, -0.2684, -0.6582, -0.3047, -0.5739, -1.5708,  0.2413,
          1.5708, -0.6857]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8280, -0.7972, -0.2684, -0.6582, -0.3048, -0.5739, -1.5708,  0.2408,
          1.5708, -0.6861]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8296, -0.7974, -0.2684, -0.6582, -0.3045, -0.5739, -1.5708,  0.2401,
          1.5708, -0.6863]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8181, -0.7975, -0.2684, -0.6582, -0.3046, -0.5739, -1.5708,  0.2399,
          1.5708, -0.6864]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8090, -0.7973, -0.2684, -0.6582, -0.3045, -0.5739, -1.5708,  0.2399,
          1.5708, -0.6862]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8143, -0.7969, -0.2684, -0.6582, -0.3044, -0.5739, -1.5708,  0.2400,
          1.5708, -0.6859]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8270, -0.7968, -0.2684, -0.6582, -0.3044, -0.5739, -1.5708,  0.2399,
          1.5708, -0.6859]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8262, -0.7966, -0.2684, -0.6582, -0.3044, -0.5739, -1.5708,  0.2397,
          1.5708, -0.6857]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8280, -0.7968, -0.2684, -0.6582, -0.3045, -0.5739, -1.5708,  0.2394,
          1.5708, -0.6858]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8320, -0.7968, -0.2684, -0.6582, -0.3045, -0.5739, -1.5708,  0.2392,
          1.5708, -0.6859]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8373, -0.7969, -0.2684, -0.6582, -0.3043, -0.5739, -1.5708,  0.2390,
          1.5708, -0.6859]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8445, -0.7963, -0.2684, -0.6582, -0.3039, -0.5739, -1.5708,  0.2386,
          1.5708, -0.6855]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8279, -0.7962, -0.2684, -0.6582, -0.3037, -0.5739, -1.5708,  0.2382,
          1.5708, -0.6854]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8066, -0.7962, -0.2684, -0.6582, -0.3035, -0.5739, -1.5708,  0.2377,
          1.5708, -0.6853]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7992, -0.7961, -0.2684, -0.6582, -0.3033, -0.5739, -1.5708,  0.2374,
          1.5708, -0.6853]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7966, -0.7956, -0.2684, -0.6582, -0.3029, -0.5739, -1.5708,  0.2371,
          1.5708, -0.6849]], dtype=torch.float64, requires_grad=True)
Epoch 43 / 50 . Accuracy: 0.840000. Loss: 0.551189. Time: 6.498653
Validate after epoch 43 with seed 3019847
Val Accuracy: 0.780000, Val Loss: 0.720410 
Start training epoch 44 with seed 2389387 
Quantum circuit at the beginning of epoch 44
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7898, -0.7942, -0.2684, -0.6582, -0.3023, -0.5739, -1.5708,  0.2369,
          1.5708, -0.6838]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7784, -0.7942, -0.2684, -0.6582, -0.3024, -0.5739, -1.5708,  0.2370,
          1.5708, -0.6838]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7716, -0.7940, -0.2684, -0.6582, -0.3025, -0.5739, -1.5708,  0.2368,
          1.5708, -0.6836]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7663, -0.7935, -0.2684, -0.6582, -0.3028, -0.5739, -1.5708,  0.2367,
          1.5708, -0.6832]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7726, -0.7935, -0.2684, -0.6582, -0.3033, -0.5739, -1.5708,  0.2368,
          1.5708, -0.6832]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7783, -0.7933, -0.2684, -0.6582, -0.3037, -0.5739, -1.5708,  0.2367,
          1.5708, -0.6830]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7819, -0.7931, -0.2684, -0.6582, -0.3039, -0.5739, -1.5708,  0.2367,
          1.5708, -0.6829]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7661, -0.7927, -0.2684, -0.6582, -0.3040, -0.5739, -1.5708,  0.2365,
          1.5708, -0.6826]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7601, -0.7926, -0.2684, -0.6582, -0.3038, -0.5739, -1.5708,  0.2364,
          1.5708, -0.6824]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7717, -0.7926, -0.2684, -0.6582, -0.3035, -0.5739, -1.5708,  0.2363,
          1.5708, -0.6824]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7839, -0.7925, -0.2684, -0.6582, -0.3036, -0.5739, -1.5708,  0.2360,
          1.5708, -0.6824]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8051, -0.7919, -0.2684, -0.6582, -0.3038, -0.5739, -1.5708,  0.2361,
          1.5708, -0.6819]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8163, -0.7914, -0.2684, -0.6582, -0.3035, -0.5739, -1.5708,  0.2361,
          1.5708, -0.6815]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8295, -0.7910, -0.2684, -0.6582, -0.3032, -0.5739, -1.5708,  0.2359,
          1.5708, -0.6812]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8333, -0.7908, -0.2684, -0.6582, -0.3029, -0.5739, -1.5708,  0.2356,
          1.5708, -0.6810]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8322, -0.7906, -0.2684, -0.6582, -0.3028, -0.5739, -1.5708,  0.2355,
          1.5708, -0.6809]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8258, -0.7904, -0.2684, -0.6582, -0.3027, -0.5739, -1.5708,  0.2352,
          1.5708, -0.6807]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8170, -0.7901, -0.2684, -0.6582, -0.3023, -0.5739, -1.5708,  0.2348,
          1.5708, -0.6804]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8110, -0.7896, -0.2684, -0.6582, -0.3022, -0.5739, -1.5708,  0.2344,
          1.5708, -0.6801]], dtype=torch.float64, requires_grad=True)
Epoch 44 / 50 . Accuracy: 0.780000. Loss: 0.611601. Time: 6.606989
Validate after epoch 44 with seed 2389387
Val Accuracy: 0.860000, Val Loss: 0.544920 
Start training epoch 45 with seed 6358673 
Quantum circuit at the beginning of epoch 45
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7904, -0.7880, -0.2684, -0.6582, -0.3021, -0.5739, -1.5708,  0.2347,
          1.5708, -0.6788]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7777, -0.7871, -0.2684, -0.6582, -0.3022, -0.5739, -1.5708,  0.2348,
          1.5708, -0.6781]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7593, -0.7866, -0.2684, -0.6582, -0.3023, -0.5739, -1.5708,  0.2347,
          1.5708, -0.6777]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7452, -0.7865, -0.2684, -0.6582, -0.3022, -0.5739, -1.5708,  0.2344,
          1.5708, -0.6775]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7362, -0.7864, -0.2684, -0.6582, -0.3021, -0.5739, -1.5708,  0.2342,
          1.5708, -0.6774]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7350, -0.7861, -0.2684, -0.6582, -0.3021, -0.5739, -1.5708,  0.2341,
          1.5708, -0.6772]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7321, -0.7854, -0.2684, -0.6582, -0.3021, -0.5739, -1.5708,  0.2340,
          1.5708, -0.6766]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7260, -0.7848, -0.2684, -0.6582, -0.3022, -0.5739, -1.5708,  0.2339,
          1.5708, -0.6762]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7240, -0.7846, -0.2684, -0.6582, -0.3022, -0.5739, -1.5708,  0.2337,
          1.5708, -0.6760]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7324, -0.7845, -0.2684, -0.6582, -0.3024, -0.5739, -1.5708,  0.2337,
          1.5708, -0.6759]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7440, -0.7844, -0.2684, -0.6582, -0.3028, -0.5739, -1.5708,  0.2339,
          1.5708, -0.6759]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7563, -0.7844, -0.2684, -0.6582, -0.3032, -0.5739, -1.5708,  0.2341,
          1.5708, -0.6758]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7605, -0.7845, -0.2684, -0.6582, -0.3034, -0.5739, -1.5708,  0.2340,
          1.5708, -0.6759]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7564, -0.7844, -0.2684, -0.6582, -0.3036, -0.5739, -1.5708,  0.2341,
          1.5708, -0.6759]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7590, -0.7843, -0.2684, -0.6582, -0.3038, -0.5739, -1.5708,  0.2340,
          1.5708, -0.6758]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7606, -0.7842, -0.2684, -0.6582, -0.3039, -0.5739, -1.5708,  0.2340,
          1.5708, -0.6757]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7631, -0.7840, -0.2684, -0.6582, -0.3040, -0.5739, -1.5708,  0.2338,
          1.5708, -0.6755]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7468, -0.7836, -0.2684, -0.6582, -0.3034, -0.5739, -1.5708,  0.2339,
          1.5708, -0.6752]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7368, -0.7834, -0.2684, -0.6582, -0.3029, -0.5739, -1.5708,  0.2337,
          1.5708, -0.6750]], dtype=torch.float64, requires_grad=True)
Epoch 45 / 50 . Accuracy: 0.825000. Loss: 0.583096. Time: 6.610565
Validate after epoch 45 with seed 6358673
Val Accuracy: 0.840000, Val Loss: 0.567849 
Start training epoch 46 with seed 91566 
Quantum circuit at the beginning of epoch 46
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7177, -0.7834, -0.2684, -0.6582, -0.3030, -0.5739, -1.5708,  0.2333,
          1.5708, -0.6750]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6956, -0.7831, -0.2684, -0.6582, -0.3029, -0.5739, -1.5707,  0.2328,
          1.5708, -0.6748]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6816, -0.7826, -0.2684, -0.6582, -0.3029, -0.5739, -1.5708,  0.2323,
          1.5708, -0.6744]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6813, -0.7824, -0.2684, -0.6582, -0.3029, -0.5739, -1.5708,  0.2318,
          1.5708, -0.6742]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6817, -0.7822, -0.2684, -0.6582, -0.3027, -0.5739, -1.5708,  0.2314,
          1.5708, -0.6741]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6978, -0.7820, -0.2684, -0.6582, -0.3024, -0.5739, -1.5708,  0.2311,
          1.5708, -0.6739]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7148, -0.7818, -0.2684, -0.6582, -0.3023, -0.5739, -1.5708,  0.2310,
          1.5708, -0.6738]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7463, -0.7815, -0.2684, -0.6582, -0.3023, -0.5739, -1.5708,  0.2309,
          1.5708, -0.6735]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7634, -0.7819, -0.2684, -0.6582, -0.3025, -0.5739, -1.5708,  0.2307,
          1.5708, -0.6738]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7553, -0.7821, -0.2684, -0.6582, -0.3025, -0.5739, -1.5707,  0.2307,
          1.5708, -0.6740]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7411, -0.7820, -0.2684, -0.6582, -0.3030, -0.5739, -1.5707,  0.2309,
          1.5708, -0.6739]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7255, -0.7815, -0.2684, -0.6582, -0.3032, -0.5739, -1.5704,  0.2310,
          1.5708, -0.6735]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7138, -0.7816, -0.2684, -0.6582, -0.3026, -0.5739, -1.5704,  0.2308,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7132, -0.7818, -0.2684, -0.6582, -0.3020, -0.5739, -1.5707,  0.2304,
          1.5708, -0.6737]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7111, -0.7816, -0.2684, -0.6582, -0.3016, -0.5739, -1.5710,  0.2301,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7132, -0.7816, -0.2684, -0.6582, -0.3015, -0.5739, -1.5710,  0.2299,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7127, -0.7815, -0.2684, -0.6582, -0.3012, -0.5739, -1.5711,  0.2298,
          1.5708, -0.6735]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7154, -0.7814, -0.2684, -0.6582, -0.3009, -0.5739, -1.5710,  0.2296,
          1.5708, -0.6734]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7084, -0.7817, -0.2684, -0.6582, -0.3009, -0.5739, -1.5708,  0.2293,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Epoch 46 / 50 . Accuracy: 0.840000. Loss: 0.568939. Time: 6.557308
Validate after epoch 46 with seed 91566
Val Accuracy: 0.800000, Val Loss: 0.599526 
Start training epoch 47 with seed 5528267 
Quantum circuit at the beginning of epoch 47
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7068, -0.7822, -0.2684, -0.6582, -0.3008, -0.5739, -1.5707,  0.2291,
          1.5708, -0.6741]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7076, -0.7824, -0.2684, -0.6582, -0.3009, -0.5739, -1.5708,  0.2290,
          1.5708, -0.6742]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7034, -0.7826, -0.2684, -0.6582, -0.3013, -0.5739, -1.5709,  0.2291,
          1.5708, -0.6744]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6952, -0.7825, -0.2684, -0.6582, -0.3015, -0.5739, -1.5710,  0.2289,
          1.5708, -0.6743]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6883, -0.7827, -0.2684, -0.6582, -0.3014, -0.5739, -1.5711,  0.2289,
          1.5708, -0.6745]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6846, -0.7827, -0.2684, -0.6582, -0.3015, -0.5739, -1.5708,  0.2289,
          1.5708, -0.6745]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6824, -0.7824, -0.2684, -0.6582, -0.3013, -0.5739, -1.5700,  0.2288,
          1.5708, -0.6743]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6832, -0.7821, -0.2684, -0.6582, -0.3013, -0.5739, -1.5693,  0.2289,
          1.5708, -0.6740]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6935, -0.7817, -0.2684, -0.6582, -0.3012, -0.5739, -1.5701,  0.2289,
          1.5708, -0.6737]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7017, -0.7814, -0.2684, -0.6582, -0.3011, -0.5739, -1.5711,  0.2289,
          1.5708, -0.6734]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7046, -0.7810, -0.2684, -0.6582, -0.3010, -0.5739, -1.5717,  0.2288,
          1.5708, -0.6731]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7079, -0.7805, -0.2684, -0.6582, -0.3006, -0.5739, -1.5720,  0.2288,
          1.5708, -0.6727]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7189, -0.7799, -0.2684, -0.6582, -0.2999, -0.5739, -1.5715,  0.2291,
          1.5708, -0.6722]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7344, -0.7798, -0.2684, -0.6582, -0.2998, -0.5739, -1.5711,  0.2293,
          1.5708, -0.6721]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7488, -0.7793, -0.2684, -0.6582, -0.2996, -0.5739, -1.5706,  0.2295,
          1.5708, -0.6717]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7616, -0.7790, -0.2684, -0.6582, -0.2994, -0.5739, -1.5703,  0.2294,
          1.5708, -0.6715]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7716, -0.7792, -0.2684, -0.6582, -0.2991, -0.5739, -1.5704,  0.2292,
          1.5708, -0.6716]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7710, -0.7794, -0.2684, -0.6582, -0.2993, -0.5739, -1.5706,  0.2290,
          1.5708, -0.6718]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7698, -0.7795, -0.2684, -0.6582, -0.2991, -0.5739, -1.5709,  0.2288,
          1.5708, -0.6719]], dtype=torch.float64, requires_grad=True)
Epoch 47 / 50 . Accuracy: 0.845000. Loss: 0.492899. Time: 6.699086
Validate after epoch 47 with seed 5528267
Val Accuracy: 0.770000, Val Loss: 0.582296 
Start training epoch 48 with seed 3695388 
Quantum circuit at the beginning of epoch 48
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7663, -0.7798, -0.2684, -0.6582, -0.2989, -0.5739, -1.5711,  0.2285,
          1.5708, -0.6721]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7626, -0.7800, -0.2684, -0.6582, -0.2993, -0.5739, -1.5717,  0.2286,
          1.5708, -0.6723]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7524, -0.7799, -0.2684, -0.6582, -0.2997, -0.5739, -1.5717,  0.2286,
          1.5708, -0.6722]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7449, -0.7798, -0.2684, -0.6582, -0.2999, -0.5739, -1.5708,  0.2284,
          1.5708, -0.6722]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7266, -0.7800, -0.2684, -0.6582, -0.3001, -0.5739, -1.5698,  0.2284,
          1.5708, -0.6723]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7048, -0.7802, -0.2684, -0.6582, -0.3002, -0.5739, -1.5693,  0.2287,
          1.5708, -0.6724]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6913, -0.7801, -0.2684, -0.6582, -0.3001, -0.5739, -1.5698,  0.2288,
          1.5708, -0.6724]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6853, -0.7802, -0.2684, -0.6582, -0.3001, -0.5739, -1.5707,  0.2289,
          1.5708, -0.6725]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.6954, -0.7805, -0.2684, -0.6582, -0.3003, -0.5739, -1.5715,  0.2290,
          1.5708, -0.6727]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7080, -0.7807, -0.2684, -0.6582, -0.3003, -0.5739, -1.5711,  0.2291,
          1.5708, -0.6729]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7188, -0.7812, -0.2684, -0.6582, -0.3008, -0.5739, -1.5704,  0.2293,
          1.5708, -0.6733]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7197, -0.7816, -0.2684, -0.6582, -0.3014, -0.5739, -1.5707,  0.2293,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7255, -0.7821, -0.2684, -0.6582, -0.3022, -0.5739, -1.5713,  0.2293,
          1.5708, -0.6740]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7289, -0.7819, -0.2684, -0.6582, -0.3025, -0.5739, -1.5716,  0.2294,
          1.5708, -0.6739]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7288, -0.7814, -0.2684, -0.6582, -0.3021, -0.5739, -1.5715,  0.2295,
          1.5708, -0.6734]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7360, -0.7807, -0.2684, -0.6582, -0.3016, -0.5739, -1.5706,  0.2297,
          1.5708, -0.6729]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7406, -0.7803, -0.2684, -0.6582, -0.3014, -0.5739, -1.5704,  0.2296,
          1.5708, -0.6725]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7416, -0.7801, -0.2684, -0.6582, -0.3013, -0.5739, -1.5707,  0.2295,
          1.5708, -0.6723]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7401, -0.7798, -0.2684, -0.6582, -0.3011, -0.5739, -1.5710,  0.2293,
          1.5708, -0.6722]], dtype=torch.float64, requires_grad=True)
Epoch 48 / 50 . Accuracy: 0.860000. Loss: 0.472724. Time: 6.735412
Validate after epoch 48 with seed 3695388
Val Accuracy: 0.800000, Val Loss: 0.616113 
Start training epoch 49 with seed 3054369 
Quantum circuit at the beginning of epoch 49
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7497, -0.7789, -0.2684, -0.6582, -0.3002, -0.5739, -1.5709,  0.2291,
          1.5708, -0.6714]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7610, -0.7790, -0.2684, -0.6582, -0.2998, -0.5739, -1.5704,  0.2290,
          1.5708, -0.6715]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7659, -0.7794, -0.2684, -0.6582, -0.2997, -0.5739, -1.5702,  0.2289,
          1.5708, -0.6718]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7833, -0.7803, -0.2684, -0.6582, -0.2995, -0.5739, -1.5703,  0.2291,
          1.5708, -0.6726]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8127, -0.7810, -0.2684, -0.6582, -0.2991, -0.5739, -1.5695,  0.2293,
          1.5708, -0.6731]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8391, -0.7817, -0.2684, -0.6582, -0.2990, -0.5739, -1.5693,  0.2292,
          1.5708, -0.6736]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8554, -0.7820, -0.2684, -0.6582, -0.2991, -0.5739, -1.5686,  0.2290,
          1.5708, -0.6739]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8675, -0.7823, -0.2684, -0.6582, -0.2995, -0.5739, -1.5701,  0.2287,
          1.5708, -0.6741]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8771, -0.7824, -0.2684, -0.6582, -0.2996, -0.5739, -1.5716,  0.2284,
          1.5708, -0.6742]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8936, -0.7826, -0.2684, -0.6582, -0.2995, -0.5739, -1.5710,  0.2281,
          1.5708, -0.6744]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9079, -0.7835, -0.2684, -0.6582, -0.2993, -0.5739, -1.5694,  0.2276,
          1.5708, -0.6752]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9155, -0.7843, -0.2684, -0.6582, -0.2995, -0.5739, -1.5689,  0.2271,
          1.5708, -0.6758]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.9124, -0.7850, -0.2684, -0.6582, -0.2995, -0.5739, -1.5698,  0.2268,
          1.5708, -0.6763]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8976, -0.7852, -0.2684, -0.6582, -0.2994, -0.5739, -1.5700,  0.2268,
          1.5708, -0.6765]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8789, -0.7851, -0.2684, -0.6582, -0.2994, -0.5739, -1.5711,  0.2268,
          1.5708, -0.6764]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8670, -0.7848, -0.2684, -0.6582, -0.2992, -0.5739, -1.5715,  0.2269,
          1.5708, -0.6762]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8522, -0.7845, -0.2684, -0.6582, -0.2988, -0.5739, -1.5717,  0.2269,
          1.5708, -0.6760]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8439, -0.7847, -0.2684, -0.6582, -0.2987, -0.5739, -1.5705,  0.2272,
          1.5708, -0.6761]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.8322, -0.7846, -0.2684, -0.6582, -0.2987, -0.5739, -1.5697,  0.2273,
          1.5708, -0.6760]], dtype=torch.float64, requires_grad=True)
Epoch 49 / 50 . Accuracy: 0.845000. Loss: 0.554900. Time: 6.732273
Validate after epoch 49 with seed 3054369
Val Accuracy: 0.830000, Val Loss: 0.614248 
Start training epoch 50 with seed 5436884 
Quantum circuit at the beginning of epoch 50
Training step 5. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7995, -0.7837, -0.2684, -0.6582, -0.2987, -0.5739, -1.5680,  0.2274,
          1.5708, -0.6753]], dtype=torch.float64, requires_grad=True)
Training step 10. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7922, -0.7838, -0.2684, -0.6582, -0.2985, -0.5739, -1.5624,  0.2275,
          1.5708, -0.6754]], dtype=torch.float64, requires_grad=True)
Training step 15. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7895, -0.7844, -0.2684, -0.6582, -0.2984, -0.5739, -1.5605,  0.2276,
          1.5708, -0.6758]], dtype=torch.float64, requires_grad=True)
Training step 20. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7838, -0.7848, -0.2684, -0.6582, -0.2981, -0.5739, -1.5528,  0.2278,
          1.5708, -0.6762]], dtype=torch.float64, requires_grad=True)
Training step 25. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7761, -0.7850, -0.2684, -0.6582, -0.2980, -0.5739, -1.5290,  0.2282,
          1.5708, -0.6763]], dtype=torch.float64, requires_grad=True)
Training step 30. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7713, -0.7850, -0.2684, -0.6582, -0.2980, -0.5739, -1.5391,  0.2284,
          1.5708, -0.6763]], dtype=torch.float64, requires_grad=True)
Training step 35. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7622, -0.7850, -0.2684, -0.6582, -0.2982, -0.5739, -1.5133,  0.2286,
          1.5708, -0.6763]], dtype=torch.float64, requires_grad=True)
Training step 40. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7643, -0.7850, -0.2684, -0.6582, -0.2988, -0.5739, -1.5400,  0.2285,
          1.5708, -0.6764]], dtype=torch.float64, requires_grad=True)
Training step 45. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7728, -0.7851, -0.2684, -0.6582, -0.2996, -0.5739, -1.5962,  0.2283,
          1.5708, -0.6764]], dtype=torch.float64, requires_grad=True)
Training step 50. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7737, -0.7851, -0.2684, -0.6582, -0.2998, -0.5739, -1.5928,  0.2282,
          1.5708, -0.6764]], dtype=torch.float64, requires_grad=True)
Training step 55. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7749, -0.7850, -0.2684, -0.6582, -0.3000, -0.5739, -1.5647,  0.2281,
          1.5708, -0.6763]], dtype=torch.float64, requires_grad=True)
Training step 60. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7599, -0.7849, -0.2684, -0.6582, -0.3000, -0.5739, -1.5472,  0.2280,
          1.5708, -0.6762]], dtype=torch.float64, requires_grad=True)
Training step 65. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7572, -0.7844, -0.2684, -0.6582, -0.2997, -0.5739, -1.5458,  0.2279,
          1.5708, -0.6758]], dtype=torch.float64, requires_grad=True)
Training step 70. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7541, -0.7840, -0.2684, -0.6582, -0.2993, -0.5739, -1.5460,  0.2279,
          1.5708, -0.6756]], dtype=torch.float64, requires_grad=True)
Training step 75. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7462, -0.7838, -0.2684, -0.6582, -0.2992, -0.5739, -1.5495,  0.2277,
          1.5708, -0.6753]], dtype=torch.float64, requires_grad=True)
Training step 80. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7415, -0.7839, -0.2684, -0.6582, -0.2989, -0.5739, -1.5706,  0.2275,
          1.5708, -0.6755]], dtype=torch.float64, requires_grad=True)
Training step 85. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7445, -0.7841, -0.2684, -0.6582, -0.2987, -0.5739, -1.5924,  0.2273,
          1.5708, -0.6756]], dtype=torch.float64, requires_grad=True)
Training step 90. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7458, -0.7840, -0.2684, -0.6582, -0.2986, -0.5739, -1.5936,  0.2271,
          1.5708, -0.6755]], dtype=torch.float64, requires_grad=True)
Training step 95. Output current quantum circuit weights.
Parameter containing:
tensor([[-0.7416, -0.7839, -0.2684, -0.6582, -0.2984, -0.5739, -1.5799,  0.2268,
          1.5708, -0.6754]], dtype=torch.float64, requires_grad=True)
Epoch 50 / 50 . Accuracy: 0.835000. Loss: 0.611157. Time: 6.734127
Validate after epoch 50 with seed 5436884
Val Accuracy: 0.810000, Val Loss: 0.596355 
Training Execution time: 09:23:39.00
Conducting Test
Test Accuracy: 0.836000, Test Loss: 0.534081 
